// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdvertiseObject.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AdvertiseObject.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class AdvertiseObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdvertiseObject> {
} _AdvertiseObject_default_instance_;

namespace protobuf_AdvertiseObject_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertiseObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertiseObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertiseObject, _snsadobject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdvertiseObject, _adinfo_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(AdvertiseObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdvertiseObject_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AdvertiseObject.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _AdvertiseObject_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_SnsADObject_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::InitDefaults();
  _AdvertiseObject_default_instance_.DefaultConstruct();
  _AdvertiseObject_default_instance_.get_mutable()->_snsadobject_ = const_cast< ::MMPro::micromsg::SnsADObject*>(
      ::MMPro::micromsg::SnsADObject::internal_default_instance());
  _AdvertiseObject_default_instance_.get_mutable()->_adinfo_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025AdvertiseObject.proto\022\016MMPro.micromsg\032"
      "\021SnsADObject.proto\032\027SKBuiltinString_t.pr"
      "oto\"x\n\017AdvertiseObject\0221\n\014_SnsADObject\030\001"
      " \002(\0132\033.MMPro.micromsg.SnsADObject\0222\n\007_AD"
      "Info\030\002 \001(\0132!.MMPro.micromsg.SKBuiltinStr"
      "ing_t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 205);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AdvertiseObject.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_SnsADObject_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_AdvertiseObject_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdvertiseObject::kSnsADObjectFieldNumber;
const int AdvertiseObject::kADInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdvertiseObject::AdvertiseObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AdvertiseObject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.AdvertiseObject)
}
AdvertiseObject::AdvertiseObject(const AdvertiseObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__snsadobject()) {
    _snsadobject_ = new ::MMPro::micromsg::SnsADObject(*from._snsadobject_);
  } else {
    _snsadobject_ = NULL;
  }
  if (from.has__adinfo()) {
    _adinfo_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._adinfo_);
  } else {
    _adinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.AdvertiseObject)
}

void AdvertiseObject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&_snsadobject_, 0, reinterpret_cast<char*>(&_adinfo_) -
    reinterpret_cast<char*>(&_snsadobject_) + sizeof(_adinfo_));
}

AdvertiseObject::~AdvertiseObject() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.AdvertiseObject)
  SharedDtor();
}

void AdvertiseObject::SharedDtor() {
  if (this != internal_default_instance()) {
    delete _snsadobject_;
  }
  if (this != internal_default_instance()) {
    delete _adinfo_;
  }
}

void AdvertiseObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdvertiseObject::descriptor() {
  protobuf_AdvertiseObject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdvertiseObject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdvertiseObject& AdvertiseObject::default_instance() {
  protobuf_AdvertiseObject_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdvertiseObject* AdvertiseObject::New(::google::protobuf::Arena* arena) const {
  AdvertiseObject* n = new AdvertiseObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdvertiseObject::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.AdvertiseObject)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__snsadobject()) {
      GOOGLE_DCHECK(_snsadobject_ != NULL);
      _snsadobject_->::MMPro::micromsg::SnsADObject::Clear();
    }
    if (has__adinfo()) {
      GOOGLE_DCHECK(_adinfo_ != NULL);
      _adinfo_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdvertiseObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.AdvertiseObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.SnsADObject _SnsADObject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__snsadobject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.SKBuiltinString_t _ADInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__adinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.AdvertiseObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.AdvertiseObject)
  return false;
#undef DO_
}

void AdvertiseObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.AdvertiseObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.SnsADObject _SnsADObject = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_snsadobject_, output);
  }

  // optional .MMPro.micromsg.SKBuiltinString_t _ADInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->_adinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.AdvertiseObject)
}

::google::protobuf::uint8* AdvertiseObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.AdvertiseObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.SnsADObject _SnsADObject = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_snsadobject_, deterministic, target);
  }

  // optional .MMPro.micromsg.SKBuiltinString_t _ADInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->_adinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.AdvertiseObject)
  return target;
}

size_t AdvertiseObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.AdvertiseObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .MMPro.micromsg.SnsADObject _SnsADObject = 1;
  if (has__snsadobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_snsadobject_);
  }
  // optional .MMPro.micromsg.SKBuiltinString_t _ADInfo = 2;
  if (has__adinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_adinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdvertiseObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.AdvertiseObject)
  GOOGLE_DCHECK_NE(&from, this);
  const AdvertiseObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdvertiseObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.AdvertiseObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.AdvertiseObject)
    MergeFrom(*source);
  }
}

void AdvertiseObject::MergeFrom(const AdvertiseObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.AdvertiseObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable__snsadobject()->::MMPro::micromsg::SnsADObject::MergeFrom(from._snsadobject());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable__adinfo()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._adinfo());
    }
  }
}

void AdvertiseObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.AdvertiseObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdvertiseObject::CopyFrom(const AdvertiseObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.AdvertiseObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdvertiseObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has__snsadobject()) {
    if (!this->_snsadobject_->IsInitialized()) return false;
  }
  return true;
}

void AdvertiseObject::Swap(AdvertiseObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdvertiseObject::InternalSwap(AdvertiseObject* other) {
  std::swap(_snsadobject_, other->_snsadobject_);
  std::swap(_adinfo_, other->_adinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdvertiseObject::GetMetadata() const {
  protobuf_AdvertiseObject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdvertiseObject_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdvertiseObject

// required .MMPro.micromsg.SnsADObject _SnsADObject = 1;
bool AdvertiseObject::has__snsadobject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AdvertiseObject::set_has__snsadobject() {
  _has_bits_[0] |= 0x00000001u;
}
void AdvertiseObject::clear_has__snsadobject() {
  _has_bits_[0] &= ~0x00000001u;
}
void AdvertiseObject::clear__snsadobject() {
  if (_snsadobject_ != NULL) _snsadobject_->::MMPro::micromsg::SnsADObject::Clear();
  clear_has__snsadobject();
}
const ::MMPro::micromsg::SnsADObject& AdvertiseObject::_snsadobject() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AdvertiseObject._SnsADObject)
  return _snsadobject_ != NULL ? *_snsadobject_
                         : *::MMPro::micromsg::SnsADObject::internal_default_instance();
}
::MMPro::micromsg::SnsADObject* AdvertiseObject::mutable__snsadobject() {
  set_has__snsadobject();
  if (_snsadobject_ == NULL) {
    _snsadobject_ = new ::MMPro::micromsg::SnsADObject;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AdvertiseObject._SnsADObject)
  return _snsadobject_;
}
::MMPro::micromsg::SnsADObject* AdvertiseObject::release__snsadobject() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AdvertiseObject._SnsADObject)
  clear_has__snsadobject();
  ::MMPro::micromsg::SnsADObject* temp = _snsadobject_;
  _snsadobject_ = NULL;
  return temp;
}
void AdvertiseObject::set_allocated__snsadobject(::MMPro::micromsg::SnsADObject* _snsadobject) {
  delete _snsadobject_;
  _snsadobject_ = _snsadobject;
  if (_snsadobject) {
    set_has__snsadobject();
  } else {
    clear_has__snsadobject();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AdvertiseObject._SnsADObject)
}

// optional .MMPro.micromsg.SKBuiltinString_t _ADInfo = 2;
bool AdvertiseObject::has__adinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AdvertiseObject::set_has__adinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void AdvertiseObject::clear_has__adinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void AdvertiseObject::clear__adinfo() {
  if (_adinfo_ != NULL) _adinfo_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__adinfo();
}
const ::MMPro::micromsg::SKBuiltinString_t& AdvertiseObject::_adinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AdvertiseObject._ADInfo)
  return _adinfo_ != NULL ? *_adinfo_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* AdvertiseObject::mutable__adinfo() {
  set_has__adinfo();
  if (_adinfo_ == NULL) {
    _adinfo_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AdvertiseObject._ADInfo)
  return _adinfo_;
}
::MMPro::micromsg::SKBuiltinString_t* AdvertiseObject::release__adinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AdvertiseObject._ADInfo)
  clear_has__adinfo();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _adinfo_;
  _adinfo_ = NULL;
  return temp;
}
void AdvertiseObject::set_allocated__adinfo(::MMPro::micromsg::SKBuiltinString_t* _adinfo) {
  delete _adinfo_;
  _adinfo_ = _adinfo;
  if (_adinfo) {
    set_has__adinfo();
  } else {
    clear_has__adinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AdvertiseObject._ADInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
