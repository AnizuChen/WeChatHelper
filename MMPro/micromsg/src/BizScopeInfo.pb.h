// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BizScopeInfo.proto

#ifndef PROTOBUF_BizScopeInfo_2eproto__INCLUDED
#define PROTOBUF_BizScopeInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "BizApiInfo.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class BizApiInfo;
class BizApiInfoDefaultTypeInternal;
extern BizApiInfoDefaultTypeInternal _BizApiInfo_default_instance_;
class BizScopeInfo;
class BizScopeInfoDefaultTypeInternal;
extern BizScopeInfoDefaultTypeInternal _BizScopeInfo_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_BizScopeInfo_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_BizScopeInfo_2eproto

// ===================================================================

class BizScopeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.BizScopeInfo) */ {
 public:
  BizScopeInfo();
  virtual ~BizScopeInfo();

  BizScopeInfo(const BizScopeInfo& from);

  inline BizScopeInfo& operator=(const BizScopeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BizScopeInfo& default_instance();

  static inline const BizScopeInfo* internal_default_instance() {
    return reinterpret_cast<const BizScopeInfo*>(
               &_BizScopeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BizScopeInfo* other);

  // implements Message ----------------------------------------------

  inline BizScopeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BizScopeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BizScopeInfo& from);
  void MergeFrom(const BizScopeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BizScopeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MMPro.micromsg.BizApiInfo _ApiList = 5;
  int _apilist_size() const;
  void clear__apilist();
  static const int kApiListFieldNumber = 5;
  const ::MMPro::micromsg::BizApiInfo& _apilist(int index) const;
  ::MMPro::micromsg::BizApiInfo* mutable__apilist(int index);
  ::MMPro::micromsg::BizApiInfo* add__apilist();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizApiInfo >*
      mutable__apilist();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizApiInfo >&
      _apilist() const;

  // optional string _Scope = 1;
  bool has__scope() const;
  void clear__scope();
  static const int kScopeFieldNumber = 1;
  const ::std::string& _scope() const;
  void set__scope(const ::std::string& value);
  #if LANG_CXX11
  void set__scope(::std::string&& value);
  #endif
  void set__scope(const char* value);
  void set__scope(const char* value, size_t size);
  ::std::string* mutable__scope();
  ::std::string* release__scope();
  void set_allocated__scope(::std::string* _scope);

  // optional string _ScopeDesc = 3;
  bool has__scopedesc() const;
  void clear__scopedesc();
  static const int kScopeDescFieldNumber = 3;
  const ::std::string& _scopedesc() const;
  void set__scopedesc(const ::std::string& value);
  #if LANG_CXX11
  void set__scopedesc(::std::string&& value);
  #endif
  void set__scopedesc(const char* value);
  void set__scopedesc(const char* value, size_t size);
  ::std::string* mutable__scopedesc();
  ::std::string* release__scopedesc();
  void set_allocated__scopedesc(::std::string* _scopedesc);

  // required uint32 _ScopeStatus = 2;
  bool has__scopestatus() const;
  void clear__scopestatus();
  static const int kScopeStatusFieldNumber = 2;
  ::google::protobuf::uint32 _scopestatus() const;
  void set__scopestatus(::google::protobuf::uint32 value);

  // required uint32 _ApiCount = 4;
  bool has__apicount() const;
  void clear__apicount();
  static const int kApiCountFieldNumber = 4;
  ::google::protobuf::uint32 _apicount() const;
  void set__apicount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.BizScopeInfo)
 private:
  void set_has__scope();
  void clear_has__scope();
  void set_has__scopestatus();
  void clear_has__scopestatus();
  void set_has__scopedesc();
  void clear_has__scopedesc();
  void set_has__apicount();
  void clear_has__apicount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizApiInfo > _apilist_;
  ::google::protobuf::internal::ArenaStringPtr _scope_;
  ::google::protobuf::internal::ArenaStringPtr _scopedesc_;
  ::google::protobuf::uint32 _scopestatus_;
  ::google::protobuf::uint32 _apicount_;
  friend struct protobuf_BizScopeInfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BizScopeInfo

// optional string _Scope = 1;
inline bool BizScopeInfo::has__scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BizScopeInfo::set_has__scope() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BizScopeInfo::clear_has__scope() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BizScopeInfo::clear__scope() {
  _scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__scope();
}
inline const ::std::string& BizScopeInfo::_scope() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizScopeInfo._Scope)
  return _scope_.GetNoArena();
}
inline void BizScopeInfo::set__scope(const ::std::string& value) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizScopeInfo._Scope)
}
#if LANG_CXX11
inline void BizScopeInfo::set__scope(::std::string&& value) {
  set_has__scope();
  _scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizScopeInfo._Scope)
}
#endif
inline void BizScopeInfo::set__scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizScopeInfo._Scope)
}
inline void BizScopeInfo::set__scope(const char* value, size_t size) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizScopeInfo._Scope)
}
inline ::std::string* BizScopeInfo::mutable__scope() {
  set_has__scope();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizScopeInfo._Scope)
  return _scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizScopeInfo::release__scope() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizScopeInfo._Scope)
  clear_has__scope();
  return _scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizScopeInfo::set_allocated__scope(::std::string* _scope) {
  if (_scope != NULL) {
    set_has__scope();
  } else {
    clear_has__scope();
  }
  _scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _scope);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizScopeInfo._Scope)
}

// required uint32 _ScopeStatus = 2;
inline bool BizScopeInfo::has__scopestatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BizScopeInfo::set_has__scopestatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BizScopeInfo::clear_has__scopestatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BizScopeInfo::clear__scopestatus() {
  _scopestatus_ = 0u;
  clear_has__scopestatus();
}
inline ::google::protobuf::uint32 BizScopeInfo::_scopestatus() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizScopeInfo._ScopeStatus)
  return _scopestatus_;
}
inline void BizScopeInfo::set__scopestatus(::google::protobuf::uint32 value) {
  set_has__scopestatus();
  _scopestatus_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizScopeInfo._ScopeStatus)
}

// optional string _ScopeDesc = 3;
inline bool BizScopeInfo::has__scopedesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BizScopeInfo::set_has__scopedesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BizScopeInfo::clear_has__scopedesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BizScopeInfo::clear__scopedesc() {
  _scopedesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__scopedesc();
}
inline const ::std::string& BizScopeInfo::_scopedesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizScopeInfo._ScopeDesc)
  return _scopedesc_.GetNoArena();
}
inline void BizScopeInfo::set__scopedesc(const ::std::string& value) {
  set_has__scopedesc();
  _scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizScopeInfo._ScopeDesc)
}
#if LANG_CXX11
inline void BizScopeInfo::set__scopedesc(::std::string&& value) {
  set_has__scopedesc();
  _scopedesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizScopeInfo._ScopeDesc)
}
#endif
inline void BizScopeInfo::set__scopedesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__scopedesc();
  _scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizScopeInfo._ScopeDesc)
}
inline void BizScopeInfo::set__scopedesc(const char* value, size_t size) {
  set_has__scopedesc();
  _scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizScopeInfo._ScopeDesc)
}
inline ::std::string* BizScopeInfo::mutable__scopedesc() {
  set_has__scopedesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizScopeInfo._ScopeDesc)
  return _scopedesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizScopeInfo::release__scopedesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizScopeInfo._ScopeDesc)
  clear_has__scopedesc();
  return _scopedesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizScopeInfo::set_allocated__scopedesc(::std::string* _scopedesc) {
  if (_scopedesc != NULL) {
    set_has__scopedesc();
  } else {
    clear_has__scopedesc();
  }
  _scopedesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _scopedesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizScopeInfo._ScopeDesc)
}

// required uint32 _ApiCount = 4;
inline bool BizScopeInfo::has__apicount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BizScopeInfo::set_has__apicount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BizScopeInfo::clear_has__apicount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BizScopeInfo::clear__apicount() {
  _apicount_ = 0u;
  clear_has__apicount();
}
inline ::google::protobuf::uint32 BizScopeInfo::_apicount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizScopeInfo._ApiCount)
  return _apicount_;
}
inline void BizScopeInfo::set__apicount(::google::protobuf::uint32 value) {
  set_has__apicount();
  _apicount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizScopeInfo._ApiCount)
}

// repeated .MMPro.micromsg.BizApiInfo _ApiList = 5;
inline int BizScopeInfo::_apilist_size() const {
  return _apilist_.size();
}
inline void BizScopeInfo::clear__apilist() {
  _apilist_.Clear();
}
inline const ::MMPro::micromsg::BizApiInfo& BizScopeInfo::_apilist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizScopeInfo._ApiList)
  return _apilist_.Get(index);
}
inline ::MMPro::micromsg::BizApiInfo* BizScopeInfo::mutable__apilist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizScopeInfo._ApiList)
  return _apilist_.Mutable(index);
}
inline ::MMPro::micromsg::BizApiInfo* BizScopeInfo::add__apilist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizScopeInfo._ApiList)
  return _apilist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizApiInfo >*
BizScopeInfo::mutable__apilist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizScopeInfo._ApiList)
  return &_apilist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizApiInfo >&
BizScopeInfo::_apilist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizScopeInfo._ApiList)
  return _apilist_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BizScopeInfo_2eproto__INCLUDED
