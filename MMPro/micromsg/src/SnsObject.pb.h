// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SnsObject.proto

#ifndef PROTOBUF_SnsObject_2eproto__INCLUDED
#define PROTOBUF_SnsObject_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "SKBuiltinBuffer_t.pb.h"
#include "SnsCommentInfo.pb.h"
#include "SnsGroup.pb.h"
#include "SKBuiltinString_t.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SnsCommentInfo;
class SnsCommentInfoDefaultTypeInternal;
extern SnsCommentInfoDefaultTypeInternal _SnsCommentInfo_default_instance_;
class SnsGroup;
class SnsGroupDefaultTypeInternal;
extern SnsGroupDefaultTypeInternal _SnsGroup_default_instance_;
class SnsObject;
class SnsObjectDefaultTypeInternal;
extern SnsObjectDefaultTypeInternal _SnsObject_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_SnsObject_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_SnsObject_2eproto

// ===================================================================

class SnsObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.SnsObject) */ {
 public:
  SnsObject();
  virtual ~SnsObject();

  SnsObject(const SnsObject& from);

  inline SnsObject& operator=(const SnsObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnsObject& default_instance();

  static inline const SnsObject* internal_default_instance() {
    return reinterpret_cast<const SnsObject*>(
               &_SnsObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SnsObject* other);

  // implements Message ----------------------------------------------

  inline SnsObject* New() const PROTOBUF_FINAL { return New(NULL); }

  SnsObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnsObject& from);
  void MergeFrom(const SnsObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnsObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MMPro.micromsg.SnsCommentInfo _LikeUserList = 9;
  int _likeuserlist_size() const;
  void clear__likeuserlist();
  static const int kLikeUserListFieldNumber = 9;
  const ::MMPro::micromsg::SnsCommentInfo& _likeuserlist(int index) const;
  ::MMPro::micromsg::SnsCommentInfo* mutable__likeuserlist(int index);
  ::MMPro::micromsg::SnsCommentInfo* add__likeuserlist();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
      mutable__likeuserlist();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
      _likeuserlist() const;

  // repeated .MMPro.micromsg.SnsCommentInfo _CommentUserList = 12;
  int _commentuserlist_size() const;
  void clear__commentuserlist();
  static const int kCommentUserListFieldNumber = 12;
  const ::MMPro::micromsg::SnsCommentInfo& _commentuserlist(int index) const;
  ::MMPro::micromsg::SnsCommentInfo* mutable__commentuserlist(int index);
  ::MMPro::micromsg::SnsCommentInfo* add__commentuserlist();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
      mutable__commentuserlist();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
      _commentuserlist() const;

  // repeated .MMPro.micromsg.SnsCommentInfo _WithUserList = 15;
  int _withuserlist_size() const;
  void clear__withuserlist();
  static const int kWithUserListFieldNumber = 15;
  const ::MMPro::micromsg::SnsCommentInfo& _withuserlist(int index) const;
  ::MMPro::micromsg::SnsCommentInfo* mutable__withuserlist(int index);
  ::MMPro::micromsg::SnsCommentInfo* add__withuserlist();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
      mutable__withuserlist();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
      _withuserlist() const;

  // repeated .MMPro.micromsg.SnsGroup _GroupList = 19;
  int _grouplist_size() const;
  void clear__grouplist();
  static const int kGroupListFieldNumber = 19;
  const ::MMPro::micromsg::SnsGroup& _grouplist(int index) const;
  ::MMPro::micromsg::SnsGroup* mutable__grouplist(int index);
  ::MMPro::micromsg::SnsGroup* add__grouplist();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsGroup >*
      mutable__grouplist();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsGroup >&
      _grouplist() const;

  // repeated .MMPro.micromsg.SKBuiltinString_t _BlackList = 24;
  int _blacklist_size() const;
  void clear__blacklist();
  static const int kBlackListFieldNumber = 24;
  const ::MMPro::micromsg::SKBuiltinString_t& _blacklist(int index) const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__blacklist(int index);
  ::MMPro::micromsg::SKBuiltinString_t* add__blacklist();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >*
      mutable__blacklist();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >&
      _blacklist() const;

  // repeated .MMPro.micromsg.SKBuiltinString_t _GroupUser = 27;
  int _groupuser_size() const;
  void clear__groupuser();
  static const int kGroupUserFieldNumber = 27;
  const ::MMPro::micromsg::SKBuiltinString_t& _groupuser(int index) const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__groupuser(int index);
  ::MMPro::micromsg::SKBuiltinString_t* add__groupuser();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >*
      mutable__groupuser();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >&
      _groupuser() const;

  // optional string _Username = 2;
  bool has__username() const;
  void clear__username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& _username() const;
  void set__username(const ::std::string& value);
  #if LANG_CXX11
  void set__username(::std::string&& value);
  #endif
  void set__username(const char* value);
  void set__username(const char* value, size_t size);
  ::std::string* mutable__username();
  ::std::string* release__username();
  void set_allocated__username(::std::string* _username);

  // optional string _Nickname = 3;
  bool has__nickname() const;
  void clear__nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& _nickname() const;
  void set__nickname(const ::std::string& value);
  #if LANG_CXX11
  void set__nickname(::std::string&& value);
  #endif
  void set__nickname(const char* value);
  void set__nickname(const char* value, size_t size);
  ::std::string* mutable__nickname();
  ::std::string* release__nickname();
  void set_allocated__nickname(::std::string* _nickname);

  // optional string _ReferUsername = 21;
  bool has__referusername() const;
  void clear__referusername();
  static const int kReferUsernameFieldNumber = 21;
  const ::std::string& _referusername() const;
  void set__referusername(const ::std::string& value);
  #if LANG_CXX11
  void set__referusername(::std::string&& value);
  #endif
  void set__referusername(const char* value);
  void set__referusername(const char* value, size_t size);
  ::std::string* mutable__referusername();
  ::std::string* release__referusername();
  void set_allocated__referusername(::std::string* _referusername);

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
  bool has__objectdesc() const;
  void clear__objectdesc();
  static const int kObjectDescFieldNumber = 5;
  const ::MMPro::micromsg::SKBuiltinBuffer_t& _objectdesc() const;
  ::MMPro::micromsg::SKBuiltinBuffer_t* mutable__objectdesc();
  ::MMPro::micromsg::SKBuiltinBuffer_t* release__objectdesc();
  void set_allocated__objectdesc(::MMPro::micromsg::SKBuiltinBuffer_t* _objectdesc);

  // required uint64 _Id = 1;
  bool has__id() const;
  void clear__id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 _id() const;
  void set__id(::google::protobuf::uint64 value);

  // required uint32 _CreateTime = 4;
  bool has__createtime() const;
  void clear__createtime();
  static const int kCreateTimeFieldNumber = 4;
  ::google::protobuf::uint32 _createtime() const;
  void set__createtime(::google::protobuf::uint32 value);

  // required uint32 _LikeFlag = 6;
  bool has__likeflag() const;
  void clear__likeflag();
  static const int kLikeFlagFieldNumber = 6;
  ::google::protobuf::uint32 _likeflag() const;
  void set__likeflag(::google::protobuf::uint32 value);

  // required uint32 _LikeCount = 7;
  bool has__likecount() const;
  void clear__likecount();
  static const int kLikeCountFieldNumber = 7;
  ::google::protobuf::uint32 _likecount() const;
  void set__likecount(::google::protobuf::uint32 value);

  // required uint32 _LikeUserListCount = 8;
  bool has__likeuserlistcount() const;
  void clear__likeuserlistcount();
  static const int kLikeUserListCountFieldNumber = 8;
  ::google::protobuf::uint32 _likeuserlistcount() const;
  void set__likeuserlistcount(::google::protobuf::uint32 value);

  // required uint32 _CommentCount = 10;
  bool has__commentcount() const;
  void clear__commentcount();
  static const int kCommentCountFieldNumber = 10;
  ::google::protobuf::uint32 _commentcount() const;
  void set__commentcount(::google::protobuf::uint32 value);

  // required uint32 _CommentUserListCount = 11;
  bool has__commentuserlistcount() const;
  void clear__commentuserlistcount();
  static const int kCommentUserListCountFieldNumber = 11;
  ::google::protobuf::uint32 _commentuserlistcount() const;
  void set__commentuserlistcount(::google::protobuf::uint32 value);

  // required uint32 _WithUserCount = 13;
  bool has__withusercount() const;
  void clear__withusercount();
  static const int kWithUserCountFieldNumber = 13;
  ::google::protobuf::uint32 _withusercount() const;
  void set__withusercount(::google::protobuf::uint32 value);

  // required uint32 _WithUserListCount = 14;
  bool has__withuserlistcount() const;
  void clear__withuserlistcount();
  static const int kWithUserListCountFieldNumber = 14;
  ::google::protobuf::uint32 _withuserlistcount() const;
  void set__withuserlistcount(::google::protobuf::uint32 value);

  // optional uint32 _ExtFlag = 16;
  bool has__extflag() const;
  void clear__extflag();
  static const int kExtFlagFieldNumber = 16;
  ::google::protobuf::uint32 _extflag() const;
  void set__extflag(::google::protobuf::uint32 value);

  // optional uint32 _NoChange = 17;
  bool has__nochange() const;
  void clear__nochange();
  static const int kNoChangeFieldNumber = 17;
  ::google::protobuf::uint32 _nochange() const;
  void set__nochange(::google::protobuf::uint32 value);

  // optional uint32 _GroupCount = 18;
  bool has__groupcount() const;
  void clear__groupcount();
  static const int kGroupCountFieldNumber = 18;
  ::google::protobuf::uint32 _groupcount() const;
  void set__groupcount(::google::protobuf::uint32 value);

  // optional uint32 _IsNotRichText = 20;
  bool has__isnotrichtext() const;
  void clear__isnotrichtext();
  static const int kIsNotRichTextFieldNumber = 20;
  ::google::protobuf::uint32 _isnotrichtext() const;
  void set__isnotrichtext(::google::protobuf::uint32 value);

  // optional uint64 _ReferId = 22;
  bool has__referid() const;
  void clear__referid();
  static const int kReferIdFieldNumber = 22;
  ::google::protobuf::uint64 _referid() const;
  void set__referid(::google::protobuf::uint64 value);

  // optional uint32 _BlackListCount = 23;
  bool has__blacklistcount() const;
  void clear__blacklistcount();
  static const int kBlackListCountFieldNumber = 23;
  ::google::protobuf::uint32 _blacklistcount() const;
  void set__blacklistcount(::google::protobuf::uint32 value);

  // optional uint32 _DeleteFlag = 25;
  bool has__deleteflag() const;
  void clear__deleteflag();
  static const int kDeleteFlagFieldNumber = 25;
  ::google::protobuf::uint32 _deleteflag() const;
  void set__deleteflag(::google::protobuf::uint32 value);

  // optional uint32 _GroupUserCount = 26;
  bool has__groupusercount() const;
  void clear__groupusercount();
  static const int kGroupUserCountFieldNumber = 26;
  ::google::protobuf::uint32 _groupusercount() const;
  void set__groupusercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.SnsObject)
 private:
  void set_has__id();
  void clear_has__id();
  void set_has__username();
  void clear_has__username();
  void set_has__nickname();
  void clear_has__nickname();
  void set_has__createtime();
  void clear_has__createtime();
  void set_has__objectdesc();
  void clear_has__objectdesc();
  void set_has__likeflag();
  void clear_has__likeflag();
  void set_has__likecount();
  void clear_has__likecount();
  void set_has__likeuserlistcount();
  void clear_has__likeuserlistcount();
  void set_has__commentcount();
  void clear_has__commentcount();
  void set_has__commentuserlistcount();
  void clear_has__commentuserlistcount();
  void set_has__withusercount();
  void clear_has__withusercount();
  void set_has__withuserlistcount();
  void clear_has__withuserlistcount();
  void set_has__extflag();
  void clear_has__extflag();
  void set_has__nochange();
  void clear_has__nochange();
  void set_has__groupcount();
  void clear_has__groupcount();
  void set_has__isnotrichtext();
  void clear_has__isnotrichtext();
  void set_has__referusername();
  void clear_has__referusername();
  void set_has__referid();
  void clear_has__referid();
  void set_has__blacklistcount();
  void clear_has__blacklistcount();
  void set_has__deleteflag();
  void clear_has__deleteflag();
  void set_has__groupusercount();
  void clear_has__groupusercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo > _likeuserlist_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo > _commentuserlist_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo > _withuserlist_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsGroup > _grouplist_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t > _blacklist_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t > _groupuser_;
  ::google::protobuf::internal::ArenaStringPtr _username_;
  ::google::protobuf::internal::ArenaStringPtr _nickname_;
  ::google::protobuf::internal::ArenaStringPtr _referusername_;
  ::MMPro::micromsg::SKBuiltinBuffer_t* _objectdesc_;
  ::google::protobuf::uint64 _id_;
  ::google::protobuf::uint32 _createtime_;
  ::google::protobuf::uint32 _likeflag_;
  ::google::protobuf::uint32 _likecount_;
  ::google::protobuf::uint32 _likeuserlistcount_;
  ::google::protobuf::uint32 _commentcount_;
  ::google::protobuf::uint32 _commentuserlistcount_;
  ::google::protobuf::uint32 _withusercount_;
  ::google::protobuf::uint32 _withuserlistcount_;
  ::google::protobuf::uint32 _extflag_;
  ::google::protobuf::uint32 _nochange_;
  ::google::protobuf::uint32 _groupcount_;
  ::google::protobuf::uint32 _isnotrichtext_;
  ::google::protobuf::uint64 _referid_;
  ::google::protobuf::uint32 _blacklistcount_;
  ::google::protobuf::uint32 _deleteflag_;
  ::google::protobuf::uint32 _groupusercount_;
  friend struct protobuf_SnsObject_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SnsObject

// required uint64 _Id = 1;
inline bool SnsObject::has__id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SnsObject::set_has__id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SnsObject::clear_has__id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SnsObject::clear__id() {
  _id_ = GOOGLE_ULONGLONG(0);
  clear_has__id();
}
inline ::google::protobuf::uint64 SnsObject::_id() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._Id)
  return _id_;
}
inline void SnsObject::set__id(::google::protobuf::uint64 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._Id)
}

// optional string _Username = 2;
inline bool SnsObject::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnsObject::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnsObject::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnsObject::clear__username() {
  _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__username();
}
inline const ::std::string& SnsObject::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._Username)
  return _username_.GetNoArena();
}
inline void SnsObject::set__username(const ::std::string& value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._Username)
}
#if LANG_CXX11
inline void SnsObject::set__username(::std::string&& value) {
  set_has__username();
  _username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SnsObject._Username)
}
#endif
inline void SnsObject::set__username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SnsObject._Username)
}
inline void SnsObject::set__username(const char* value, size_t size) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SnsObject._Username)
}
inline ::std::string* SnsObject::mutable__username() {
  set_has__username();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._Username)
  return _username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsObject::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._Username)
  clear_has__username();
  return _username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsObject::set_allocated__username(::std::string* _username) {
  if (_username != NULL) {
    set_has__username();
  } else {
    clear_has__username();
  }
  _username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _username);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._Username)
}

// optional string _Nickname = 3;
inline bool SnsObject::has__nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnsObject::set_has__nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnsObject::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnsObject::clear__nickname() {
  _nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nickname();
}
inline const ::std::string& SnsObject::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._Nickname)
  return _nickname_.GetNoArena();
}
inline void SnsObject::set__nickname(const ::std::string& value) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._Nickname)
}
#if LANG_CXX11
inline void SnsObject::set__nickname(::std::string&& value) {
  set_has__nickname();
  _nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SnsObject._Nickname)
}
#endif
inline void SnsObject::set__nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SnsObject._Nickname)
}
inline void SnsObject::set__nickname(const char* value, size_t size) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SnsObject._Nickname)
}
inline ::std::string* SnsObject::mutable__nickname() {
  set_has__nickname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._Nickname)
  return _nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsObject::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._Nickname)
  clear_has__nickname();
  return _nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsObject::set_allocated__nickname(::std::string* _nickname) {
  if (_nickname != NULL) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  _nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nickname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._Nickname)
}

// required uint32 _CreateTime = 4;
inline bool SnsObject::has__createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SnsObject::set_has__createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SnsObject::clear_has__createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SnsObject::clear__createtime() {
  _createtime_ = 0u;
  clear_has__createtime();
}
inline ::google::protobuf::uint32 SnsObject::_createtime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CreateTime)
  return _createtime_;
}
inline void SnsObject::set__createtime(::google::protobuf::uint32 value) {
  set_has__createtime();
  _createtime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._CreateTime)
}

// required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
inline bool SnsObject::has__objectdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SnsObject::set_has__objectdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SnsObject::clear_has__objectdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SnsObject::clear__objectdesc() {
  if (_objectdesc_ != NULL) _objectdesc_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__objectdesc();
}
inline const ::MMPro::micromsg::SKBuiltinBuffer_t& SnsObject::_objectdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ObjectDesc)
  return _objectdesc_ != NULL ? *_objectdesc_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* SnsObject::mutable__objectdesc() {
  set_has__objectdesc();
  if (_objectdesc_ == NULL) {
    _objectdesc_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._ObjectDesc)
  return _objectdesc_;
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* SnsObject::release__objectdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._ObjectDesc)
  clear_has__objectdesc();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _objectdesc_;
  _objectdesc_ = NULL;
  return temp;
}
inline void SnsObject::set_allocated__objectdesc(::MMPro::micromsg::SKBuiltinBuffer_t* _objectdesc) {
  delete _objectdesc_;
  _objectdesc_ = _objectdesc;
  if (_objectdesc) {
    set_has__objectdesc();
  } else {
    clear_has__objectdesc();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._ObjectDesc)
}

// required uint32 _LikeFlag = 6;
inline bool SnsObject::has__likeflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SnsObject::set_has__likeflag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SnsObject::clear_has__likeflag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SnsObject::clear__likeflag() {
  _likeflag_ = 0u;
  clear_has__likeflag();
}
inline ::google::protobuf::uint32 SnsObject::_likeflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeFlag)
  return _likeflag_;
}
inline void SnsObject::set__likeflag(::google::protobuf::uint32 value) {
  set_has__likeflag();
  _likeflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._LikeFlag)
}

// required uint32 _LikeCount = 7;
inline bool SnsObject::has__likecount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SnsObject::set_has__likecount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SnsObject::clear_has__likecount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SnsObject::clear__likecount() {
  _likecount_ = 0u;
  clear_has__likecount();
}
inline ::google::protobuf::uint32 SnsObject::_likecount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeCount)
  return _likecount_;
}
inline void SnsObject::set__likecount(::google::protobuf::uint32 value) {
  set_has__likecount();
  _likecount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._LikeCount)
}

// required uint32 _LikeUserListCount = 8;
inline bool SnsObject::has__likeuserlistcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SnsObject::set_has__likeuserlistcount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SnsObject::clear_has__likeuserlistcount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SnsObject::clear__likeuserlistcount() {
  _likeuserlistcount_ = 0u;
  clear_has__likeuserlistcount();
}
inline ::google::protobuf::uint32 SnsObject::_likeuserlistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeUserListCount)
  return _likeuserlistcount_;
}
inline void SnsObject::set__likeuserlistcount(::google::protobuf::uint32 value) {
  set_has__likeuserlistcount();
  _likeuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._LikeUserListCount)
}

// repeated .MMPro.micromsg.SnsCommentInfo _LikeUserList = 9;
inline int SnsObject::_likeuserlist_size() const {
  return _likeuserlist_.size();
}
inline void SnsObject::clear__likeuserlist() {
  _likeuserlist_.Clear();
}
inline const ::MMPro::micromsg::SnsCommentInfo& SnsObject::_likeuserlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_.Get(index);
}
inline ::MMPro::micromsg::SnsCommentInfo* SnsObject::mutable__likeuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_.Mutable(index);
}
inline ::MMPro::micromsg::SnsCommentInfo* SnsObject::add__likeuserlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
SnsObject::mutable__likeuserlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._LikeUserList)
  return &_likeuserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
SnsObject::_likeuserlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_;
}

// required uint32 _CommentCount = 10;
inline bool SnsObject::has__commentcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SnsObject::set_has__commentcount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SnsObject::clear_has__commentcount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SnsObject::clear__commentcount() {
  _commentcount_ = 0u;
  clear_has__commentcount();
}
inline ::google::protobuf::uint32 SnsObject::_commentcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CommentCount)
  return _commentcount_;
}
inline void SnsObject::set__commentcount(::google::protobuf::uint32 value) {
  set_has__commentcount();
  _commentcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._CommentCount)
}

// required uint32 _CommentUserListCount = 11;
inline bool SnsObject::has__commentuserlistcount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SnsObject::set_has__commentuserlistcount() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SnsObject::clear_has__commentuserlistcount() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SnsObject::clear__commentuserlistcount() {
  _commentuserlistcount_ = 0u;
  clear_has__commentuserlistcount();
}
inline ::google::protobuf::uint32 SnsObject::_commentuserlistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CommentUserListCount)
  return _commentuserlistcount_;
}
inline void SnsObject::set__commentuserlistcount(::google::protobuf::uint32 value) {
  set_has__commentuserlistcount();
  _commentuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._CommentUserListCount)
}

// repeated .MMPro.micromsg.SnsCommentInfo _CommentUserList = 12;
inline int SnsObject::_commentuserlist_size() const {
  return _commentuserlist_.size();
}
inline void SnsObject::clear__commentuserlist() {
  _commentuserlist_.Clear();
}
inline const ::MMPro::micromsg::SnsCommentInfo& SnsObject::_commentuserlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_.Get(index);
}
inline ::MMPro::micromsg::SnsCommentInfo* SnsObject::mutable__commentuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_.Mutable(index);
}
inline ::MMPro::micromsg::SnsCommentInfo* SnsObject::add__commentuserlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
SnsObject::mutable__commentuserlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._CommentUserList)
  return &_commentuserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
SnsObject::_commentuserlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_;
}

// required uint32 _WithUserCount = 13;
inline bool SnsObject::has__withusercount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SnsObject::set_has__withusercount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SnsObject::clear_has__withusercount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SnsObject::clear__withusercount() {
  _withusercount_ = 0u;
  clear_has__withusercount();
}
inline ::google::protobuf::uint32 SnsObject::_withusercount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._WithUserCount)
  return _withusercount_;
}
inline void SnsObject::set__withusercount(::google::protobuf::uint32 value) {
  set_has__withusercount();
  _withusercount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._WithUserCount)
}

// required uint32 _WithUserListCount = 14;
inline bool SnsObject::has__withuserlistcount() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SnsObject::set_has__withuserlistcount() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SnsObject::clear_has__withuserlistcount() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SnsObject::clear__withuserlistcount() {
  _withuserlistcount_ = 0u;
  clear_has__withuserlistcount();
}
inline ::google::protobuf::uint32 SnsObject::_withuserlistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._WithUserListCount)
  return _withuserlistcount_;
}
inline void SnsObject::set__withuserlistcount(::google::protobuf::uint32 value) {
  set_has__withuserlistcount();
  _withuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._WithUserListCount)
}

// repeated .MMPro.micromsg.SnsCommentInfo _WithUserList = 15;
inline int SnsObject::_withuserlist_size() const {
  return _withuserlist_.size();
}
inline void SnsObject::clear__withuserlist() {
  _withuserlist_.Clear();
}
inline const ::MMPro::micromsg::SnsCommentInfo& SnsObject::_withuserlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_.Get(index);
}
inline ::MMPro::micromsg::SnsCommentInfo* SnsObject::mutable__withuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_.Mutable(index);
}
inline ::MMPro::micromsg::SnsCommentInfo* SnsObject::add__withuserlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
SnsObject::mutable__withuserlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._WithUserList)
  return &_withuserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
SnsObject::_withuserlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_;
}

// optional uint32 _ExtFlag = 16;
inline bool SnsObject::has__extflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SnsObject::set_has__extflag() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SnsObject::clear_has__extflag() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SnsObject::clear__extflag() {
  _extflag_ = 0u;
  clear_has__extflag();
}
inline ::google::protobuf::uint32 SnsObject::_extflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ExtFlag)
  return _extflag_;
}
inline void SnsObject::set__extflag(::google::protobuf::uint32 value) {
  set_has__extflag();
  _extflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._ExtFlag)
}

// optional uint32 _NoChange = 17;
inline bool SnsObject::has__nochange() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SnsObject::set_has__nochange() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SnsObject::clear_has__nochange() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SnsObject::clear__nochange() {
  _nochange_ = 0u;
  clear_has__nochange();
}
inline ::google::protobuf::uint32 SnsObject::_nochange() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._NoChange)
  return _nochange_;
}
inline void SnsObject::set__nochange(::google::protobuf::uint32 value) {
  set_has__nochange();
  _nochange_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._NoChange)
}

// optional uint32 _GroupCount = 18;
inline bool SnsObject::has__groupcount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SnsObject::set_has__groupcount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SnsObject::clear_has__groupcount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SnsObject::clear__groupcount() {
  _groupcount_ = 0u;
  clear_has__groupcount();
}
inline ::google::protobuf::uint32 SnsObject::_groupcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupCount)
  return _groupcount_;
}
inline void SnsObject::set__groupcount(::google::protobuf::uint32 value) {
  set_has__groupcount();
  _groupcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._GroupCount)
}

// repeated .MMPro.micromsg.SnsGroup _GroupList = 19;
inline int SnsObject::_grouplist_size() const {
  return _grouplist_.size();
}
inline void SnsObject::clear__grouplist() {
  _grouplist_.Clear();
}
inline const ::MMPro::micromsg::SnsGroup& SnsObject::_grouplist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_.Get(index);
}
inline ::MMPro::micromsg::SnsGroup* SnsObject::mutable__grouplist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_.Mutable(index);
}
inline ::MMPro::micromsg::SnsGroup* SnsObject::add__grouplist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsGroup >*
SnsObject::mutable__grouplist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._GroupList)
  return &_grouplist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsGroup >&
SnsObject::_grouplist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_;
}

// optional uint32 _IsNotRichText = 20;
inline bool SnsObject::has__isnotrichtext() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SnsObject::set_has__isnotrichtext() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SnsObject::clear_has__isnotrichtext() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SnsObject::clear__isnotrichtext() {
  _isnotrichtext_ = 0u;
  clear_has__isnotrichtext();
}
inline ::google::protobuf::uint32 SnsObject::_isnotrichtext() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._IsNotRichText)
  return _isnotrichtext_;
}
inline void SnsObject::set__isnotrichtext(::google::protobuf::uint32 value) {
  set_has__isnotrichtext();
  _isnotrichtext_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._IsNotRichText)
}

// optional string _ReferUsername = 21;
inline bool SnsObject::has__referusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnsObject::set_has__referusername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnsObject::clear_has__referusername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnsObject::clear__referusername() {
  _referusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__referusername();
}
inline const ::std::string& SnsObject::_referusername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ReferUsername)
  return _referusername_.GetNoArena();
}
inline void SnsObject::set__referusername(const ::std::string& value) {
  set_has__referusername();
  _referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._ReferUsername)
}
#if LANG_CXX11
inline void SnsObject::set__referusername(::std::string&& value) {
  set_has__referusername();
  _referusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SnsObject._ReferUsername)
}
#endif
inline void SnsObject::set__referusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__referusername();
  _referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SnsObject._ReferUsername)
}
inline void SnsObject::set__referusername(const char* value, size_t size) {
  set_has__referusername();
  _referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SnsObject._ReferUsername)
}
inline ::std::string* SnsObject::mutable__referusername() {
  set_has__referusername();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._ReferUsername)
  return _referusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnsObject::release__referusername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._ReferUsername)
  clear_has__referusername();
  return _referusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnsObject::set_allocated__referusername(::std::string* _referusername) {
  if (_referusername != NULL) {
    set_has__referusername();
  } else {
    clear_has__referusername();
  }
  _referusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _referusername);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._ReferUsername)
}

// optional uint64 _ReferId = 22;
inline bool SnsObject::has__referid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SnsObject::set_has__referid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SnsObject::clear_has__referid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SnsObject::clear__referid() {
  _referid_ = GOOGLE_ULONGLONG(0);
  clear_has__referid();
}
inline ::google::protobuf::uint64 SnsObject::_referid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ReferId)
  return _referid_;
}
inline void SnsObject::set__referid(::google::protobuf::uint64 value) {
  set_has__referid();
  _referid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._ReferId)
}

// optional uint32 _BlackListCount = 23;
inline bool SnsObject::has__blacklistcount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SnsObject::set_has__blacklistcount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SnsObject::clear_has__blacklistcount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SnsObject::clear__blacklistcount() {
  _blacklistcount_ = 0u;
  clear_has__blacklistcount();
}
inline ::google::protobuf::uint32 SnsObject::_blacklistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._BlackListCount)
  return _blacklistcount_;
}
inline void SnsObject::set__blacklistcount(::google::protobuf::uint32 value) {
  set_has__blacklistcount();
  _blacklistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._BlackListCount)
}

// repeated .MMPro.micromsg.SKBuiltinString_t _BlackList = 24;
inline int SnsObject::_blacklist_size() const {
  return _blacklist_.size();
}
inline void SnsObject::clear__blacklist() {
  _blacklist_.Clear();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& SnsObject::_blacklist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_.Get(index);
}
inline ::MMPro::micromsg::SKBuiltinString_t* SnsObject::mutable__blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_.Mutable(index);
}
inline ::MMPro::micromsg::SKBuiltinString_t* SnsObject::add__blacklist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >*
SnsObject::mutable__blacklist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._BlackList)
  return &_blacklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >&
SnsObject::_blacklist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_;
}

// optional uint32 _DeleteFlag = 25;
inline bool SnsObject::has__deleteflag() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SnsObject::set_has__deleteflag() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SnsObject::clear_has__deleteflag() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SnsObject::clear__deleteflag() {
  _deleteflag_ = 0u;
  clear_has__deleteflag();
}
inline ::google::protobuf::uint32 SnsObject::_deleteflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._DeleteFlag)
  return _deleteflag_;
}
inline void SnsObject::set__deleteflag(::google::protobuf::uint32 value) {
  set_has__deleteflag();
  _deleteflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._DeleteFlag)
}

// optional uint32 _GroupUserCount = 26;
inline bool SnsObject::has__groupusercount() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SnsObject::set_has__groupusercount() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SnsObject::clear_has__groupusercount() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SnsObject::clear__groupusercount() {
  _groupusercount_ = 0u;
  clear_has__groupusercount();
}
inline ::google::protobuf::uint32 SnsObject::_groupusercount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupUserCount)
  return _groupusercount_;
}
inline void SnsObject::set__groupusercount(::google::protobuf::uint32 value) {
  set_has__groupusercount();
  _groupusercount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._GroupUserCount)
}

// repeated .MMPro.micromsg.SKBuiltinString_t _GroupUser = 27;
inline int SnsObject::_groupuser_size() const {
  return _groupuser_.size();
}
inline void SnsObject::clear__groupuser() {
  _groupuser_.Clear();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& SnsObject::_groupuser(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_.Get(index);
}
inline ::MMPro::micromsg::SKBuiltinString_t* SnsObject::mutable__groupuser(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_.Mutable(index);
}
inline ::MMPro::micromsg::SKBuiltinString_t* SnsObject::add__groupuser() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >*
SnsObject::mutable__groupuser() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._GroupUser)
  return &_groupuser_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >&
SnsObject::_groupuser() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SnsObject_2eproto__INCLUDED
