// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CreateChatRoomResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CreateChatRoomResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class CreateChatRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateChatRoomResponse> {
} _CreateChatRoomResponse_default_instance_;

namespace protobuf_CreateChatRoomResponse_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _pyinitial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _quanpin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _membercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _memberlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _chatroomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _imgbuf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _bigheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatRoomResponse, _smallheadimgurl_),
  2,
  3,
  4,
  5,
  8,
  ~0u,
  6,
  7,
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 15, sizeof(CreateChatRoomResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateChatRoomResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CreateChatRoomResponse.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _CreateChatRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_MemberResp_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::InitDefaults();
  _CreateChatRoomResponse_default_instance_.DefaultConstruct();
  _CreateChatRoomResponse_default_instance_.get_mutable()->_baseresponse_ = const_cast< ::MMPro::micromsg::BaseResponse*>(
      ::MMPro::micromsg::BaseResponse::internal_default_instance());
  _CreateChatRoomResponse_default_instance_.get_mutable()->_topic_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _CreateChatRoomResponse_default_instance_.get_mutable()->_pyinitial_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _CreateChatRoomResponse_default_instance_.get_mutable()->_quanpin_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _CreateChatRoomResponse_default_instance_.get_mutable()->_chatroomname_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _CreateChatRoomResponse_default_instance_.get_mutable()->_imgbuf_ = const_cast< ::MMPro::micromsg::SKBuiltinBuffer_t*>(
      ::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\034CreateChatRoomResponse.proto\022\016MMPro.mi"
      "cromsg\032\022BaseResponse.proto\032\027SKBuiltinStr"
      "ing_t.proto\032\020MemberResp.proto\032\027SKBuiltin"
      "Buffer_t.proto\"\323\003\n\026CreateChatRoomRespons"
      "e\0223\n\r_BaseResponse\030\001 \002(\0132\034.MMPro.microms"
      "g.BaseResponse\0221\n\006_Topic\030\002 \002(\0132!.MMPro.m"
      "icromsg.SKBuiltinString_t\0225\n\n_PYInitial\030"
      "\003 \002(\0132!.MMPro.micromsg.SKBuiltinString_t"
      "\0223\n\010_QuanPin\030\004 \002(\0132!.MMPro.micromsg.SKBu"
      "iltinString_t\022\024\n\014_MemberCount\030\005 \002(\r\022/\n\013_"
      "MemberList\030\006 \003(\0132\032.MMPro.micromsg.Member"
      "Resp\0228\n\r_ChatRoomName\030\007 \002(\0132!.MMPro.micr"
      "omsg.SKBuiltinString_t\0222\n\007_ImgBuf\030\010 \002(\0132"
      "!.MMPro.micromsg.SKBuiltinBuffer_t\022\026\n\016_B"
      "igHeadImgUrl\030\t \001(\t\022\030\n\020_SmallHeadImgUrl\030\n"
      " \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 604);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CreateChatRoomResponse.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_MemberResp_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_CreateChatRoomResponse_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChatRoomResponse::kBaseResponseFieldNumber;
const int CreateChatRoomResponse::kTopicFieldNumber;
const int CreateChatRoomResponse::kPYInitialFieldNumber;
const int CreateChatRoomResponse::kQuanPinFieldNumber;
const int CreateChatRoomResponse::kMemberCountFieldNumber;
const int CreateChatRoomResponse::kMemberListFieldNumber;
const int CreateChatRoomResponse::kChatRoomNameFieldNumber;
const int CreateChatRoomResponse::kImgBufFieldNumber;
const int CreateChatRoomResponse::kBigHeadImgUrlFieldNumber;
const int CreateChatRoomResponse::kSmallHeadImgUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChatRoomResponse::CreateChatRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CreateChatRoomResponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.CreateChatRoomResponse)
}
CreateChatRoomResponse::CreateChatRoomResponse(const CreateChatRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _memberlist_(from._memberlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__bigheadimgurl()) {
    _bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._bigheadimgurl_);
  }
  _smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__smallheadimgurl()) {
    _smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._smallheadimgurl_);
  }
  if (from.has__baseresponse()) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse(*from._baseresponse_);
  } else {
    _baseresponse_ = NULL;
  }
  if (from.has__topic()) {
    _topic_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._topic_);
  } else {
    _topic_ = NULL;
  }
  if (from.has__pyinitial()) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._pyinitial_);
  } else {
    _pyinitial_ = NULL;
  }
  if (from.has__quanpin()) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._quanpin_);
  } else {
    _quanpin_ = NULL;
  }
  if (from.has__chatroomname()) {
    _chatroomname_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._chatroomname_);
  } else {
    _chatroomname_ = NULL;
  }
  if (from.has__imgbuf()) {
    _imgbuf_ = new ::MMPro::micromsg::SKBuiltinBuffer_t(*from._imgbuf_);
  } else {
    _imgbuf_ = NULL;
  }
  _membercount_ = from._membercount_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.CreateChatRoomResponse)
}

void CreateChatRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  _bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_baseresponse_, 0, reinterpret_cast<char*>(&_membercount_) -
    reinterpret_cast<char*>(&_baseresponse_) + sizeof(_membercount_));
}

CreateChatRoomResponse::~CreateChatRoomResponse() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.CreateChatRoomResponse)
  SharedDtor();
}

void CreateChatRoomResponse::SharedDtor() {
  _bigheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _smallheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete _topic_;
  }
  if (this != internal_default_instance()) {
    delete _pyinitial_;
  }
  if (this != internal_default_instance()) {
    delete _quanpin_;
  }
  if (this != internal_default_instance()) {
    delete _chatroomname_;
  }
  if (this != internal_default_instance()) {
    delete _imgbuf_;
  }
}

void CreateChatRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateChatRoomResponse::descriptor() {
  protobuf_CreateChatRoomResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CreateChatRoomResponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateChatRoomResponse& CreateChatRoomResponse::default_instance() {
  protobuf_CreateChatRoomResponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateChatRoomResponse* CreateChatRoomResponse::New(::google::protobuf::Arena* arena) const {
  CreateChatRoomResponse* n = new CreateChatRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateChatRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.CreateChatRoomResponse)
  _memberlist_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has__bigheadimgurl()) {
      GOOGLE_DCHECK(!_bigheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_bigheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__smallheadimgurl()) {
      GOOGLE_DCHECK(!_smallheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_smallheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__baseresponse()) {
      GOOGLE_DCHECK(_baseresponse_ != NULL);
      _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
    }
    if (has__topic()) {
      GOOGLE_DCHECK(_topic_ != NULL);
      _topic_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__pyinitial()) {
      GOOGLE_DCHECK(_pyinitial_ != NULL);
      _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__quanpin()) {
      GOOGLE_DCHECK(_quanpin_ != NULL);
      _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__chatroomname()) {
      GOOGLE_DCHECK(_chatroomname_ != NULL);
      _chatroomname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__imgbuf()) {
      GOOGLE_DCHECK(_imgbuf_ != NULL);
      _imgbuf_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  _membercount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateChatRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.CreateChatRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__topic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__pyinitial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__quanpin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _MemberCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__membercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_membercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.MemberResp _MemberList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__memberlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__chatroomname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__imgbuf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _BigHeadImgUrl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__bigheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_bigheadimgurl().data(), this->_bigheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _SmallHeadImgUrl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__smallheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_smallheadimgurl().data(), this->_smallheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.CreateChatRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.CreateChatRoomResponse)
  return false;
#undef DO_
}

void CreateChatRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.CreateChatRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_baseresponse_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->_topic_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->_pyinitial_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->_quanpin_, output);
  }

  // required uint32 _MemberCount = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_membercount(), output);
  }

  // repeated .MMPro.micromsg.MemberResp _MemberList = 6;
  for (unsigned int i = 0, n = this->_memberlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_memberlist(i), output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->_chatroomname_, output);
  }

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->_imgbuf_, output);
  }

  // optional string _BigHeadImgUrl = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_bigheadimgurl().data(), this->_bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->_bigheadimgurl(), output);
  }

  // optional string _SmallHeadImgUrl = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_smallheadimgurl().data(), this->_smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->_smallheadimgurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.CreateChatRoomResponse)
}

::google::protobuf::uint8* CreateChatRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.CreateChatRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_baseresponse_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->_topic_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->_pyinitial_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->_quanpin_, deterministic, target);
  }

  // required uint32 _MemberCount = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_membercount(), target);
  }

  // repeated .MMPro.micromsg.MemberResp _MemberList = 6;
  for (unsigned int i = 0, n = this->_memberlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->_memberlist(i), deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->_chatroomname_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->_imgbuf_, deterministic, target);
  }

  // optional string _BigHeadImgUrl = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_bigheadimgurl().data(), this->_bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->_bigheadimgurl(), target);
  }

  // optional string _SmallHeadImgUrl = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_smallheadimgurl().data(), this->_smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->_smallheadimgurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.CreateChatRoomResponse)
  return target;
}

size_t CreateChatRoomResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MMPro.micromsg.CreateChatRoomResponse)
  size_t total_size = 0;

  if (has__baseresponse()) {
    // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseresponse_);
  }

  if (has__topic()) {
    // required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_topic_);
  }

  if (has__pyinitial()) {
    // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_pyinitial_);
  }

  if (has__quanpin()) {
    // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_quanpin_);
  }

  if (has__chatroomname()) {
    // required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_chatroomname_);
  }

  if (has__imgbuf()) {
    // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_imgbuf_);
  }

  if (has__membercount()) {
    // required uint32 _MemberCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_membercount());
  }

  return total_size;
}
size_t CreateChatRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.CreateChatRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001fc) ^ 0x000001fc) == 0) {  // All required fields are present.
    // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseresponse_);

    // required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_topic_);

    // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_pyinitial_);

    // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_quanpin_);

    // required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_chatroomname_);

    // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_imgbuf_);

    // required uint32 _MemberCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_membercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MMPro.micromsg.MemberResp _MemberList = 6;
  {
    unsigned int count = this->_memberlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_memberlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string _BigHeadImgUrl = 9;
    if (has__bigheadimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_bigheadimgurl());
    }

    // optional string _SmallHeadImgUrl = 10;
    if (has__smallheadimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_smallheadimgurl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateChatRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.CreateChatRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateChatRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateChatRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.CreateChatRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.CreateChatRoomResponse)
    MergeFrom(*source);
  }
}

void CreateChatRoomResponse::MergeFrom(const CreateChatRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.CreateChatRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _memberlist_.MergeFrom(from._memberlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__bigheadimgurl();
      _bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._bigheadimgurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__smallheadimgurl();
      _smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._smallheadimgurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable__baseresponse()->::MMPro::micromsg::BaseResponse::MergeFrom(from._baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable__topic()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._topic());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable__pyinitial()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._pyinitial());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable__quanpin()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._quanpin());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable__chatroomname()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._chatroomname());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable__imgbuf()->::MMPro::micromsg::SKBuiltinBuffer_t::MergeFrom(from._imgbuf());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set__membercount(from._membercount());
  }
}

void CreateChatRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.CreateChatRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateChatRoomResponse::CopyFrom(const CreateChatRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.CreateChatRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateChatRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001fc) != 0x000001fc) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->_memberlist())) return false;
  if (has__baseresponse()) {
    if (!this->_baseresponse_->IsInitialized()) return false;
  }
  if (has__imgbuf()) {
    if (!this->_imgbuf_->IsInitialized()) return false;
  }
  return true;
}

void CreateChatRoomResponse::Swap(CreateChatRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChatRoomResponse::InternalSwap(CreateChatRoomResponse* other) {
  _memberlist_.InternalSwap(&other->_memberlist_);
  _bigheadimgurl_.Swap(&other->_bigheadimgurl_);
  _smallheadimgurl_.Swap(&other->_smallheadimgurl_);
  std::swap(_baseresponse_, other->_baseresponse_);
  std::swap(_topic_, other->_topic_);
  std::swap(_pyinitial_, other->_pyinitial_);
  std::swap(_quanpin_, other->_quanpin_);
  std::swap(_chatroomname_, other->_chatroomname_);
  std::swap(_imgbuf_, other->_imgbuf_);
  std::swap(_membercount_, other->_membercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateChatRoomResponse::GetMetadata() const {
  protobuf_CreateChatRoomResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CreateChatRoomResponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateChatRoomResponse

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
bool CreateChatRoomResponse::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateChatRoomResponse::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateChatRoomResponse::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateChatRoomResponse::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
const ::MMPro::micromsg::BaseResponse& CreateChatRoomResponse::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
::MMPro::micromsg::BaseResponse* CreateChatRoomResponse::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
  return _baseresponse_;
}
::MMPro::micromsg::BaseResponse* CreateChatRoomResponse::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
void CreateChatRoomResponse::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
}

// required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
bool CreateChatRoomResponse::has__topic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CreateChatRoomResponse::set_has__topic() {
  _has_bits_[0] |= 0x00000008u;
}
void CreateChatRoomResponse::clear_has__topic() {
  _has_bits_[0] &= ~0x00000008u;
}
void CreateChatRoomResponse::clear__topic() {
  if (_topic_ != NULL) _topic_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__topic();
}
const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_topic() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._Topic)
  return _topic_ != NULL ? *_topic_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__topic() {
  set_has__topic();
  if (_topic_ == NULL) {
    _topic_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._Topic)
  return _topic_;
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__topic() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._Topic)
  clear_has__topic();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _topic_;
  _topic_ = NULL;
  return temp;
}
void CreateChatRoomResponse::set_allocated__topic(::MMPro::micromsg::SKBuiltinString_t* _topic) {
  delete _topic_;
  _topic_ = _topic;
  if (_topic) {
    set_has__topic();
  } else {
    clear_has__topic();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._Topic)
}

// required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
bool CreateChatRoomResponse::has__pyinitial() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CreateChatRoomResponse::set_has__pyinitial() {
  _has_bits_[0] |= 0x00000010u;
}
void CreateChatRoomResponse::clear_has__pyinitial() {
  _has_bits_[0] &= ~0x00000010u;
}
void CreateChatRoomResponse::clear__pyinitial() {
  if (_pyinitial_ != NULL) _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__pyinitial();
}
const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_pyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
  return _pyinitial_ != NULL ? *_pyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__pyinitial() {
  set_has__pyinitial();
  if (_pyinitial_ == NULL) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
  return _pyinitial_;
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__pyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
  clear_has__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _pyinitial_;
  _pyinitial_ = NULL;
  return temp;
}
void CreateChatRoomResponse::set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial) {
  delete _pyinitial_;
  _pyinitial_ = _pyinitial;
  if (_pyinitial) {
    set_has__pyinitial();
  } else {
    clear_has__pyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
bool CreateChatRoomResponse::has__quanpin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CreateChatRoomResponse::set_has__quanpin() {
  _has_bits_[0] |= 0x00000020u;
}
void CreateChatRoomResponse::clear_has__quanpin() {
  _has_bits_[0] &= ~0x00000020u;
}
void CreateChatRoomResponse::clear__quanpin() {
  if (_quanpin_ != NULL) _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__quanpin();
}
const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_quanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
  return _quanpin_ != NULL ? *_quanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__quanpin() {
  set_has__quanpin();
  if (_quanpin_ == NULL) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
  return _quanpin_;
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__quanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
  clear_has__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _quanpin_;
  _quanpin_ = NULL;
  return temp;
}
void CreateChatRoomResponse::set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin) {
  delete _quanpin_;
  _quanpin_ = _quanpin;
  if (_quanpin) {
    set_has__quanpin();
  } else {
    clear_has__quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
}

// required uint32 _MemberCount = 5;
bool CreateChatRoomResponse::has__membercount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CreateChatRoomResponse::set_has__membercount() {
  _has_bits_[0] |= 0x00000100u;
}
void CreateChatRoomResponse::clear_has__membercount() {
  _has_bits_[0] &= ~0x00000100u;
}
void CreateChatRoomResponse::clear__membercount() {
  _membercount_ = 0u;
  clear_has__membercount();
}
::google::protobuf::uint32 CreateChatRoomResponse::_membercount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._MemberCount)
  return _membercount_;
}
void CreateChatRoomResponse::set__membercount(::google::protobuf::uint32 value) {
  set_has__membercount();
  _membercount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CreateChatRoomResponse._MemberCount)
}

// repeated .MMPro.micromsg.MemberResp _MemberList = 6;
int CreateChatRoomResponse::_memberlist_size() const {
  return _memberlist_.size();
}
void CreateChatRoomResponse::clear__memberlist() {
  _memberlist_.Clear();
}
const ::MMPro::micromsg::MemberResp& CreateChatRoomResponse::_memberlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_.Get(index);
}
::MMPro::micromsg::MemberResp* CreateChatRoomResponse::mutable__memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_.Mutable(index);
}
::MMPro::micromsg::MemberResp* CreateChatRoomResponse::add__memberlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::MemberResp >*
CreateChatRoomResponse::mutable__memberlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return &_memberlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::MemberResp >&
CreateChatRoomResponse::_memberlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_;
}

// required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
bool CreateChatRoomResponse::has__chatroomname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CreateChatRoomResponse::set_has__chatroomname() {
  _has_bits_[0] |= 0x00000040u;
}
void CreateChatRoomResponse::clear_has__chatroomname() {
  _has_bits_[0] &= ~0x00000040u;
}
void CreateChatRoomResponse::clear__chatroomname() {
  if (_chatroomname_ != NULL) _chatroomname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__chatroomname();
}
const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_chatroomname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
  return _chatroomname_ != NULL ? *_chatroomname_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__chatroomname() {
  set_has__chatroomname();
  if (_chatroomname_ == NULL) {
    _chatroomname_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
  return _chatroomname_;
}
::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__chatroomname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
  clear_has__chatroomname();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _chatroomname_;
  _chatroomname_ = NULL;
  return temp;
}
void CreateChatRoomResponse::set_allocated__chatroomname(::MMPro::micromsg::SKBuiltinString_t* _chatroomname) {
  delete _chatroomname_;
  _chatroomname_ = _chatroomname;
  if (_chatroomname) {
    set_has__chatroomname();
  } else {
    clear_has__chatroomname();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
}

// required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
bool CreateChatRoomResponse::has__imgbuf() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CreateChatRoomResponse::set_has__imgbuf() {
  _has_bits_[0] |= 0x00000080u;
}
void CreateChatRoomResponse::clear_has__imgbuf() {
  _has_bits_[0] &= ~0x00000080u;
}
void CreateChatRoomResponse::clear__imgbuf() {
  if (_imgbuf_ != NULL) _imgbuf_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__imgbuf();
}
const ::MMPro::micromsg::SKBuiltinBuffer_t& CreateChatRoomResponse::_imgbuf() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
  return _imgbuf_ != NULL ? *_imgbuf_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinBuffer_t* CreateChatRoomResponse::mutable__imgbuf() {
  set_has__imgbuf();
  if (_imgbuf_ == NULL) {
    _imgbuf_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
  return _imgbuf_;
}
::MMPro::micromsg::SKBuiltinBuffer_t* CreateChatRoomResponse::release__imgbuf() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
  clear_has__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _imgbuf_;
  _imgbuf_ = NULL;
  return temp;
}
void CreateChatRoomResponse::set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf) {
  delete _imgbuf_;
  _imgbuf_ = _imgbuf;
  if (_imgbuf) {
    set_has__imgbuf();
  } else {
    clear_has__imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
}

// optional string _BigHeadImgUrl = 9;
bool CreateChatRoomResponse::has__bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateChatRoomResponse::set_has__bigheadimgurl() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateChatRoomResponse::clear_has__bigheadimgurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateChatRoomResponse::clear__bigheadimgurl() {
  _bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__bigheadimgurl();
}
const ::std::string& CreateChatRoomResponse::_bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
  return _bigheadimgurl_.GetNoArena();
}
void CreateChatRoomResponse::set__bigheadimgurl(const ::std::string& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
#if LANG_CXX11
void CreateChatRoomResponse::set__bigheadimgurl(::std::string&& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
#endif
void CreateChatRoomResponse::set__bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
void CreateChatRoomResponse::set__bigheadimgurl(const char* value, size_t size) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
::std::string* CreateChatRoomResponse::mutable__bigheadimgurl() {
  set_has__bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
  return _bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateChatRoomResponse::release__bigheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
  clear_has__bigheadimgurl();
  return _bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateChatRoomResponse::set_allocated__bigheadimgurl(::std::string* _bigheadimgurl) {
  if (_bigheadimgurl != NULL) {
    set_has__bigheadimgurl();
  } else {
    clear_has__bigheadimgurl();
  }
  _bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}

// optional string _SmallHeadImgUrl = 10;
bool CreateChatRoomResponse::has__smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateChatRoomResponse::set_has__smallheadimgurl() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateChatRoomResponse::clear_has__smallheadimgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateChatRoomResponse::clear__smallheadimgurl() {
  _smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__smallheadimgurl();
}
const ::std::string& CreateChatRoomResponse::_smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
  return _smallheadimgurl_.GetNoArena();
}
void CreateChatRoomResponse::set__smallheadimgurl(const ::std::string& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
#if LANG_CXX11
void CreateChatRoomResponse::set__smallheadimgurl(::std::string&& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
#endif
void CreateChatRoomResponse::set__smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
void CreateChatRoomResponse::set__smallheadimgurl(const char* value, size_t size) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
::std::string* CreateChatRoomResponse::mutable__smallheadimgurl() {
  set_has__smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
  return _smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateChatRoomResponse::release__smallheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
  clear_has__smallheadimgurl();
  return _smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateChatRoomResponse::set_allocated__smallheadimgurl(::std::string* _smallheadimgurl) {
  if (_smallheadimgurl != NULL) {
    set_has__smallheadimgurl();
  } else {
    clear_has__smallheadimgurl();
  }
  _smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
