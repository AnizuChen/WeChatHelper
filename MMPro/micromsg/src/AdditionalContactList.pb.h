// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdditionalContactList.proto

#ifndef PROTOBUF_AdditionalContactList_2eproto__INCLUDED
#define PROTOBUF_AdditionalContactList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "LinkedinContactItem.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_AdditionalContactList_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_AdditionalContactList_2eproto

// ===================================================================

class AdditionalContactList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.AdditionalContactList) */ {
 public:
  AdditionalContactList();
  virtual ~AdditionalContactList();

  AdditionalContactList(const AdditionalContactList& from);

  inline AdditionalContactList& operator=(const AdditionalContactList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdditionalContactList& default_instance();

  static inline const AdditionalContactList* internal_default_instance() {
    return reinterpret_cast<const AdditionalContactList*>(
               &_AdditionalContactList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AdditionalContactList* other);

  // implements Message ----------------------------------------------

  inline AdditionalContactList* New() const PROTOBUF_FINAL { return New(NULL); }

  AdditionalContactList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdditionalContactList& from);
  void MergeFrom(const AdditionalContactList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdditionalContactList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MMPro.micromsg.LinkedinContactItem _LinkedinContactItem = 1;
  bool has__linkedincontactitem() const;
  void clear__linkedincontactitem();
  static const int kLinkedinContactItemFieldNumber = 1;
  const ::MMPro::micromsg::LinkedinContactItem& _linkedincontactitem() const;
  ::MMPro::micromsg::LinkedinContactItem* mutable__linkedincontactitem();
  ::MMPro::micromsg::LinkedinContactItem* release__linkedincontactitem();
  void set_allocated__linkedincontactitem(::MMPro::micromsg::LinkedinContactItem* _linkedincontactitem);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.AdditionalContactList)
 private:
  void set_has__linkedincontactitem();
  void clear_has__linkedincontactitem();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MMPro::micromsg::LinkedinContactItem* _linkedincontactitem_;
  friend struct protobuf_AdditionalContactList_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AdditionalContactList

// optional .MMPro.micromsg.LinkedinContactItem _LinkedinContactItem = 1;
inline bool AdditionalContactList::has__linkedincontactitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdditionalContactList::set_has__linkedincontactitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdditionalContactList::clear_has__linkedincontactitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdditionalContactList::clear__linkedincontactitem() {
  if (_linkedincontactitem_ != NULL) _linkedincontactitem_->::MMPro::micromsg::LinkedinContactItem::Clear();
  clear_has__linkedincontactitem();
}
inline const ::MMPro::micromsg::LinkedinContactItem& AdditionalContactList::_linkedincontactitem() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AdditionalContactList._LinkedinContactItem)
  return _linkedincontactitem_ != NULL ? *_linkedincontactitem_
                         : *::MMPro::micromsg::LinkedinContactItem::internal_default_instance();
}
inline ::MMPro::micromsg::LinkedinContactItem* AdditionalContactList::mutable__linkedincontactitem() {
  set_has__linkedincontactitem();
  if (_linkedincontactitem_ == NULL) {
    _linkedincontactitem_ = new ::MMPro::micromsg::LinkedinContactItem;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AdditionalContactList._LinkedinContactItem)
  return _linkedincontactitem_;
}
inline ::MMPro::micromsg::LinkedinContactItem* AdditionalContactList::release__linkedincontactitem() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AdditionalContactList._LinkedinContactItem)
  clear_has__linkedincontactitem();
  ::MMPro::micromsg::LinkedinContactItem* temp = _linkedincontactitem_;
  _linkedincontactitem_ = NULL;
  return temp;
}
inline void AdditionalContactList::set_allocated__linkedincontactitem(::MMPro::micromsg::LinkedinContactItem* _linkedincontactitem) {
  delete _linkedincontactitem_;
  _linkedincontactitem_ = _linkedincontactitem;
  if (_linkedincontactitem) {
    set_has__linkedincontactitem();
  } else {
    clear_has__linkedincontactitem();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AdditionalContactList._LinkedinContactItem)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AdditionalContactList_2eproto__INCLUDED
