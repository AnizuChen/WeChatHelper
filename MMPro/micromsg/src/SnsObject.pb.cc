// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SnsObject.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SnsObject.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class SnsObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SnsObject> {
} _SnsObject_default_instance_;

namespace protobuf_SnsObject_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _objectdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _likeflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _likecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _likeuserlistcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _likeuserlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _commentcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _commentuserlistcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _commentuserlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _withusercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _withuserlistcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _withuserlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _extflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _nochange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _groupcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _grouplist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _isnotrichtext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _referusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _referid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _blacklistcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _blacklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _deleteflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _groupusercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsObject, _groupuser_),
  4,
  0,
  1,
  5,
  3,
  6,
  7,
  8,
  ~0u,
  9,
  10,
  ~0u,
  11,
  12,
  ~0u,
  13,
  14,
  15,
  ~0u,
  16,
  2,
  17,
  18,
  ~0u,
  19,
  20,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 32, sizeof(SnsObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SnsObject_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SnsObject.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _SnsObject_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SnsCommentInfo_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SnsGroup_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::InitDefaults();
  _SnsObject_default_instance_.DefaultConstruct();
  _SnsObject_default_instance_.get_mutable()->_objectdesc_ = const_cast< ::MMPro::micromsg::SKBuiltinBuffer_t*>(
      ::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017SnsObject.proto\022\016MMPro.micromsg\032\027SKBui"
      "ltinBuffer_t.proto\032\024SnsCommentInfo.proto"
      "\032\016SnsGroup.proto\032\027SKBuiltinString_t.prot"
      "o\"\277\006\n\tSnsObject\022\013\n\003_Id\030\001 \002(\004\022\021\n\t_Usernam"
      "e\030\002 \001(\t\022\021\n\t_Nickname\030\003 \001(\t\022\023\n\013_CreateTim"
      "e\030\004 \002(\r\0226\n\013_ObjectDesc\030\005 \002(\0132!.MMPro.mic"
      "romsg.SKBuiltinBuffer_t\022\021\n\t_LikeFlag\030\006 \002"
      "(\r\022\022\n\n_LikeCount\030\007 \002(\r\022\032\n\022_LikeUserListC"
      "ount\030\010 \002(\r\0225\n\r_LikeUserList\030\t \003(\0132\036.MMPr"
      "o.micromsg.SnsCommentInfo\022\025\n\r_CommentCou"
      "nt\030\n \002(\r\022\035\n\025_CommentUserListCount\030\013 \002(\r\022"
      "8\n\020_CommentUserList\030\014 \003(\0132\036.MMPro.microm"
      "sg.SnsCommentInfo\022\026\n\016_WithUserCount\030\r \002("
      "\r\022\032\n\022_WithUserListCount\030\016 \002(\r\0225\n\r_WithUs"
      "erList\030\017 \003(\0132\036.MMPro.micromsg.SnsComment"
      "Info\022\020\n\010_ExtFlag\030\020 \001(\r\022\021\n\t_NoChange\030\021 \001("
      "\r\022\023\n\013_GroupCount\030\022 \001(\r\022,\n\n_GroupList\030\023 \003"
      "(\0132\030.MMPro.micromsg.SnsGroup\022\026\n\016_IsNotRi"
      "chText\030\024 \001(\r\022\026\n\016_ReferUsername\030\025 \001(\t\022\020\n\010"
      "_ReferId\030\026 \001(\004\022\027\n\017_BlackListCount\030\027 \001(\r\022"
      "5\n\n_BlackList\030\030 \003(\0132!.MMPro.micromsg.SKB"
      "uiltinString_t\022\023\n\013_DeleteFlag\030\031 \001(\r\022\027\n\017_"
      "GroupUserCount\030\032 \001(\r\0225\n\n_GroupUser\030\033 \003(\013"
      "2!.MMPro.micromsg.SKBuiltinString_t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 955);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SnsObject.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SnsCommentInfo_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SnsGroup_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SnsObject_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnsObject::kIdFieldNumber;
const int SnsObject::kUsernameFieldNumber;
const int SnsObject::kNicknameFieldNumber;
const int SnsObject::kCreateTimeFieldNumber;
const int SnsObject::kObjectDescFieldNumber;
const int SnsObject::kLikeFlagFieldNumber;
const int SnsObject::kLikeCountFieldNumber;
const int SnsObject::kLikeUserListCountFieldNumber;
const int SnsObject::kLikeUserListFieldNumber;
const int SnsObject::kCommentCountFieldNumber;
const int SnsObject::kCommentUserListCountFieldNumber;
const int SnsObject::kCommentUserListFieldNumber;
const int SnsObject::kWithUserCountFieldNumber;
const int SnsObject::kWithUserListCountFieldNumber;
const int SnsObject::kWithUserListFieldNumber;
const int SnsObject::kExtFlagFieldNumber;
const int SnsObject::kNoChangeFieldNumber;
const int SnsObject::kGroupCountFieldNumber;
const int SnsObject::kGroupListFieldNumber;
const int SnsObject::kIsNotRichTextFieldNumber;
const int SnsObject::kReferUsernameFieldNumber;
const int SnsObject::kReferIdFieldNumber;
const int SnsObject::kBlackListCountFieldNumber;
const int SnsObject::kBlackListFieldNumber;
const int SnsObject::kDeleteFlagFieldNumber;
const int SnsObject::kGroupUserCountFieldNumber;
const int SnsObject::kGroupUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnsObject::SnsObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SnsObject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.SnsObject)
}
SnsObject::SnsObject(const SnsObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _likeuserlist_(from._likeuserlist_),
      _commentuserlist_(from._commentuserlist_),
      _withuserlist_(from._withuserlist_),
      _grouplist_(from._grouplist_),
      _blacklist_(from._blacklist_),
      _groupuser_(from._groupuser_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__username()) {
    _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
  }
  _nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__nickname()) {
    _nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nickname_);
  }
  _referusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__referusername()) {
    _referusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._referusername_);
  }
  if (from.has__objectdesc()) {
    _objectdesc_ = new ::MMPro::micromsg::SKBuiltinBuffer_t(*from._objectdesc_);
  } else {
    _objectdesc_ = NULL;
  }
  ::memcpy(&_id_, &from._id_,
    reinterpret_cast<char*>(&_groupusercount_) -
    reinterpret_cast<char*>(&_id_) + sizeof(_groupusercount_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.SnsObject)
}

void SnsObject::SharedCtor() {
  _cached_size_ = 0;
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _referusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_objectdesc_, 0, reinterpret_cast<char*>(&_groupusercount_) -
    reinterpret_cast<char*>(&_objectdesc_) + sizeof(_groupusercount_));
}

SnsObject::~SnsObject() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.SnsObject)
  SharedDtor();
}

void SnsObject::SharedDtor() {
  _username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _referusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _objectdesc_;
  }
}

void SnsObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnsObject::descriptor() {
  protobuf_SnsObject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SnsObject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnsObject& SnsObject::default_instance() {
  protobuf_SnsObject_2eproto::InitDefaults();
  return *internal_default_instance();
}

SnsObject* SnsObject::New(::google::protobuf::Arena* arena) const {
  SnsObject* n = new SnsObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnsObject::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.SnsObject)
  _likeuserlist_.Clear();
  _commentuserlist_.Clear();
  _withuserlist_.Clear();
  _grouplist_.Clear();
  _blacklist_.Clear();
  _groupuser_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has__username()) {
      GOOGLE_DCHECK(!_username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_username_.UnsafeRawStringPointer())->clear();
    }
    if (has__nickname()) {
      GOOGLE_DCHECK(!_nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has__referusername()) {
      GOOGLE_DCHECK(!_referusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_referusername_.UnsafeRawStringPointer())->clear();
    }
    if (has__objectdesc()) {
      GOOGLE_DCHECK(_objectdesc_ != NULL);
      _objectdesc_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&_id_, 0, reinterpret_cast<char*>(&_likecount_) -
      reinterpret_cast<char*>(&_id_) + sizeof(_likecount_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&_likeuserlistcount_, 0, reinterpret_cast<char*>(&_groupcount_) -
      reinterpret_cast<char*>(&_likeuserlistcount_) + sizeof(_groupcount_));
  }
  if (_has_bits_[16 / 32] & 2031616u) {
    ::memset(&_isnotrichtext_, 0, reinterpret_cast<char*>(&_groupusercount_) -
      reinterpret_cast<char*>(&_isnotrichtext_) + sizeof(_groupusercount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnsObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.SnsObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 _Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_username().data(), this->_username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SnsObject._Username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_nickname().data(), this->_nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SnsObject._Nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _CreateTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has__createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__objectdesc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _LikeFlag = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has__likeflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_likeflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _LikeCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has__likecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_likecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _LikeUserListCount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has__likeuserlistcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_likeuserlistcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.SnsCommentInfo _LikeUserList = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__likeuserlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _CommentCount = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has__commentcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_commentcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _CommentUserListCount = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has__commentuserlistcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_commentuserlistcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.SnsCommentInfo _CommentUserList = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__commentuserlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _WithUserCount = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has__withusercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_withusercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _WithUserListCount = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has__withuserlistcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_withuserlistcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.SnsCommentInfo _WithUserList = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__withuserlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ExtFlag = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has__extflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_extflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _NoChange = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has__nochange();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_nochange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _GroupCount = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has__groupcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_groupcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.SnsGroup _GroupList = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__grouplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _IsNotRichText = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {
          set_has__isnotrichtext();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_isnotrichtext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ReferUsername = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__referusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_referusername().data(), this->_referusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SnsObject._ReferUsername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 _ReferId = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {
          set_has__referid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_referid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _BlackListCount = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {
          set_has__blacklistcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_blacklistcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.SKBuiltinString_t _BlackList = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__blacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _DeleteFlag = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u)) {
          set_has__deleteflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_deleteflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _GroupUserCount = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u)) {
          set_has__groupusercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_groupusercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.SKBuiltinString_t _GroupUser = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__groupuser()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.SnsObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.SnsObject)
  return false;
#undef DO_
}

void SnsObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.SnsObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 _Id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_id(), output);
  }

  // optional string _Username = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsObject._Username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_username(), output);
  }

  // optional string _Nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsObject._Nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_nickname(), output);
  }

  // required uint32 _CreateTime = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_createtime(), output);
  }

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->_objectdesc_, output);
  }

  // required uint32 _LikeFlag = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_likeflag(), output);
  }

  // required uint32 _LikeCount = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->_likecount(), output);
  }

  // required uint32 _LikeUserListCount = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->_likeuserlistcount(), output);
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _LikeUserList = 9;
  for (unsigned int i = 0, n = this->_likeuserlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_likeuserlist(i), output);
  }

  // required uint32 _CommentCount = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_commentcount(), output);
  }

  // required uint32 _CommentUserListCount = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->_commentuserlistcount(), output);
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _CommentUserList = 12;
  for (unsigned int i = 0, n = this->_commentuserlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_commentuserlist(i), output);
  }

  // required uint32 _WithUserCount = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->_withusercount(), output);
  }

  // required uint32 _WithUserListCount = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->_withuserlistcount(), output);
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _WithUserList = 15;
  for (unsigned int i = 0, n = this->_withuserlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_withuserlist(i), output);
  }

  // optional uint32 _ExtFlag = 16;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->_extflag(), output);
  }

  // optional uint32 _NoChange = 17;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->_nochange(), output);
  }

  // optional uint32 _GroupCount = 18;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->_groupcount(), output);
  }

  // repeated .MMPro.micromsg.SnsGroup _GroupList = 19;
  for (unsigned int i = 0, n = this->_grouplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_grouplist(i), output);
  }

  // optional uint32 _IsNotRichText = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->_isnotrichtext(), output);
  }

  // optional string _ReferUsername = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_referusername().data(), this->_referusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsObject._ReferUsername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->_referusername(), output);
  }

  // optional uint64 _ReferId = 22;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(22, this->_referid(), output);
  }

  // optional uint32 _BlackListCount = 23;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->_blacklistcount(), output);
  }

  // repeated .MMPro.micromsg.SKBuiltinString_t _BlackList = 24;
  for (unsigned int i = 0, n = this->_blacklist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_blacklist(i), output);
  }

  // optional uint32 _DeleteFlag = 25;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->_deleteflag(), output);
  }

  // optional uint32 _GroupUserCount = 26;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->_groupusercount(), output);
  }

  // repeated .MMPro.micromsg.SKBuiltinString_t _GroupUser = 27;
  for (unsigned int i = 0, n = this->_groupuser_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_groupuser(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.SnsObject)
}

::google::protobuf::uint8* SnsObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.SnsObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 _Id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_id(), target);
  }

  // optional string _Username = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsObject._Username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_username(), target);
  }

  // optional string _Nickname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsObject._Nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_nickname(), target);
  }

  // required uint32 _CreateTime = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_createtime(), target);
  }

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->_objectdesc_, deterministic, target);
  }

  // required uint32 _LikeFlag = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->_likeflag(), target);
  }

  // required uint32 _LikeCount = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->_likecount(), target);
  }

  // required uint32 _LikeUserListCount = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->_likeuserlistcount(), target);
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _LikeUserList = 9;
  for (unsigned int i = 0, n = this->_likeuserlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->_likeuserlist(i), deterministic, target);
  }

  // required uint32 _CommentCount = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->_commentcount(), target);
  }

  // required uint32 _CommentUserListCount = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->_commentuserlistcount(), target);
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _CommentUserList = 12;
  for (unsigned int i = 0, n = this->_commentuserlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->_commentuserlist(i), deterministic, target);
  }

  // required uint32 _WithUserCount = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->_withusercount(), target);
  }

  // required uint32 _WithUserListCount = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->_withuserlistcount(), target);
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _WithUserList = 15;
  for (unsigned int i = 0, n = this->_withuserlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->_withuserlist(i), deterministic, target);
  }

  // optional uint32 _ExtFlag = 16;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->_extflag(), target);
  }

  // optional uint32 _NoChange = 17;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->_nochange(), target);
  }

  // optional uint32 _GroupCount = 18;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->_groupcount(), target);
  }

  // repeated .MMPro.micromsg.SnsGroup _GroupList = 19;
  for (unsigned int i = 0, n = this->_grouplist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, this->_grouplist(i), deterministic, target);
  }

  // optional uint32 _IsNotRichText = 20;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->_isnotrichtext(), target);
  }

  // optional string _ReferUsername = 21;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_referusername().data(), this->_referusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsObject._ReferUsername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->_referusername(), target);
  }

  // optional uint64 _ReferId = 22;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(22, this->_referid(), target);
  }

  // optional uint32 _BlackListCount = 23;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->_blacklistcount(), target);
  }

  // repeated .MMPro.micromsg.SKBuiltinString_t _BlackList = 24;
  for (unsigned int i = 0, n = this->_blacklist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, this->_blacklist(i), deterministic, target);
  }

  // optional uint32 _DeleteFlag = 25;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->_deleteflag(), target);
  }

  // optional uint32 _GroupUserCount = 26;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->_groupusercount(), target);
  }

  // repeated .MMPro.micromsg.SKBuiltinString_t _GroupUser = 27;
  for (unsigned int i = 0, n = this->_groupuser_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, this->_groupuser(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.SnsObject)
  return target;
}

size_t SnsObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MMPro.micromsg.SnsObject)
  size_t total_size = 0;

  if (has__objectdesc()) {
    // required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_objectdesc_);
  }

  if (has__id()) {
    // required uint64 _Id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_id());
  }

  if (has__createtime()) {
    // required uint32 _CreateTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_createtime());
  }

  if (has__likeflag()) {
    // required uint32 _LikeFlag = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_likeflag());
  }

  if (has__likecount()) {
    // required uint32 _LikeCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_likecount());
  }

  if (has__likeuserlistcount()) {
    // required uint32 _LikeUserListCount = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_likeuserlistcount());
  }

  if (has__commentcount()) {
    // required uint32 _CommentCount = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_commentcount());
  }

  if (has__commentuserlistcount()) {
    // required uint32 _CommentUserListCount = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_commentuserlistcount());
  }

  if (has__withusercount()) {
    // required uint32 _WithUserCount = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_withusercount());
  }

  if (has__withuserlistcount()) {
    // required uint32 _WithUserListCount = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_withuserlistcount());
  }

  return total_size;
}
size_t SnsObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.SnsObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001ff8) ^ 0x00001ff8) == 0) {  // All required fields are present.
    // required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_objectdesc_);

    // required uint64 _Id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_id());

    // required uint32 _CreateTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_createtime());

    // required uint32 _LikeFlag = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_likeflag());

    // required uint32 _LikeCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_likecount());

    // required uint32 _LikeUserListCount = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_likeuserlistcount());

    // required uint32 _CommentCount = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_commentcount());

    // required uint32 _CommentUserListCount = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_commentuserlistcount());

    // required uint32 _WithUserCount = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_withusercount());

    // required uint32 _WithUserListCount = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_withuserlistcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MMPro.micromsg.SnsCommentInfo _LikeUserList = 9;
  {
    unsigned int count = this->_likeuserlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_likeuserlist(i));
    }
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _CommentUserList = 12;
  {
    unsigned int count = this->_commentuserlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_commentuserlist(i));
    }
  }

  // repeated .MMPro.micromsg.SnsCommentInfo _WithUserList = 15;
  {
    unsigned int count = this->_withuserlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_withuserlist(i));
    }
  }

  // repeated .MMPro.micromsg.SnsGroup _GroupList = 19;
  {
    unsigned int count = this->_grouplist_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_grouplist(i));
    }
  }

  // repeated .MMPro.micromsg.SKBuiltinString_t _BlackList = 24;
  {
    unsigned int count = this->_blacklist_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_blacklist(i));
    }
  }

  // repeated .MMPro.micromsg.SKBuiltinString_t _GroupUser = 27;
  {
    unsigned int count = this->_groupuser_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_groupuser(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string _Username = 2;
    if (has__username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_username());
    }

    // optional string _Nickname = 3;
    if (has__nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_nickname());
    }

    // optional string _ReferUsername = 21;
    if (has__referusername()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_referusername());
    }

  }
  if (_has_bits_[8 / 32] & 57344u) {
    // optional uint32 _ExtFlag = 16;
    if (has__extflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_extflag());
    }

    // optional uint32 _NoChange = 17;
    if (has__nochange()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_nochange());
    }

    // optional uint32 _GroupCount = 18;
    if (has__groupcount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_groupcount());
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional uint32 _IsNotRichText = 20;
    if (has__isnotrichtext()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_isnotrichtext());
    }

    // optional uint64 _ReferId = 22;
    if (has__referid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->_referid());
    }

    // optional uint32 _BlackListCount = 23;
    if (has__blacklistcount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_blacklistcount());
    }

    // optional uint32 _DeleteFlag = 25;
    if (has__deleteflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_deleteflag());
    }

    // optional uint32 _GroupUserCount = 26;
    if (has__groupusercount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_groupusercount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnsObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.SnsObject)
  GOOGLE_DCHECK_NE(&from, this);
  const SnsObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnsObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.SnsObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.SnsObject)
    MergeFrom(*source);
  }
}

void SnsObject::MergeFrom(const SnsObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.SnsObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _likeuserlist_.MergeFrom(from._likeuserlist_);
  _commentuserlist_.MergeFrom(from._commentuserlist_);
  _withuserlist_.MergeFrom(from._withuserlist_);
  _grouplist_.MergeFrom(from._grouplist_);
  _blacklist_.MergeFrom(from._blacklist_);
  _groupuser_.MergeFrom(from._groupuser_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__username();
      _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__nickname();
      _nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__referusername();
      _referusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._referusername_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable__objectdesc()->::MMPro::micromsg::SKBuiltinBuffer_t::MergeFrom(from._objectdesc());
    }
    if (cached_has_bits & 0x00000010u) {
      _id_ = from._id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _createtime_ = from._createtime_;
    }
    if (cached_has_bits & 0x00000040u) {
      _likeflag_ = from._likeflag_;
    }
    if (cached_has_bits & 0x00000080u) {
      _likecount_ = from._likecount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      _likeuserlistcount_ = from._likeuserlistcount_;
    }
    if (cached_has_bits & 0x00000200u) {
      _commentcount_ = from._commentcount_;
    }
    if (cached_has_bits & 0x00000400u) {
      _commentuserlistcount_ = from._commentuserlistcount_;
    }
    if (cached_has_bits & 0x00000800u) {
      _withusercount_ = from._withusercount_;
    }
    if (cached_has_bits & 0x00001000u) {
      _withuserlistcount_ = from._withuserlistcount_;
    }
    if (cached_has_bits & 0x00002000u) {
      _extflag_ = from._extflag_;
    }
    if (cached_has_bits & 0x00004000u) {
      _nochange_ = from._nochange_;
    }
    if (cached_has_bits & 0x00008000u) {
      _groupcount_ = from._groupcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      _isnotrichtext_ = from._isnotrichtext_;
    }
    if (cached_has_bits & 0x00020000u) {
      _referid_ = from._referid_;
    }
    if (cached_has_bits & 0x00040000u) {
      _blacklistcount_ = from._blacklistcount_;
    }
    if (cached_has_bits & 0x00080000u) {
      _deleteflag_ = from._deleteflag_;
    }
    if (cached_has_bits & 0x00100000u) {
      _groupusercount_ = from._groupusercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SnsObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.SnsObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnsObject::CopyFrom(const SnsObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.SnsObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnsObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001ff8) != 0x00001ff8) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->_likeuserlist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->_commentuserlist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->_withuserlist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->_grouplist())) return false;
  if (has__objectdesc()) {
    if (!this->_objectdesc_->IsInitialized()) return false;
  }
  return true;
}

void SnsObject::Swap(SnsObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnsObject::InternalSwap(SnsObject* other) {
  _likeuserlist_.InternalSwap(&other->_likeuserlist_);
  _commentuserlist_.InternalSwap(&other->_commentuserlist_);
  _withuserlist_.InternalSwap(&other->_withuserlist_);
  _grouplist_.InternalSwap(&other->_grouplist_);
  _blacklist_.InternalSwap(&other->_blacklist_);
  _groupuser_.InternalSwap(&other->_groupuser_);
  _username_.Swap(&other->_username_);
  _nickname_.Swap(&other->_nickname_);
  _referusername_.Swap(&other->_referusername_);
  std::swap(_objectdesc_, other->_objectdesc_);
  std::swap(_id_, other->_id_);
  std::swap(_createtime_, other->_createtime_);
  std::swap(_likeflag_, other->_likeflag_);
  std::swap(_likecount_, other->_likecount_);
  std::swap(_likeuserlistcount_, other->_likeuserlistcount_);
  std::swap(_commentcount_, other->_commentcount_);
  std::swap(_commentuserlistcount_, other->_commentuserlistcount_);
  std::swap(_withusercount_, other->_withusercount_);
  std::swap(_withuserlistcount_, other->_withuserlistcount_);
  std::swap(_extflag_, other->_extflag_);
  std::swap(_nochange_, other->_nochange_);
  std::swap(_groupcount_, other->_groupcount_);
  std::swap(_isnotrichtext_, other->_isnotrichtext_);
  std::swap(_referid_, other->_referid_);
  std::swap(_blacklistcount_, other->_blacklistcount_);
  std::swap(_deleteflag_, other->_deleteflag_);
  std::swap(_groupusercount_, other->_groupusercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnsObject::GetMetadata() const {
  protobuf_SnsObject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SnsObject_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SnsObject

// required uint64 _Id = 1;
bool SnsObject::has__id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SnsObject::set_has__id() {
  _has_bits_[0] |= 0x00000010u;
}
void SnsObject::clear_has__id() {
  _has_bits_[0] &= ~0x00000010u;
}
void SnsObject::clear__id() {
  _id_ = GOOGLE_ULONGLONG(0);
  clear_has__id();
}
::google::protobuf::uint64 SnsObject::_id() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._Id)
  return _id_;
}
void SnsObject::set__id(::google::protobuf::uint64 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._Id)
}

// optional string _Username = 2;
bool SnsObject::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SnsObject::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
void SnsObject::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
void SnsObject::clear__username() {
  _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__username();
}
const ::std::string& SnsObject::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._Username)
  return _username_.GetNoArena();
}
void SnsObject::set__username(const ::std::string& value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._Username)
}
#if LANG_CXX11
void SnsObject::set__username(::std::string&& value) {
  set_has__username();
  _username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SnsObject._Username)
}
#endif
void SnsObject::set__username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SnsObject._Username)
}
void SnsObject::set__username(const char* value, size_t size) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SnsObject._Username)
}
::std::string* SnsObject::mutable__username() {
  set_has__username();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._Username)
  return _username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnsObject::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._Username)
  clear_has__username();
  return _username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnsObject::set_allocated__username(::std::string* _username) {
  if (_username != NULL) {
    set_has__username();
  } else {
    clear_has__username();
  }
  _username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _username);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._Username)
}

// optional string _Nickname = 3;
bool SnsObject::has__nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SnsObject::set_has__nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void SnsObject::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void SnsObject::clear__nickname() {
  _nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nickname();
}
const ::std::string& SnsObject::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._Nickname)
  return _nickname_.GetNoArena();
}
void SnsObject::set__nickname(const ::std::string& value) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._Nickname)
}
#if LANG_CXX11
void SnsObject::set__nickname(::std::string&& value) {
  set_has__nickname();
  _nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SnsObject._Nickname)
}
#endif
void SnsObject::set__nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SnsObject._Nickname)
}
void SnsObject::set__nickname(const char* value, size_t size) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SnsObject._Nickname)
}
::std::string* SnsObject::mutable__nickname() {
  set_has__nickname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._Nickname)
  return _nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnsObject::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._Nickname)
  clear_has__nickname();
  return _nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnsObject::set_allocated__nickname(::std::string* _nickname) {
  if (_nickname != NULL) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  _nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nickname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._Nickname)
}

// required uint32 _CreateTime = 4;
bool SnsObject::has__createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SnsObject::set_has__createtime() {
  _has_bits_[0] |= 0x00000020u;
}
void SnsObject::clear_has__createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
void SnsObject::clear__createtime() {
  _createtime_ = 0u;
  clear_has__createtime();
}
::google::protobuf::uint32 SnsObject::_createtime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CreateTime)
  return _createtime_;
}
void SnsObject::set__createtime(::google::protobuf::uint32 value) {
  set_has__createtime();
  _createtime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._CreateTime)
}

// required .MMPro.micromsg.SKBuiltinBuffer_t _ObjectDesc = 5;
bool SnsObject::has__objectdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SnsObject::set_has__objectdesc() {
  _has_bits_[0] |= 0x00000008u;
}
void SnsObject::clear_has__objectdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
void SnsObject::clear__objectdesc() {
  if (_objectdesc_ != NULL) _objectdesc_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__objectdesc();
}
const ::MMPro::micromsg::SKBuiltinBuffer_t& SnsObject::_objectdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ObjectDesc)
  return _objectdesc_ != NULL ? *_objectdesc_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinBuffer_t* SnsObject::mutable__objectdesc() {
  set_has__objectdesc();
  if (_objectdesc_ == NULL) {
    _objectdesc_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._ObjectDesc)
  return _objectdesc_;
}
::MMPro::micromsg::SKBuiltinBuffer_t* SnsObject::release__objectdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._ObjectDesc)
  clear_has__objectdesc();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _objectdesc_;
  _objectdesc_ = NULL;
  return temp;
}
void SnsObject::set_allocated__objectdesc(::MMPro::micromsg::SKBuiltinBuffer_t* _objectdesc) {
  delete _objectdesc_;
  _objectdesc_ = _objectdesc;
  if (_objectdesc) {
    set_has__objectdesc();
  } else {
    clear_has__objectdesc();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._ObjectDesc)
}

// required uint32 _LikeFlag = 6;
bool SnsObject::has__likeflag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SnsObject::set_has__likeflag() {
  _has_bits_[0] |= 0x00000040u;
}
void SnsObject::clear_has__likeflag() {
  _has_bits_[0] &= ~0x00000040u;
}
void SnsObject::clear__likeflag() {
  _likeflag_ = 0u;
  clear_has__likeflag();
}
::google::protobuf::uint32 SnsObject::_likeflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeFlag)
  return _likeflag_;
}
void SnsObject::set__likeflag(::google::protobuf::uint32 value) {
  set_has__likeflag();
  _likeflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._LikeFlag)
}

// required uint32 _LikeCount = 7;
bool SnsObject::has__likecount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SnsObject::set_has__likecount() {
  _has_bits_[0] |= 0x00000080u;
}
void SnsObject::clear_has__likecount() {
  _has_bits_[0] &= ~0x00000080u;
}
void SnsObject::clear__likecount() {
  _likecount_ = 0u;
  clear_has__likecount();
}
::google::protobuf::uint32 SnsObject::_likecount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeCount)
  return _likecount_;
}
void SnsObject::set__likecount(::google::protobuf::uint32 value) {
  set_has__likecount();
  _likecount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._LikeCount)
}

// required uint32 _LikeUserListCount = 8;
bool SnsObject::has__likeuserlistcount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SnsObject::set_has__likeuserlistcount() {
  _has_bits_[0] |= 0x00000100u;
}
void SnsObject::clear_has__likeuserlistcount() {
  _has_bits_[0] &= ~0x00000100u;
}
void SnsObject::clear__likeuserlistcount() {
  _likeuserlistcount_ = 0u;
  clear_has__likeuserlistcount();
}
::google::protobuf::uint32 SnsObject::_likeuserlistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeUserListCount)
  return _likeuserlistcount_;
}
void SnsObject::set__likeuserlistcount(::google::protobuf::uint32 value) {
  set_has__likeuserlistcount();
  _likeuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._LikeUserListCount)
}

// repeated .MMPro.micromsg.SnsCommentInfo _LikeUserList = 9;
int SnsObject::_likeuserlist_size() const {
  return _likeuserlist_.size();
}
void SnsObject::clear__likeuserlist() {
  _likeuserlist_.Clear();
}
const ::MMPro::micromsg::SnsCommentInfo& SnsObject::_likeuserlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_.Get(index);
}
::MMPro::micromsg::SnsCommentInfo* SnsObject::mutable__likeuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_.Mutable(index);
}
::MMPro::micromsg::SnsCommentInfo* SnsObject::add__likeuserlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
SnsObject::mutable__likeuserlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._LikeUserList)
  return &_likeuserlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
SnsObject::_likeuserlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._LikeUserList)
  return _likeuserlist_;
}

// required uint32 _CommentCount = 10;
bool SnsObject::has__commentcount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SnsObject::set_has__commentcount() {
  _has_bits_[0] |= 0x00000200u;
}
void SnsObject::clear_has__commentcount() {
  _has_bits_[0] &= ~0x00000200u;
}
void SnsObject::clear__commentcount() {
  _commentcount_ = 0u;
  clear_has__commentcount();
}
::google::protobuf::uint32 SnsObject::_commentcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CommentCount)
  return _commentcount_;
}
void SnsObject::set__commentcount(::google::protobuf::uint32 value) {
  set_has__commentcount();
  _commentcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._CommentCount)
}

// required uint32 _CommentUserListCount = 11;
bool SnsObject::has__commentuserlistcount() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SnsObject::set_has__commentuserlistcount() {
  _has_bits_[0] |= 0x00000400u;
}
void SnsObject::clear_has__commentuserlistcount() {
  _has_bits_[0] &= ~0x00000400u;
}
void SnsObject::clear__commentuserlistcount() {
  _commentuserlistcount_ = 0u;
  clear_has__commentuserlistcount();
}
::google::protobuf::uint32 SnsObject::_commentuserlistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CommentUserListCount)
  return _commentuserlistcount_;
}
void SnsObject::set__commentuserlistcount(::google::protobuf::uint32 value) {
  set_has__commentuserlistcount();
  _commentuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._CommentUserListCount)
}

// repeated .MMPro.micromsg.SnsCommentInfo _CommentUserList = 12;
int SnsObject::_commentuserlist_size() const {
  return _commentuserlist_.size();
}
void SnsObject::clear__commentuserlist() {
  _commentuserlist_.Clear();
}
const ::MMPro::micromsg::SnsCommentInfo& SnsObject::_commentuserlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_.Get(index);
}
::MMPro::micromsg::SnsCommentInfo* SnsObject::mutable__commentuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_.Mutable(index);
}
::MMPro::micromsg::SnsCommentInfo* SnsObject::add__commentuserlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
SnsObject::mutable__commentuserlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._CommentUserList)
  return &_commentuserlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
SnsObject::_commentuserlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._CommentUserList)
  return _commentuserlist_;
}

// required uint32 _WithUserCount = 13;
bool SnsObject::has__withusercount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SnsObject::set_has__withusercount() {
  _has_bits_[0] |= 0x00000800u;
}
void SnsObject::clear_has__withusercount() {
  _has_bits_[0] &= ~0x00000800u;
}
void SnsObject::clear__withusercount() {
  _withusercount_ = 0u;
  clear_has__withusercount();
}
::google::protobuf::uint32 SnsObject::_withusercount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._WithUserCount)
  return _withusercount_;
}
void SnsObject::set__withusercount(::google::protobuf::uint32 value) {
  set_has__withusercount();
  _withusercount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._WithUserCount)
}

// required uint32 _WithUserListCount = 14;
bool SnsObject::has__withuserlistcount() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SnsObject::set_has__withuserlistcount() {
  _has_bits_[0] |= 0x00001000u;
}
void SnsObject::clear_has__withuserlistcount() {
  _has_bits_[0] &= ~0x00001000u;
}
void SnsObject::clear__withuserlistcount() {
  _withuserlistcount_ = 0u;
  clear_has__withuserlistcount();
}
::google::protobuf::uint32 SnsObject::_withuserlistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._WithUserListCount)
  return _withuserlistcount_;
}
void SnsObject::set__withuserlistcount(::google::protobuf::uint32 value) {
  set_has__withuserlistcount();
  _withuserlistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._WithUserListCount)
}

// repeated .MMPro.micromsg.SnsCommentInfo _WithUserList = 15;
int SnsObject::_withuserlist_size() const {
  return _withuserlist_.size();
}
void SnsObject::clear__withuserlist() {
  _withuserlist_.Clear();
}
const ::MMPro::micromsg::SnsCommentInfo& SnsObject::_withuserlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_.Get(index);
}
::MMPro::micromsg::SnsCommentInfo* SnsObject::mutable__withuserlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_.Mutable(index);
}
::MMPro::micromsg::SnsCommentInfo* SnsObject::add__withuserlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >*
SnsObject::mutable__withuserlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._WithUserList)
  return &_withuserlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsCommentInfo >&
SnsObject::_withuserlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._WithUserList)
  return _withuserlist_;
}

// optional uint32 _ExtFlag = 16;
bool SnsObject::has__extflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void SnsObject::set_has__extflag() {
  _has_bits_[0] |= 0x00002000u;
}
void SnsObject::clear_has__extflag() {
  _has_bits_[0] &= ~0x00002000u;
}
void SnsObject::clear__extflag() {
  _extflag_ = 0u;
  clear_has__extflag();
}
::google::protobuf::uint32 SnsObject::_extflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ExtFlag)
  return _extflag_;
}
void SnsObject::set__extflag(::google::protobuf::uint32 value) {
  set_has__extflag();
  _extflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._ExtFlag)
}

// optional uint32 _NoChange = 17;
bool SnsObject::has__nochange() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void SnsObject::set_has__nochange() {
  _has_bits_[0] |= 0x00004000u;
}
void SnsObject::clear_has__nochange() {
  _has_bits_[0] &= ~0x00004000u;
}
void SnsObject::clear__nochange() {
  _nochange_ = 0u;
  clear_has__nochange();
}
::google::protobuf::uint32 SnsObject::_nochange() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._NoChange)
  return _nochange_;
}
void SnsObject::set__nochange(::google::protobuf::uint32 value) {
  set_has__nochange();
  _nochange_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._NoChange)
}

// optional uint32 _GroupCount = 18;
bool SnsObject::has__groupcount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void SnsObject::set_has__groupcount() {
  _has_bits_[0] |= 0x00008000u;
}
void SnsObject::clear_has__groupcount() {
  _has_bits_[0] &= ~0x00008000u;
}
void SnsObject::clear__groupcount() {
  _groupcount_ = 0u;
  clear_has__groupcount();
}
::google::protobuf::uint32 SnsObject::_groupcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupCount)
  return _groupcount_;
}
void SnsObject::set__groupcount(::google::protobuf::uint32 value) {
  set_has__groupcount();
  _groupcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._GroupCount)
}

// repeated .MMPro.micromsg.SnsGroup _GroupList = 19;
int SnsObject::_grouplist_size() const {
  return _grouplist_.size();
}
void SnsObject::clear__grouplist() {
  _grouplist_.Clear();
}
const ::MMPro::micromsg::SnsGroup& SnsObject::_grouplist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_.Get(index);
}
::MMPro::micromsg::SnsGroup* SnsObject::mutable__grouplist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_.Mutable(index);
}
::MMPro::micromsg::SnsGroup* SnsObject::add__grouplist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsGroup >*
SnsObject::mutable__grouplist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._GroupList)
  return &_grouplist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsGroup >&
SnsObject::_grouplist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._GroupList)
  return _grouplist_;
}

// optional uint32 _IsNotRichText = 20;
bool SnsObject::has__isnotrichtext() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void SnsObject::set_has__isnotrichtext() {
  _has_bits_[0] |= 0x00010000u;
}
void SnsObject::clear_has__isnotrichtext() {
  _has_bits_[0] &= ~0x00010000u;
}
void SnsObject::clear__isnotrichtext() {
  _isnotrichtext_ = 0u;
  clear_has__isnotrichtext();
}
::google::protobuf::uint32 SnsObject::_isnotrichtext() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._IsNotRichText)
  return _isnotrichtext_;
}
void SnsObject::set__isnotrichtext(::google::protobuf::uint32 value) {
  set_has__isnotrichtext();
  _isnotrichtext_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._IsNotRichText)
}

// optional string _ReferUsername = 21;
bool SnsObject::has__referusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SnsObject::set_has__referusername() {
  _has_bits_[0] |= 0x00000004u;
}
void SnsObject::clear_has__referusername() {
  _has_bits_[0] &= ~0x00000004u;
}
void SnsObject::clear__referusername() {
  _referusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__referusername();
}
const ::std::string& SnsObject::_referusername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ReferUsername)
  return _referusername_.GetNoArena();
}
void SnsObject::set__referusername(const ::std::string& value) {
  set_has__referusername();
  _referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._ReferUsername)
}
#if LANG_CXX11
void SnsObject::set__referusername(::std::string&& value) {
  set_has__referusername();
  _referusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SnsObject._ReferUsername)
}
#endif
void SnsObject::set__referusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__referusername();
  _referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SnsObject._ReferUsername)
}
void SnsObject::set__referusername(const char* value, size_t size) {
  set_has__referusername();
  _referusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SnsObject._ReferUsername)
}
::std::string* SnsObject::mutable__referusername() {
  set_has__referusername();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._ReferUsername)
  return _referusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnsObject::release__referusername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsObject._ReferUsername)
  clear_has__referusername();
  return _referusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnsObject::set_allocated__referusername(::std::string* _referusername) {
  if (_referusername != NULL) {
    set_has__referusername();
  } else {
    clear_has__referusername();
  }
  _referusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _referusername);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsObject._ReferUsername)
}

// optional uint64 _ReferId = 22;
bool SnsObject::has__referid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void SnsObject::set_has__referid() {
  _has_bits_[0] |= 0x00020000u;
}
void SnsObject::clear_has__referid() {
  _has_bits_[0] &= ~0x00020000u;
}
void SnsObject::clear__referid() {
  _referid_ = GOOGLE_ULONGLONG(0);
  clear_has__referid();
}
::google::protobuf::uint64 SnsObject::_referid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._ReferId)
  return _referid_;
}
void SnsObject::set__referid(::google::protobuf::uint64 value) {
  set_has__referid();
  _referid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._ReferId)
}

// optional uint32 _BlackListCount = 23;
bool SnsObject::has__blacklistcount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void SnsObject::set_has__blacklistcount() {
  _has_bits_[0] |= 0x00040000u;
}
void SnsObject::clear_has__blacklistcount() {
  _has_bits_[0] &= ~0x00040000u;
}
void SnsObject::clear__blacklistcount() {
  _blacklistcount_ = 0u;
  clear_has__blacklistcount();
}
::google::protobuf::uint32 SnsObject::_blacklistcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._BlackListCount)
  return _blacklistcount_;
}
void SnsObject::set__blacklistcount(::google::protobuf::uint32 value) {
  set_has__blacklistcount();
  _blacklistcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._BlackListCount)
}

// repeated .MMPro.micromsg.SKBuiltinString_t _BlackList = 24;
int SnsObject::_blacklist_size() const {
  return _blacklist_.size();
}
void SnsObject::clear__blacklist() {
  _blacklist_.Clear();
}
const ::MMPro::micromsg::SKBuiltinString_t& SnsObject::_blacklist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_.Get(index);
}
::MMPro::micromsg::SKBuiltinString_t* SnsObject::mutable__blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_.Mutable(index);
}
::MMPro::micromsg::SKBuiltinString_t* SnsObject::add__blacklist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >*
SnsObject::mutable__blacklist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._BlackList)
  return &_blacklist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >&
SnsObject::_blacklist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._BlackList)
  return _blacklist_;
}

// optional uint32 _DeleteFlag = 25;
bool SnsObject::has__deleteflag() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void SnsObject::set_has__deleteflag() {
  _has_bits_[0] |= 0x00080000u;
}
void SnsObject::clear_has__deleteflag() {
  _has_bits_[0] &= ~0x00080000u;
}
void SnsObject::clear__deleteflag() {
  _deleteflag_ = 0u;
  clear_has__deleteflag();
}
::google::protobuf::uint32 SnsObject::_deleteflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._DeleteFlag)
  return _deleteflag_;
}
void SnsObject::set__deleteflag(::google::protobuf::uint32 value) {
  set_has__deleteflag();
  _deleteflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._DeleteFlag)
}

// optional uint32 _GroupUserCount = 26;
bool SnsObject::has__groupusercount() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void SnsObject::set_has__groupusercount() {
  _has_bits_[0] |= 0x00100000u;
}
void SnsObject::clear_has__groupusercount() {
  _has_bits_[0] &= ~0x00100000u;
}
void SnsObject::clear__groupusercount() {
  _groupusercount_ = 0u;
  clear_has__groupusercount();
}
::google::protobuf::uint32 SnsObject::_groupusercount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupUserCount)
  return _groupusercount_;
}
void SnsObject::set__groupusercount(::google::protobuf::uint32 value) {
  set_has__groupusercount();
  _groupusercount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsObject._GroupUserCount)
}

// repeated .MMPro.micromsg.SKBuiltinString_t _GroupUser = 27;
int SnsObject::_groupuser_size() const {
  return _groupuser_.size();
}
void SnsObject::clear__groupuser() {
  _groupuser_.Clear();
}
const ::MMPro::micromsg::SKBuiltinString_t& SnsObject::_groupuser(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_.Get(index);
}
::MMPro::micromsg::SKBuiltinString_t* SnsObject::mutable__groupuser(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_.Mutable(index);
}
::MMPro::micromsg::SKBuiltinString_t* SnsObject::add__groupuser() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >*
SnsObject::mutable__groupuser() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsObject._GroupUser)
  return &_groupuser_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SKBuiltinString_t >&
SnsObject::_groupuser() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsObject._GroupUser)
  return _groupuser_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
