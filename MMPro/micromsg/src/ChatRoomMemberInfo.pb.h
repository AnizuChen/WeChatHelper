// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatRoomMemberInfo.proto

#ifndef PROTOBUF_ChatRoomMemberInfo_2eproto__INCLUDED
#define PROTOBUF_ChatRoomMemberInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_ChatRoomMemberInfo_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ChatRoomMemberInfo_2eproto

// ===================================================================

class ChatRoomMemberInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.ChatRoomMemberInfo) */ {
 public:
  ChatRoomMemberInfo();
  virtual ~ChatRoomMemberInfo();

  ChatRoomMemberInfo(const ChatRoomMemberInfo& from);

  inline ChatRoomMemberInfo& operator=(const ChatRoomMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRoomMemberInfo& default_instance();

  static inline const ChatRoomMemberInfo* internal_default_instance() {
    return reinterpret_cast<const ChatRoomMemberInfo*>(
               &_ChatRoomMemberInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChatRoomMemberInfo* other);

  // implements Message ----------------------------------------------

  inline ChatRoomMemberInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRoomMemberInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRoomMemberInfo& from);
  void MergeFrom(const ChatRoomMemberInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRoomMemberInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _UserName = 1;
  bool has__username() const;
  void clear__username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& _username() const;
  void set__username(const ::std::string& value);
  #if LANG_CXX11
  void set__username(::std::string&& value);
  #endif
  void set__username(const char* value);
  void set__username(const char* value, size_t size);
  ::std::string* mutable__username();
  ::std::string* release__username();
  void set_allocated__username(::std::string* _username);

  // optional string _NickName = 2;
  bool has__nickname() const;
  void clear__nickname();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& _nickname() const;
  void set__nickname(const ::std::string& value);
  #if LANG_CXX11
  void set__nickname(::std::string&& value);
  #endif
  void set__nickname(const char* value);
  void set__nickname(const char* value, size_t size);
  ::std::string* mutable__nickname();
  ::std::string* release__nickname();
  void set_allocated__nickname(::std::string* _nickname);

  // optional string _DisplayName = 3;
  bool has__displayname() const;
  void clear__displayname();
  static const int kDisplayNameFieldNumber = 3;
  const ::std::string& _displayname() const;
  void set__displayname(const ::std::string& value);
  #if LANG_CXX11
  void set__displayname(::std::string&& value);
  #endif
  void set__displayname(const char* value);
  void set__displayname(const char* value, size_t size);
  ::std::string* mutable__displayname();
  ::std::string* release__displayname();
  void set_allocated__displayname(::std::string* _displayname);

  // optional string _BigHeadImgUrl = 4;
  bool has__bigheadimgurl() const;
  void clear__bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 4;
  const ::std::string& _bigheadimgurl() const;
  void set__bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set__bigheadimgurl(::std::string&& value);
  #endif
  void set__bigheadimgurl(const char* value);
  void set__bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable__bigheadimgurl();
  ::std::string* release__bigheadimgurl();
  void set_allocated__bigheadimgurl(::std::string* _bigheadimgurl);

  // optional string _SmallHeadImgUrl = 5;
  bool has__smallheadimgurl() const;
  void clear__smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 5;
  const ::std::string& _smallheadimgurl() const;
  void set__smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set__smallheadimgurl(::std::string&& value);
  #endif
  void set__smallheadimgurl(const char* value);
  void set__smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable__smallheadimgurl();
  ::std::string* release__smallheadimgurl();
  void set_allocated__smallheadimgurl(::std::string* _smallheadimgurl);

  // required uint32 _ChatroomMemberFlag = 6;
  bool has__chatroommemberflag() const;
  void clear__chatroommemberflag();
  static const int kChatroomMemberFlagFieldNumber = 6;
  ::google::protobuf::uint32 _chatroommemberflag() const;
  void set__chatroommemberflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.ChatRoomMemberInfo)
 private:
  void set_has__username();
  void clear_has__username();
  void set_has__nickname();
  void clear_has__nickname();
  void set_has__displayname();
  void clear_has__displayname();
  void set_has__bigheadimgurl();
  void clear_has__bigheadimgurl();
  void set_has__smallheadimgurl();
  void clear_has__smallheadimgurl();
  void set_has__chatroommemberflag();
  void clear_has__chatroommemberflag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _username_;
  ::google::protobuf::internal::ArenaStringPtr _nickname_;
  ::google::protobuf::internal::ArenaStringPtr _displayname_;
  ::google::protobuf::internal::ArenaStringPtr _bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr _smallheadimgurl_;
  ::google::protobuf::uint32 _chatroommemberflag_;
  friend struct protobuf_ChatRoomMemberInfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRoomMemberInfo

// optional string _UserName = 1;
inline bool ChatRoomMemberInfo::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRoomMemberInfo::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRoomMemberInfo::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRoomMemberInfo::clear__username() {
  _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__username();
}
inline const ::std::string& ChatRoomMemberInfo::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ChatRoomMemberInfo._UserName)
  return _username_.GetNoArena();
}
inline void ChatRoomMemberInfo::set__username(const ::std::string& value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ChatRoomMemberInfo._UserName)
}
#if LANG_CXX11
inline void ChatRoomMemberInfo::set__username(::std::string&& value) {
  set_has__username();
  _username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ChatRoomMemberInfo._UserName)
}
#endif
inline void ChatRoomMemberInfo::set__username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ChatRoomMemberInfo._UserName)
}
inline void ChatRoomMemberInfo::set__username(const char* value, size_t size) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ChatRoomMemberInfo._UserName)
}
inline ::std::string* ChatRoomMemberInfo::mutable__username() {
  set_has__username();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ChatRoomMemberInfo._UserName)
  return _username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRoomMemberInfo::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ChatRoomMemberInfo._UserName)
  clear_has__username();
  return _username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRoomMemberInfo::set_allocated__username(::std::string* _username) {
  if (_username != NULL) {
    set_has__username();
  } else {
    clear_has__username();
  }
  _username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _username);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ChatRoomMemberInfo._UserName)
}

// optional string _NickName = 2;
inline bool ChatRoomMemberInfo::has__nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatRoomMemberInfo::set_has__nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatRoomMemberInfo::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatRoomMemberInfo::clear__nickname() {
  _nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nickname();
}
inline const ::std::string& ChatRoomMemberInfo::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ChatRoomMemberInfo._NickName)
  return _nickname_.GetNoArena();
}
inline void ChatRoomMemberInfo::set__nickname(const ::std::string& value) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ChatRoomMemberInfo._NickName)
}
#if LANG_CXX11
inline void ChatRoomMemberInfo::set__nickname(::std::string&& value) {
  set_has__nickname();
  _nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ChatRoomMemberInfo._NickName)
}
#endif
inline void ChatRoomMemberInfo::set__nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ChatRoomMemberInfo._NickName)
}
inline void ChatRoomMemberInfo::set__nickname(const char* value, size_t size) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ChatRoomMemberInfo._NickName)
}
inline ::std::string* ChatRoomMemberInfo::mutable__nickname() {
  set_has__nickname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ChatRoomMemberInfo._NickName)
  return _nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRoomMemberInfo::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ChatRoomMemberInfo._NickName)
  clear_has__nickname();
  return _nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRoomMemberInfo::set_allocated__nickname(::std::string* _nickname) {
  if (_nickname != NULL) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  _nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nickname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ChatRoomMemberInfo._NickName)
}

// optional string _DisplayName = 3;
inline bool ChatRoomMemberInfo::has__displayname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatRoomMemberInfo::set_has__displayname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatRoomMemberInfo::clear_has__displayname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatRoomMemberInfo::clear__displayname() {
  _displayname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__displayname();
}
inline const ::std::string& ChatRoomMemberInfo::_displayname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
  return _displayname_.GetNoArena();
}
inline void ChatRoomMemberInfo::set__displayname(const ::std::string& value) {
  set_has__displayname();
  _displayname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
}
#if LANG_CXX11
inline void ChatRoomMemberInfo::set__displayname(::std::string&& value) {
  set_has__displayname();
  _displayname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
}
#endif
inline void ChatRoomMemberInfo::set__displayname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__displayname();
  _displayname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
}
inline void ChatRoomMemberInfo::set__displayname(const char* value, size_t size) {
  set_has__displayname();
  _displayname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
}
inline ::std::string* ChatRoomMemberInfo::mutable__displayname() {
  set_has__displayname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
  return _displayname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRoomMemberInfo::release__displayname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
  clear_has__displayname();
  return _displayname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRoomMemberInfo::set_allocated__displayname(::std::string* _displayname) {
  if (_displayname != NULL) {
    set_has__displayname();
  } else {
    clear_has__displayname();
  }
  _displayname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _displayname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ChatRoomMemberInfo._DisplayName)
}

// optional string _BigHeadImgUrl = 4;
inline bool ChatRoomMemberInfo::has__bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatRoomMemberInfo::set_has__bigheadimgurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatRoomMemberInfo::clear_has__bigheadimgurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatRoomMemberInfo::clear__bigheadimgurl() {
  _bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__bigheadimgurl();
}
inline const ::std::string& ChatRoomMemberInfo::_bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
  return _bigheadimgurl_.GetNoArena();
}
inline void ChatRoomMemberInfo::set__bigheadimgurl(const ::std::string& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
}
#if LANG_CXX11
inline void ChatRoomMemberInfo::set__bigheadimgurl(::std::string&& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
}
#endif
inline void ChatRoomMemberInfo::set__bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
}
inline void ChatRoomMemberInfo::set__bigheadimgurl(const char* value, size_t size) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
}
inline ::std::string* ChatRoomMemberInfo::mutable__bigheadimgurl() {
  set_has__bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
  return _bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRoomMemberInfo::release__bigheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
  clear_has__bigheadimgurl();
  return _bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRoomMemberInfo::set_allocated__bigheadimgurl(::std::string* _bigheadimgurl) {
  if (_bigheadimgurl != NULL) {
    set_has__bigheadimgurl();
  } else {
    clear_has__bigheadimgurl();
  }
  _bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ChatRoomMemberInfo._BigHeadImgUrl)
}

// optional string _SmallHeadImgUrl = 5;
inline bool ChatRoomMemberInfo::has__smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatRoomMemberInfo::set_has__smallheadimgurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatRoomMemberInfo::clear_has__smallheadimgurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatRoomMemberInfo::clear__smallheadimgurl() {
  _smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__smallheadimgurl();
}
inline const ::std::string& ChatRoomMemberInfo::_smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
  return _smallheadimgurl_.GetNoArena();
}
inline void ChatRoomMemberInfo::set__smallheadimgurl(const ::std::string& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
}
#if LANG_CXX11
inline void ChatRoomMemberInfo::set__smallheadimgurl(::std::string&& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
}
#endif
inline void ChatRoomMemberInfo::set__smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
}
inline void ChatRoomMemberInfo::set__smallheadimgurl(const char* value, size_t size) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
}
inline ::std::string* ChatRoomMemberInfo::mutable__smallheadimgurl() {
  set_has__smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
  return _smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatRoomMemberInfo::release__smallheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
  clear_has__smallheadimgurl();
  return _smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatRoomMemberInfo::set_allocated__smallheadimgurl(::std::string* _smallheadimgurl) {
  if (_smallheadimgurl != NULL) {
    set_has__smallheadimgurl();
  } else {
    clear_has__smallheadimgurl();
  }
  _smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ChatRoomMemberInfo._SmallHeadImgUrl)
}

// required uint32 _ChatroomMemberFlag = 6;
inline bool ChatRoomMemberInfo::has__chatroommemberflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatRoomMemberInfo::set_has__chatroommemberflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatRoomMemberInfo::clear_has__chatroommemberflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatRoomMemberInfo::clear__chatroommemberflag() {
  _chatroommemberflag_ = 0u;
  clear_has__chatroommemberflag();
}
inline ::google::protobuf::uint32 ChatRoomMemberInfo::_chatroommemberflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ChatRoomMemberInfo._ChatroomMemberFlag)
  return _chatroommemberflag_;
}
inline void ChatRoomMemberInfo::set__chatroommemberflag(::google::protobuf::uint32 value) {
  set_has__chatroommemberflag();
  _chatroommemberflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ChatRoomMemberInfo._ChatroomMemberFlag)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChatRoomMemberInfo_2eproto__INCLUDED
