// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CreateChatRoomResponse.proto

#ifndef PROTOBUF_CreateChatRoomResponse_2eproto__INCLUDED
#define PROTOBUF_CreateChatRoomResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "BaseResponse.pb.h"
#include "SKBuiltinString_t.pb.h"
#include "MemberResp.pb.h"
#include "SKBuiltinBuffer_t.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class CreateChatRoomResponse;
class CreateChatRoomResponseDefaultTypeInternal;
extern CreateChatRoomResponseDefaultTypeInternal _CreateChatRoomResponse_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_CreateChatRoomResponse_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_CreateChatRoomResponse_2eproto

// ===================================================================

class CreateChatRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.CreateChatRoomResponse) */ {
 public:
  CreateChatRoomResponse();
  virtual ~CreateChatRoomResponse();

  CreateChatRoomResponse(const CreateChatRoomResponse& from);

  inline CreateChatRoomResponse& operator=(const CreateChatRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateChatRoomResponse& default_instance();

  static inline const CreateChatRoomResponse* internal_default_instance() {
    return reinterpret_cast<const CreateChatRoomResponse*>(
               &_CreateChatRoomResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CreateChatRoomResponse* other);

  // implements Message ----------------------------------------------

  inline CreateChatRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateChatRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateChatRoomResponse& from);
  void MergeFrom(const CreateChatRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateChatRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MMPro.micromsg.MemberResp _MemberList = 6;
  int _memberlist_size() const;
  void clear__memberlist();
  static const int kMemberListFieldNumber = 6;
  const ::MMPro::micromsg::MemberResp& _memberlist(int index) const;
  ::MMPro::micromsg::MemberResp* mutable__memberlist(int index);
  ::MMPro::micromsg::MemberResp* add__memberlist();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::MemberResp >*
      mutable__memberlist();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::MemberResp >&
      _memberlist() const;

  // optional string _BigHeadImgUrl = 9;
  bool has__bigheadimgurl() const;
  void clear__bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 9;
  const ::std::string& _bigheadimgurl() const;
  void set__bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set__bigheadimgurl(::std::string&& value);
  #endif
  void set__bigheadimgurl(const char* value);
  void set__bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable__bigheadimgurl();
  ::std::string* release__bigheadimgurl();
  void set_allocated__bigheadimgurl(::std::string* _bigheadimgurl);

  // optional string _SmallHeadImgUrl = 10;
  bool has__smallheadimgurl() const;
  void clear__smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 10;
  const ::std::string& _smallheadimgurl() const;
  void set__smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set__smallheadimgurl(::std::string&& value);
  #endif
  void set__smallheadimgurl(const char* value);
  void set__smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable__smallheadimgurl();
  ::std::string* release__smallheadimgurl();
  void set_allocated__smallheadimgurl(::std::string* _smallheadimgurl);

  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  bool has__baseresponse() const;
  void clear__baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::MMPro::micromsg::BaseResponse& _baseresponse() const;
  ::MMPro::micromsg::BaseResponse* mutable__baseresponse();
  ::MMPro::micromsg::BaseResponse* release__baseresponse();
  void set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse);

  // required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
  bool has__topic() const;
  void clear__topic();
  static const int kTopicFieldNumber = 2;
  const ::MMPro::micromsg::SKBuiltinString_t& _topic() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__topic();
  ::MMPro::micromsg::SKBuiltinString_t* release__topic();
  void set_allocated__topic(::MMPro::micromsg::SKBuiltinString_t* _topic);

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
  bool has__pyinitial() const;
  void clear__pyinitial();
  static const int kPYInitialFieldNumber = 3;
  const ::MMPro::micromsg::SKBuiltinString_t& _pyinitial() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* release__pyinitial();
  void set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial);

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
  bool has__quanpin() const;
  void clear__quanpin();
  static const int kQuanPinFieldNumber = 4;
  const ::MMPro::micromsg::SKBuiltinString_t& _quanpin() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* release__quanpin();
  void set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin);

  // required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
  bool has__chatroomname() const;
  void clear__chatroomname();
  static const int kChatRoomNameFieldNumber = 7;
  const ::MMPro::micromsg::SKBuiltinString_t& _chatroomname() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__chatroomname();
  ::MMPro::micromsg::SKBuiltinString_t* release__chatroomname();
  void set_allocated__chatroomname(::MMPro::micromsg::SKBuiltinString_t* _chatroomname);

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
  bool has__imgbuf() const;
  void clear__imgbuf();
  static const int kImgBufFieldNumber = 8;
  const ::MMPro::micromsg::SKBuiltinBuffer_t& _imgbuf() const;
  ::MMPro::micromsg::SKBuiltinBuffer_t* mutable__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* release__imgbuf();
  void set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf);

  // required uint32 _MemberCount = 5;
  bool has__membercount() const;
  void clear__membercount();
  static const int kMemberCountFieldNumber = 5;
  ::google::protobuf::uint32 _membercount() const;
  void set__membercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.CreateChatRoomResponse)
 private:
  void set_has__baseresponse();
  void clear_has__baseresponse();
  void set_has__topic();
  void clear_has__topic();
  void set_has__pyinitial();
  void clear_has__pyinitial();
  void set_has__quanpin();
  void clear_has__quanpin();
  void set_has__membercount();
  void clear_has__membercount();
  void set_has__chatroomname();
  void clear_has__chatroomname();
  void set_has__imgbuf();
  void clear_has__imgbuf();
  void set_has__bigheadimgurl();
  void clear_has__bigheadimgurl();
  void set_has__smallheadimgurl();
  void clear_has__smallheadimgurl();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::MemberResp > _memberlist_;
  ::google::protobuf::internal::ArenaStringPtr _bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr _smallheadimgurl_;
  ::MMPro::micromsg::BaseResponse* _baseresponse_;
  ::MMPro::micromsg::SKBuiltinString_t* _topic_;
  ::MMPro::micromsg::SKBuiltinString_t* _pyinitial_;
  ::MMPro::micromsg::SKBuiltinString_t* _quanpin_;
  ::MMPro::micromsg::SKBuiltinString_t* _chatroomname_;
  ::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf_;
  ::google::protobuf::uint32 _membercount_;
  friend struct protobuf_CreateChatRoomResponse_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateChatRoomResponse

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
inline bool CreateChatRoomResponse::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateChatRoomResponse::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateChatRoomResponse::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateChatRoomResponse::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
inline const ::MMPro::micromsg::BaseResponse& CreateChatRoomResponse::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
inline ::MMPro::micromsg::BaseResponse* CreateChatRoomResponse::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
  return _baseresponse_;
}
inline ::MMPro::micromsg::BaseResponse* CreateChatRoomResponse::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
inline void CreateChatRoomResponse::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._BaseResponse)
}

// required .MMPro.micromsg.SKBuiltinString_t _Topic = 2;
inline bool CreateChatRoomResponse::has__topic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateChatRoomResponse::set_has__topic() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateChatRoomResponse::clear_has__topic() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateChatRoomResponse::clear__topic() {
  if (_topic_ != NULL) _topic_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__topic();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_topic() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._Topic)
  return _topic_ != NULL ? *_topic_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__topic() {
  set_has__topic();
  if (_topic_ == NULL) {
    _topic_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._Topic)
  return _topic_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__topic() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._Topic)
  clear_has__topic();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _topic_;
  _topic_ = NULL;
  return temp;
}
inline void CreateChatRoomResponse::set_allocated__topic(::MMPro::micromsg::SKBuiltinString_t* _topic) {
  delete _topic_;
  _topic_ = _topic;
  if (_topic) {
    set_has__topic();
  } else {
    clear_has__topic();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._Topic)
}

// required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
inline bool CreateChatRoomResponse::has__pyinitial() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateChatRoomResponse::set_has__pyinitial() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateChatRoomResponse::clear_has__pyinitial() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateChatRoomResponse::clear__pyinitial() {
  if (_pyinitial_ != NULL) _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__pyinitial();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_pyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
  return _pyinitial_ != NULL ? *_pyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__pyinitial() {
  set_has__pyinitial();
  if (_pyinitial_ == NULL) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
  return _pyinitial_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__pyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
  clear_has__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _pyinitial_;
  _pyinitial_ = NULL;
  return temp;
}
inline void CreateChatRoomResponse::set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial) {
  delete _pyinitial_;
  _pyinitial_ = _pyinitial;
  if (_pyinitial) {
    set_has__pyinitial();
  } else {
    clear_has__pyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._PYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
inline bool CreateChatRoomResponse::has__quanpin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateChatRoomResponse::set_has__quanpin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateChatRoomResponse::clear_has__quanpin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateChatRoomResponse::clear__quanpin() {
  if (_quanpin_ != NULL) _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__quanpin();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_quanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
  return _quanpin_ != NULL ? *_quanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__quanpin() {
  set_has__quanpin();
  if (_quanpin_ == NULL) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
  return _quanpin_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__quanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
  clear_has__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _quanpin_;
  _quanpin_ = NULL;
  return temp;
}
inline void CreateChatRoomResponse::set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin) {
  delete _quanpin_;
  _quanpin_ = _quanpin;
  if (_quanpin) {
    set_has__quanpin();
  } else {
    clear_has__quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._QuanPin)
}

// required uint32 _MemberCount = 5;
inline bool CreateChatRoomResponse::has__membercount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreateChatRoomResponse::set_has__membercount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreateChatRoomResponse::clear_has__membercount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreateChatRoomResponse::clear__membercount() {
  _membercount_ = 0u;
  clear_has__membercount();
}
inline ::google::protobuf::uint32 CreateChatRoomResponse::_membercount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._MemberCount)
  return _membercount_;
}
inline void CreateChatRoomResponse::set__membercount(::google::protobuf::uint32 value) {
  set_has__membercount();
  _membercount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CreateChatRoomResponse._MemberCount)
}

// repeated .MMPro.micromsg.MemberResp _MemberList = 6;
inline int CreateChatRoomResponse::_memberlist_size() const {
  return _memberlist_.size();
}
inline void CreateChatRoomResponse::clear__memberlist() {
  _memberlist_.Clear();
}
inline const ::MMPro::micromsg::MemberResp& CreateChatRoomResponse::_memberlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_.Get(index);
}
inline ::MMPro::micromsg::MemberResp* CreateChatRoomResponse::mutable__memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_.Mutable(index);
}
inline ::MMPro::micromsg::MemberResp* CreateChatRoomResponse::add__memberlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::MemberResp >*
CreateChatRoomResponse::mutable__memberlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return &_memberlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::MemberResp >&
CreateChatRoomResponse::_memberlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.CreateChatRoomResponse._MemberList)
  return _memberlist_;
}

// required .MMPro.micromsg.SKBuiltinString_t _ChatRoomName = 7;
inline bool CreateChatRoomResponse::has__chatroomname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateChatRoomResponse::set_has__chatroomname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateChatRoomResponse::clear_has__chatroomname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateChatRoomResponse::clear__chatroomname() {
  if (_chatroomname_ != NULL) _chatroomname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__chatroomname();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& CreateChatRoomResponse::_chatroomname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
  return _chatroomname_ != NULL ? *_chatroomname_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::mutable__chatroomname() {
  set_has__chatroomname();
  if (_chatroomname_ == NULL) {
    _chatroomname_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
  return _chatroomname_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* CreateChatRoomResponse::release__chatroomname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
  clear_has__chatroomname();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _chatroomname_;
  _chatroomname_ = NULL;
  return temp;
}
inline void CreateChatRoomResponse::set_allocated__chatroomname(::MMPro::micromsg::SKBuiltinString_t* _chatroomname) {
  delete _chatroomname_;
  _chatroomname_ = _chatroomname;
  if (_chatroomname) {
    set_has__chatroomname();
  } else {
    clear_has__chatroomname();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._ChatRoomName)
}

// required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
inline bool CreateChatRoomResponse::has__imgbuf() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateChatRoomResponse::set_has__imgbuf() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateChatRoomResponse::clear_has__imgbuf() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateChatRoomResponse::clear__imgbuf() {
  if (_imgbuf_ != NULL) _imgbuf_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__imgbuf();
}
inline const ::MMPro::micromsg::SKBuiltinBuffer_t& CreateChatRoomResponse::_imgbuf() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
  return _imgbuf_ != NULL ? *_imgbuf_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* CreateChatRoomResponse::mutable__imgbuf() {
  set_has__imgbuf();
  if (_imgbuf_ == NULL) {
    _imgbuf_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
  return _imgbuf_;
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* CreateChatRoomResponse::release__imgbuf() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
  clear_has__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _imgbuf_;
  _imgbuf_ = NULL;
  return temp;
}
inline void CreateChatRoomResponse::set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf) {
  delete _imgbuf_;
  _imgbuf_ = _imgbuf;
  if (_imgbuf) {
    set_has__imgbuf();
  } else {
    clear_has__imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._ImgBuf)
}

// optional string _BigHeadImgUrl = 9;
inline bool CreateChatRoomResponse::has__bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateChatRoomResponse::set_has__bigheadimgurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateChatRoomResponse::clear_has__bigheadimgurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateChatRoomResponse::clear__bigheadimgurl() {
  _bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__bigheadimgurl();
}
inline const ::std::string& CreateChatRoomResponse::_bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
  return _bigheadimgurl_.GetNoArena();
}
inline void CreateChatRoomResponse::set__bigheadimgurl(const ::std::string& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
#if LANG_CXX11
inline void CreateChatRoomResponse::set__bigheadimgurl(::std::string&& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
#endif
inline void CreateChatRoomResponse::set__bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
inline void CreateChatRoomResponse::set__bigheadimgurl(const char* value, size_t size) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}
inline ::std::string* CreateChatRoomResponse::mutable__bigheadimgurl() {
  set_has__bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
  return _bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateChatRoomResponse::release__bigheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
  clear_has__bigheadimgurl();
  return _bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateChatRoomResponse::set_allocated__bigheadimgurl(::std::string* _bigheadimgurl) {
  if (_bigheadimgurl != NULL) {
    set_has__bigheadimgurl();
  } else {
    clear_has__bigheadimgurl();
  }
  _bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._BigHeadImgUrl)
}

// optional string _SmallHeadImgUrl = 10;
inline bool CreateChatRoomResponse::has__smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateChatRoomResponse::set_has__smallheadimgurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateChatRoomResponse::clear_has__smallheadimgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateChatRoomResponse::clear__smallheadimgurl() {
  _smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__smallheadimgurl();
}
inline const ::std::string& CreateChatRoomResponse::_smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
  return _smallheadimgurl_.GetNoArena();
}
inline void CreateChatRoomResponse::set__smallheadimgurl(const ::std::string& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
#if LANG_CXX11
inline void CreateChatRoomResponse::set__smallheadimgurl(::std::string&& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
#endif
inline void CreateChatRoomResponse::set__smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
inline void CreateChatRoomResponse::set__smallheadimgurl(const char* value, size_t size) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}
inline ::std::string* CreateChatRoomResponse::mutable__smallheadimgurl() {
  set_has__smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
  return _smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateChatRoomResponse::release__smallheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
  clear_has__smallheadimgurl();
  return _smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateChatRoomResponse::set_allocated__smallheadimgurl(::std::string* _smallheadimgurl) {
  if (_smallheadimgurl != NULL) {
    set_has__smallheadimgurl();
  } else {
    clear_has__smallheadimgurl();
  }
  _smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CreateChatRoomResponse._SmallHeadImgUrl)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CreateChatRoomResponse_2eproto__INCLUDED
