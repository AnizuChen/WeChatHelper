// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MemberResp.proto

#ifndef PROTOBUF_MemberResp_2eproto__INCLUDED
#define PROTOBUF_MemberResp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "SKBuiltinString_t.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_MemberResp_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_MemberResp_2eproto

// ===================================================================

class MemberResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.MemberResp) */ {
 public:
  MemberResp();
  virtual ~MemberResp();

  MemberResp(const MemberResp& from);

  inline MemberResp& operator=(const MemberResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberResp& default_instance();

  static inline const MemberResp* internal_default_instance() {
    return reinterpret_cast<const MemberResp*>(
               &_MemberResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MemberResp* other);

  // implements Message ----------------------------------------------

  inline MemberResp* New() const PROTOBUF_FINAL { return New(NULL); }

  MemberResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MemberResp& from);
  void MergeFrom(const MemberResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MemberResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _Province = 13;
  bool has__province() const;
  void clear__province();
  static const int kProvinceFieldNumber = 13;
  const ::std::string& _province() const;
  void set__province(const ::std::string& value);
  #if LANG_CXX11
  void set__province(::std::string&& value);
  #endif
  void set__province(const char* value);
  void set__province(const char* value, size_t size);
  ::std::string* mutable__province();
  ::std::string* release__province();
  void set_allocated__province(::std::string* _province);

  // optional string _City = 14;
  bool has__city() const;
  void clear__city();
  static const int kCityFieldNumber = 14;
  const ::std::string& _city() const;
  void set__city(const ::std::string& value);
  #if LANG_CXX11
  void set__city(::std::string&& value);
  #endif
  void set__city(const char* value);
  void set__city(const char* value, size_t size);
  ::std::string* mutable__city();
  ::std::string* release__city();
  void set_allocated__city(::std::string* _city);

  // optional string _Signature = 15;
  bool has__signature() const;
  void clear__signature();
  static const int kSignatureFieldNumber = 15;
  const ::std::string& _signature() const;
  void set__signature(const ::std::string& value);
  #if LANG_CXX11
  void set__signature(::std::string&& value);
  #endif
  void set__signature(const char* value);
  void set__signature(const char* value, size_t size);
  ::std::string* mutable__signature();
  ::std::string* release__signature();
  void set_allocated__signature(::std::string* _signature);

  // optional string _VerifyInfo = 18;
  bool has__verifyinfo() const;
  void clear__verifyinfo();
  static const int kVerifyInfoFieldNumber = 18;
  const ::std::string& _verifyinfo() const;
  void set__verifyinfo(const ::std::string& value);
  #if LANG_CXX11
  void set__verifyinfo(::std::string&& value);
  #endif
  void set__verifyinfo(const char* value);
  void set__verifyinfo(const char* value, size_t size);
  ::std::string* mutable__verifyinfo();
  ::std::string* release__verifyinfo();
  void set_allocated__verifyinfo(::std::string* _verifyinfo);

  // optional string _Country = 19;
  bool has__country() const;
  void clear__country();
  static const int kCountryFieldNumber = 19;
  const ::std::string& _country() const;
  void set__country(const ::std::string& value);
  #if LANG_CXX11
  void set__country(::std::string&& value);
  #endif
  void set__country(const char* value);
  void set__country(const char* value, size_t size);
  ::std::string* mutable__country();
  ::std::string* release__country();
  void set_allocated__country(::std::string* _country);

  // required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
  bool has__membername() const;
  void clear__membername();
  static const int kMemberNameFieldNumber = 1;
  const ::MMPro::micromsg::SKBuiltinString_t& _membername() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__membername();
  ::MMPro::micromsg::SKBuiltinString_t* release__membername();
  void set_allocated__membername(::MMPro::micromsg::SKBuiltinString_t* _membername);

  // required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
  bool has__nickname() const;
  void clear__nickname();
  static const int kNickNameFieldNumber = 3;
  const ::MMPro::micromsg::SKBuiltinString_t& _nickname() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* release__nickname();
  void set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname);

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
  bool has__pyinitial() const;
  void clear__pyinitial();
  static const int kPYInitialFieldNumber = 4;
  const ::MMPro::micromsg::SKBuiltinString_t& _pyinitial() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* release__pyinitial();
  void set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial);

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
  bool has__quanpin() const;
  void clear__quanpin();
  static const int kQuanPinFieldNumber = 5;
  const ::MMPro::micromsg::SKBuiltinString_t& _quanpin() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* release__quanpin();
  void set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin);

  // required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
  bool has__remark() const;
  void clear__remark();
  static const int kRemarkFieldNumber = 9;
  const ::MMPro::micromsg::SKBuiltinString_t& _remark() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__remark();
  ::MMPro::micromsg::SKBuiltinString_t* release__remark();
  void set_allocated__remark(::MMPro::micromsg::SKBuiltinString_t* _remark);

  // required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
  bool has__remarkpyinitial() const;
  void clear__remarkpyinitial();
  static const int kRemarkPYInitialFieldNumber = 10;
  const ::MMPro::micromsg::SKBuiltinString_t& _remarkpyinitial() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__remarkpyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* release__remarkpyinitial();
  void set_allocated__remarkpyinitial(::MMPro::micromsg::SKBuiltinString_t* _remarkpyinitial);

  // required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
  bool has__remarkquanpin() const;
  void clear__remarkquanpin();
  static const int kRemarkQuanPinFieldNumber = 11;
  const ::MMPro::micromsg::SKBuiltinString_t& _remarkquanpin() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__remarkquanpin();
  ::MMPro::micromsg::SKBuiltinString_t* release__remarkquanpin();
  void set_allocated__remarkquanpin(::MMPro::micromsg::SKBuiltinString_t* _remarkquanpin);

  // required uint32 _MemberStatus = 2;
  bool has__memberstatus() const;
  void clear__memberstatus();
  static const int kMemberStatusFieldNumber = 2;
  ::google::protobuf::uint32 _memberstatus() const;
  void set__memberstatus(::google::protobuf::uint32 value);

  // required int32 _Sex = 6;
  bool has__sex() const;
  void clear__sex();
  static const int kSexFieldNumber = 6;
  ::google::protobuf::int32 _sex() const;
  void set__sex(::google::protobuf::int32 value);

  // required uint32 _ContactType = 12;
  bool has__contacttype() const;
  void clear__contacttype();
  static const int kContactTypeFieldNumber = 12;
  ::google::protobuf::uint32 _contacttype() const;
  void set__contacttype(::google::protobuf::uint32 value);

  // optional uint32 _PersonalCard = 16;
  bool has__personalcard() const;
  void clear__personalcard();
  static const int kPersonalCardFieldNumber = 16;
  ::google::protobuf::uint32 _personalcard() const;
  void set__personalcard(::google::protobuf::uint32 value);

  // optional uint32 _VerifyFlag = 17;
  bool has__verifyflag() const;
  void clear__verifyflag();
  static const int kVerifyFlagFieldNumber = 17;
  ::google::protobuf::uint32 _verifyflag() const;
  void set__verifyflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.MemberResp)
 private:
  void set_has__membername();
  void clear_has__membername();
  void set_has__memberstatus();
  void clear_has__memberstatus();
  void set_has__nickname();
  void clear_has__nickname();
  void set_has__pyinitial();
  void clear_has__pyinitial();
  void set_has__quanpin();
  void clear_has__quanpin();
  void set_has__sex();
  void clear_has__sex();
  void set_has__remark();
  void clear_has__remark();
  void set_has__remarkpyinitial();
  void clear_has__remarkpyinitial();
  void set_has__remarkquanpin();
  void clear_has__remarkquanpin();
  void set_has__contacttype();
  void clear_has__contacttype();
  void set_has__province();
  void clear_has__province();
  void set_has__city();
  void clear_has__city();
  void set_has__signature();
  void clear_has__signature();
  void set_has__personalcard();
  void clear_has__personalcard();
  void set_has__verifyflag();
  void clear_has__verifyflag();
  void set_has__verifyinfo();
  void clear_has__verifyinfo();
  void set_has__country();
  void clear_has__country();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _province_;
  ::google::protobuf::internal::ArenaStringPtr _city_;
  ::google::protobuf::internal::ArenaStringPtr _signature_;
  ::google::protobuf::internal::ArenaStringPtr _verifyinfo_;
  ::google::protobuf::internal::ArenaStringPtr _country_;
  ::MMPro::micromsg::SKBuiltinString_t* _membername_;
  ::MMPro::micromsg::SKBuiltinString_t* _nickname_;
  ::MMPro::micromsg::SKBuiltinString_t* _pyinitial_;
  ::MMPro::micromsg::SKBuiltinString_t* _quanpin_;
  ::MMPro::micromsg::SKBuiltinString_t* _remark_;
  ::MMPro::micromsg::SKBuiltinString_t* _remarkpyinitial_;
  ::MMPro::micromsg::SKBuiltinString_t* _remarkquanpin_;
  ::google::protobuf::uint32 _memberstatus_;
  ::google::protobuf::int32 _sex_;
  ::google::protobuf::uint32 _contacttype_;
  ::google::protobuf::uint32 _personalcard_;
  ::google::protobuf::uint32 _verifyflag_;
  friend struct protobuf_MemberResp_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MemberResp

// required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
inline bool MemberResp::has__membername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MemberResp::set_has__membername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MemberResp::clear_has__membername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MemberResp::clear__membername() {
  if (_membername_ != NULL) _membername_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__membername();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_membername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._MemberName)
  return _membername_ != NULL ? *_membername_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__membername() {
  set_has__membername();
  if (_membername_ == NULL) {
    _membername_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._MemberName)
  return _membername_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__membername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._MemberName)
  clear_has__membername();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _membername_;
  _membername_ = NULL;
  return temp;
}
inline void MemberResp::set_allocated__membername(::MMPro::micromsg::SKBuiltinString_t* _membername) {
  delete _membername_;
  _membername_ = _membername;
  if (_membername) {
    set_has__membername();
  } else {
    clear_has__membername();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._MemberName)
}

// required uint32 _MemberStatus = 2;
inline bool MemberResp::has__memberstatus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void MemberResp::set_has__memberstatus() {
  _has_bits_[0] |= 0x00001000u;
}
inline void MemberResp::clear_has__memberstatus() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void MemberResp::clear__memberstatus() {
  _memberstatus_ = 0u;
  clear_has__memberstatus();
}
inline ::google::protobuf::uint32 MemberResp::_memberstatus() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._MemberStatus)
  return _memberstatus_;
}
inline void MemberResp::set__memberstatus(::google::protobuf::uint32 value) {
  set_has__memberstatus();
  _memberstatus_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._MemberStatus)
}

// required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
inline bool MemberResp::has__nickname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MemberResp::set_has__nickname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MemberResp::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MemberResp::clear__nickname() {
  if (_nickname_ != NULL) _nickname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__nickname();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._NickName)
  return _nickname_ != NULL ? *_nickname_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__nickname() {
  set_has__nickname();
  if (_nickname_ == NULL) {
    _nickname_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._NickName)
  return _nickname_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._NickName)
  clear_has__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _nickname_;
  _nickname_ = NULL;
  return temp;
}
inline void MemberResp::set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname) {
  delete _nickname_;
  _nickname_ = _nickname;
  if (_nickname) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._NickName)
}

// required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
inline bool MemberResp::has__pyinitial() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MemberResp::set_has__pyinitial() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MemberResp::clear_has__pyinitial() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MemberResp::clear__pyinitial() {
  if (_pyinitial_ != NULL) _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__pyinitial();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_pyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._PYInitial)
  return _pyinitial_ != NULL ? *_pyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__pyinitial() {
  set_has__pyinitial();
  if (_pyinitial_ == NULL) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._PYInitial)
  return _pyinitial_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__pyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._PYInitial)
  clear_has__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _pyinitial_;
  _pyinitial_ = NULL;
  return temp;
}
inline void MemberResp::set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial) {
  delete _pyinitial_;
  _pyinitial_ = _pyinitial;
  if (_pyinitial) {
    set_has__pyinitial();
  } else {
    clear_has__pyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._PYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
inline bool MemberResp::has__quanpin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MemberResp::set_has__quanpin() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MemberResp::clear_has__quanpin() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MemberResp::clear__quanpin() {
  if (_quanpin_ != NULL) _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__quanpin();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_quanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._QuanPin)
  return _quanpin_ != NULL ? *_quanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__quanpin() {
  set_has__quanpin();
  if (_quanpin_ == NULL) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._QuanPin)
  return _quanpin_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__quanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._QuanPin)
  clear_has__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _quanpin_;
  _quanpin_ = NULL;
  return temp;
}
inline void MemberResp::set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin) {
  delete _quanpin_;
  _quanpin_ = _quanpin;
  if (_quanpin) {
    set_has__quanpin();
  } else {
    clear_has__quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._QuanPin)
}

// required int32 _Sex = 6;
inline bool MemberResp::has__sex() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void MemberResp::set_has__sex() {
  _has_bits_[0] |= 0x00002000u;
}
inline void MemberResp::clear_has__sex() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void MemberResp::clear__sex() {
  _sex_ = 0;
  clear_has__sex();
}
inline ::google::protobuf::int32 MemberResp::_sex() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Sex)
  return _sex_;
}
inline void MemberResp::set__sex(::google::protobuf::int32 value) {
  set_has__sex();
  _sex_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Sex)
}

// required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
inline bool MemberResp::has__remark() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MemberResp::set_has__remark() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MemberResp::clear_has__remark() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MemberResp::clear__remark() {
  if (_remark_ != NULL) _remark_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__remark();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_remark() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Remark)
  return _remark_ != NULL ? *_remark_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__remark() {
  set_has__remark();
  if (_remark_ == NULL) {
    _remark_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Remark)
  return _remark_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__remark() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Remark)
  clear_has__remark();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _remark_;
  _remark_ = NULL;
  return temp;
}
inline void MemberResp::set_allocated__remark(::MMPro::micromsg::SKBuiltinString_t* _remark) {
  delete _remark_;
  _remark_ = _remark;
  if (_remark) {
    set_has__remark();
  } else {
    clear_has__remark();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Remark)
}

// required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
inline bool MemberResp::has__remarkpyinitial() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MemberResp::set_has__remarkpyinitial() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MemberResp::clear_has__remarkpyinitial() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MemberResp::clear__remarkpyinitial() {
  if (_remarkpyinitial_ != NULL) _remarkpyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__remarkpyinitial();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_remarkpyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._RemarkPYInitial)
  return _remarkpyinitial_ != NULL ? *_remarkpyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__remarkpyinitial() {
  set_has__remarkpyinitial();
  if (_remarkpyinitial_ == NULL) {
    _remarkpyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._RemarkPYInitial)
  return _remarkpyinitial_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__remarkpyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._RemarkPYInitial)
  clear_has__remarkpyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _remarkpyinitial_;
  _remarkpyinitial_ = NULL;
  return temp;
}
inline void MemberResp::set_allocated__remarkpyinitial(::MMPro::micromsg::SKBuiltinString_t* _remarkpyinitial) {
  delete _remarkpyinitial_;
  _remarkpyinitial_ = _remarkpyinitial;
  if (_remarkpyinitial) {
    set_has__remarkpyinitial();
  } else {
    clear_has__remarkpyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._RemarkPYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
inline bool MemberResp::has__remarkquanpin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MemberResp::set_has__remarkquanpin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MemberResp::clear_has__remarkquanpin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MemberResp::clear__remarkquanpin() {
  if (_remarkquanpin_ != NULL) _remarkquanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__remarkquanpin();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_remarkquanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._RemarkQuanPin)
  return _remarkquanpin_ != NULL ? *_remarkquanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__remarkquanpin() {
  set_has__remarkquanpin();
  if (_remarkquanpin_ == NULL) {
    _remarkquanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._RemarkQuanPin)
  return _remarkquanpin_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__remarkquanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._RemarkQuanPin)
  clear_has__remarkquanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _remarkquanpin_;
  _remarkquanpin_ = NULL;
  return temp;
}
inline void MemberResp::set_allocated__remarkquanpin(::MMPro::micromsg::SKBuiltinString_t* _remarkquanpin) {
  delete _remarkquanpin_;
  _remarkquanpin_ = _remarkquanpin;
  if (_remarkquanpin) {
    set_has__remarkquanpin();
  } else {
    clear_has__remarkquanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._RemarkQuanPin)
}

// required uint32 _ContactType = 12;
inline bool MemberResp::has__contacttype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void MemberResp::set_has__contacttype() {
  _has_bits_[0] |= 0x00004000u;
}
inline void MemberResp::clear_has__contacttype() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void MemberResp::clear__contacttype() {
  _contacttype_ = 0u;
  clear_has__contacttype();
}
inline ::google::protobuf::uint32 MemberResp::_contacttype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._ContactType)
  return _contacttype_;
}
inline void MemberResp::set__contacttype(::google::protobuf::uint32 value) {
  set_has__contacttype();
  _contacttype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._ContactType)
}

// optional string _Province = 13;
inline bool MemberResp::has__province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberResp::set_has__province() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberResp::clear_has__province() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberResp::clear__province() {
  _province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__province();
}
inline const ::std::string& MemberResp::_province() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Province)
  return _province_.GetNoArena();
}
inline void MemberResp::set__province(const ::std::string& value) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Province)
}
#if LANG_CXX11
inline void MemberResp::set__province(::std::string&& value) {
  set_has__province();
  _province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._Province)
}
#endif
inline void MemberResp::set__province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._Province)
}
inline void MemberResp::set__province(const char* value, size_t size) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._Province)
}
inline ::std::string* MemberResp::mutable__province() {
  set_has__province();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Province)
  return _province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemberResp::release__province() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Province)
  clear_has__province();
  return _province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemberResp::set_allocated__province(::std::string* _province) {
  if (_province != NULL) {
    set_has__province();
  } else {
    clear_has__province();
  }
  _province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _province);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Province)
}

// optional string _City = 14;
inline bool MemberResp::has__city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberResp::set_has__city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberResp::clear_has__city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberResp::clear__city() {
  _city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__city();
}
inline const ::std::string& MemberResp::_city() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._City)
  return _city_.GetNoArena();
}
inline void MemberResp::set__city(const ::std::string& value) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._City)
}
#if LANG_CXX11
inline void MemberResp::set__city(::std::string&& value) {
  set_has__city();
  _city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._City)
}
#endif
inline void MemberResp::set__city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._City)
}
inline void MemberResp::set__city(const char* value, size_t size) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._City)
}
inline ::std::string* MemberResp::mutable__city() {
  set_has__city();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._City)
  return _city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemberResp::release__city() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._City)
  clear_has__city();
  return _city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemberResp::set_allocated__city(::std::string* _city) {
  if (_city != NULL) {
    set_has__city();
  } else {
    clear_has__city();
  }
  _city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _city);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._City)
}

// optional string _Signature = 15;
inline bool MemberResp::has__signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemberResp::set_has__signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemberResp::clear_has__signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemberResp::clear__signature() {
  _signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__signature();
}
inline const ::std::string& MemberResp::_signature() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Signature)
  return _signature_.GetNoArena();
}
inline void MemberResp::set__signature(const ::std::string& value) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Signature)
}
#if LANG_CXX11
inline void MemberResp::set__signature(::std::string&& value) {
  set_has__signature();
  _signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._Signature)
}
#endif
inline void MemberResp::set__signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._Signature)
}
inline void MemberResp::set__signature(const char* value, size_t size) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._Signature)
}
inline ::std::string* MemberResp::mutable__signature() {
  set_has__signature();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Signature)
  return _signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemberResp::release__signature() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Signature)
  clear_has__signature();
  return _signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemberResp::set_allocated__signature(::std::string* _signature) {
  if (_signature != NULL) {
    set_has__signature();
  } else {
    clear_has__signature();
  }
  _signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _signature);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Signature)
}

// optional uint32 _PersonalCard = 16;
inline bool MemberResp::has__personalcard() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void MemberResp::set_has__personalcard() {
  _has_bits_[0] |= 0x00008000u;
}
inline void MemberResp::clear_has__personalcard() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void MemberResp::clear__personalcard() {
  _personalcard_ = 0u;
  clear_has__personalcard();
}
inline ::google::protobuf::uint32 MemberResp::_personalcard() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._PersonalCard)
  return _personalcard_;
}
inline void MemberResp::set__personalcard(::google::protobuf::uint32 value) {
  set_has__personalcard();
  _personalcard_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._PersonalCard)
}

// optional uint32 _VerifyFlag = 17;
inline bool MemberResp::has__verifyflag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void MemberResp::set_has__verifyflag() {
  _has_bits_[0] |= 0x00010000u;
}
inline void MemberResp::clear_has__verifyflag() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void MemberResp::clear__verifyflag() {
  _verifyflag_ = 0u;
  clear_has__verifyflag();
}
inline ::google::protobuf::uint32 MemberResp::_verifyflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._VerifyFlag)
  return _verifyflag_;
}
inline void MemberResp::set__verifyflag(::google::protobuf::uint32 value) {
  set_has__verifyflag();
  _verifyflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._VerifyFlag)
}

// optional string _VerifyInfo = 18;
inline bool MemberResp::has__verifyinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MemberResp::set_has__verifyinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MemberResp::clear_has__verifyinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MemberResp::clear__verifyinfo() {
  _verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__verifyinfo();
}
inline const ::std::string& MemberResp::_verifyinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._VerifyInfo)
  return _verifyinfo_.GetNoArena();
}
inline void MemberResp::set__verifyinfo(const ::std::string& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._VerifyInfo)
}
#if LANG_CXX11
inline void MemberResp::set__verifyinfo(::std::string&& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._VerifyInfo)
}
#endif
inline void MemberResp::set__verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._VerifyInfo)
}
inline void MemberResp::set__verifyinfo(const char* value, size_t size) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._VerifyInfo)
}
inline ::std::string* MemberResp::mutable__verifyinfo() {
  set_has__verifyinfo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._VerifyInfo)
  return _verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemberResp::release__verifyinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._VerifyInfo)
  clear_has__verifyinfo();
  return _verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemberResp::set_allocated__verifyinfo(::std::string* _verifyinfo) {
  if (_verifyinfo != NULL) {
    set_has__verifyinfo();
  } else {
    clear_has__verifyinfo();
  }
  _verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._VerifyInfo)
}

// optional string _Country = 19;
inline bool MemberResp::has__country() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MemberResp::set_has__country() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MemberResp::clear_has__country() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MemberResp::clear__country() {
  _country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__country();
}
inline const ::std::string& MemberResp::_country() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Country)
  return _country_.GetNoArena();
}
inline void MemberResp::set__country(const ::std::string& value) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Country)
}
#if LANG_CXX11
inline void MemberResp::set__country(::std::string&& value) {
  set_has__country();
  _country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._Country)
}
#endif
inline void MemberResp::set__country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._Country)
}
inline void MemberResp::set__country(const char* value, size_t size) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._Country)
}
inline ::std::string* MemberResp::mutable__country() {
  set_has__country();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Country)
  return _country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemberResp::release__country() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Country)
  clear_has__country();
  return _country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemberResp::set_allocated__country(::std::string* _country) {
  if (_country != NULL) {
    set_has__country();
  } else {
    clear_has__country();
  }
  _country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _country);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Country)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MemberResp_2eproto__INCLUDED
