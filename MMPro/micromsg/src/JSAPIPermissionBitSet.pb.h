// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JSAPIPermissionBitSet.proto

#ifndef PROTOBUF_JSAPIPermissionBitSet_2eproto__INCLUDED
#define PROTOBUF_JSAPIPermissionBitSet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class JSAPIPermissionBitSet;
class JSAPIPermissionBitSetDefaultTypeInternal;
extern JSAPIPermissionBitSetDefaultTypeInternal _JSAPIPermissionBitSet_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_JSAPIPermissionBitSet_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_JSAPIPermissionBitSet_2eproto

// ===================================================================

class JSAPIPermissionBitSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.JSAPIPermissionBitSet) */ {
 public:
  JSAPIPermissionBitSet();
  virtual ~JSAPIPermissionBitSet();

  JSAPIPermissionBitSet(const JSAPIPermissionBitSet& from);

  inline JSAPIPermissionBitSet& operator=(const JSAPIPermissionBitSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JSAPIPermissionBitSet& default_instance();

  static inline const JSAPIPermissionBitSet* internal_default_instance() {
    return reinterpret_cast<const JSAPIPermissionBitSet*>(
               &_JSAPIPermissionBitSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(JSAPIPermissionBitSet* other);

  // implements Message ----------------------------------------------

  inline JSAPIPermissionBitSet* New() const PROTOBUF_FINAL { return New(NULL); }

  JSAPIPermissionBitSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JSAPIPermissionBitSet& from);
  void MergeFrom(const JSAPIPermissionBitSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JSAPIPermissionBitSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _BitValue = 1;
  bool has__bitvalue() const;
  void clear__bitvalue();
  static const int kBitValueFieldNumber = 1;
  ::google::protobuf::uint32 _bitvalue() const;
  void set__bitvalue(::google::protobuf::uint32 value);

  // optional uint32 _BitValue2 = 2;
  bool has__bitvalue2() const;
  void clear__bitvalue2();
  static const int kBitValue2FieldNumber = 2;
  ::google::protobuf::uint32 _bitvalue2() const;
  void set__bitvalue2(::google::protobuf::uint32 value);

  // optional uint32 _BitValue3 = 3;
  bool has__bitvalue3() const;
  void clear__bitvalue3();
  static const int kBitValue3FieldNumber = 3;
  ::google::protobuf::uint32 _bitvalue3() const;
  void set__bitvalue3(::google::protobuf::uint32 value);

  // optional uint32 _BitValue4 = 4;
  bool has__bitvalue4() const;
  void clear__bitvalue4();
  static const int kBitValue4FieldNumber = 4;
  ::google::protobuf::uint32 _bitvalue4() const;
  void set__bitvalue4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.JSAPIPermissionBitSet)
 private:
  void set_has__bitvalue();
  void clear_has__bitvalue();
  void set_has__bitvalue2();
  void clear_has__bitvalue2();
  void set_has__bitvalue3();
  void clear_has__bitvalue3();
  void set_has__bitvalue4();
  void clear_has__bitvalue4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _bitvalue_;
  ::google::protobuf::uint32 _bitvalue2_;
  ::google::protobuf::uint32 _bitvalue3_;
  ::google::protobuf::uint32 _bitvalue4_;
  friend struct protobuf_JSAPIPermissionBitSet_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// JSAPIPermissionBitSet

// required uint32 _BitValue = 1;
inline bool JSAPIPermissionBitSet::has__bitvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JSAPIPermissionBitSet::set_has__bitvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JSAPIPermissionBitSet::clear_has__bitvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JSAPIPermissionBitSet::clear__bitvalue() {
  _bitvalue_ = 0u;
  clear_has__bitvalue();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::_bitvalue() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSAPIPermissionBitSet._BitValue)
  return _bitvalue_;
}
inline void JSAPIPermissionBitSet::set__bitvalue(::google::protobuf::uint32 value) {
  set_has__bitvalue();
  _bitvalue_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSAPIPermissionBitSet._BitValue)
}

// optional uint32 _BitValue2 = 2;
inline bool JSAPIPermissionBitSet::has__bitvalue2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JSAPIPermissionBitSet::set_has__bitvalue2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JSAPIPermissionBitSet::clear_has__bitvalue2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JSAPIPermissionBitSet::clear__bitvalue2() {
  _bitvalue2_ = 0u;
  clear_has__bitvalue2();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::_bitvalue2() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSAPIPermissionBitSet._BitValue2)
  return _bitvalue2_;
}
inline void JSAPIPermissionBitSet::set__bitvalue2(::google::protobuf::uint32 value) {
  set_has__bitvalue2();
  _bitvalue2_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSAPIPermissionBitSet._BitValue2)
}

// optional uint32 _BitValue3 = 3;
inline bool JSAPIPermissionBitSet::has__bitvalue3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JSAPIPermissionBitSet::set_has__bitvalue3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JSAPIPermissionBitSet::clear_has__bitvalue3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JSAPIPermissionBitSet::clear__bitvalue3() {
  _bitvalue3_ = 0u;
  clear_has__bitvalue3();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::_bitvalue3() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSAPIPermissionBitSet._BitValue3)
  return _bitvalue3_;
}
inline void JSAPIPermissionBitSet::set__bitvalue3(::google::protobuf::uint32 value) {
  set_has__bitvalue3();
  _bitvalue3_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSAPIPermissionBitSet._BitValue3)
}

// optional uint32 _BitValue4 = 4;
inline bool JSAPIPermissionBitSet::has__bitvalue4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JSAPIPermissionBitSet::set_has__bitvalue4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JSAPIPermissionBitSet::clear_has__bitvalue4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JSAPIPermissionBitSet::clear__bitvalue4() {
  _bitvalue4_ = 0u;
  clear_has__bitvalue4();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::_bitvalue4() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSAPIPermissionBitSet._BitValue4)
  return _bitvalue4_;
}
inline void JSAPIPermissionBitSet::set__bitvalue4(::google::protobuf::uint32 value) {
  set_has__bitvalue4();
  _bitvalue4_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSAPIPermissionBitSet._BitValue4)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_JSAPIPermissionBitSet_2eproto__INCLUDED
