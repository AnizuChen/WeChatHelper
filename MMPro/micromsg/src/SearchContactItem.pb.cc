// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SearchContactItem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SearchContactItem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class SearchContactItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchContactItem> {
} _SearchContactItem_default_instance_;

namespace protobuf_SearchContactItem_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _pyinitial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _quanpin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _imgbuf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _personalcard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _verifyflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _verifyinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _weibo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _weibonickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _weiboflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _albumstyle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _albumflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _albumbgimgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _snsuserinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _mybrandlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _customizedinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _bigheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _smallheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _antispamticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchContactItem, _matchtype_),
  13,
  14,
  15,
  16,
  20,
  17,
  0,
  1,
  2,
  21,
  22,
  3,
  4,
  5,
  6,
  23,
  24,
  25,
  7,
  18,
  8,
  9,
  19,
  10,
  11,
  12,
  26,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 32, sizeof(SearchContactItem)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchContactItem_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SearchContactItem.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _SearchContactItem_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SnsUserInfo_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_CustomizedInfo_2eproto::InitDefaults();
  _SearchContactItem_default_instance_.DefaultConstruct();
  _SearchContactItem_default_instance_.get_mutable()->_username_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _SearchContactItem_default_instance_.get_mutable()->_nickname_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _SearchContactItem_default_instance_.get_mutable()->_pyinitial_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _SearchContactItem_default_instance_.get_mutable()->_quanpin_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _SearchContactItem_default_instance_.get_mutable()->_imgbuf_ = const_cast< ::MMPro::micromsg::SKBuiltinBuffer_t*>(
      ::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _SearchContactItem_default_instance_.get_mutable()->_snsuserinfo_ = const_cast< ::MMPro::micromsg::SnsUserInfo*>(
      ::MMPro::micromsg::SnsUserInfo::internal_default_instance());
  _SearchContactItem_default_instance_.get_mutable()->_customizedinfo_ = const_cast< ::MMPro::micromsg::CustomizedInfo*>(
      ::MMPro::micromsg::CustomizedInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\027SearchContactItem.proto\022\016MMPro.microms"
      "g\032\027SKBuiltinString_t.proto\032\027SKBuiltinBuf"
      "fer_t.proto\032\021SnsUserInfo.proto\032\024Customiz"
      "edInfo.proto\"\243\006\n\021SearchContactItem\0224\n\t_U"
      "serName\030\001 \002(\0132!.MMPro.micromsg.SKBuiltin"
      "String_t\0224\n\t_NickName\030\002 \002(\0132!.MMPro.micr"
      "omsg.SKBuiltinString_t\0225\n\n_PYInitial\030\003 \002"
      "(\0132!.MMPro.micromsg.SKBuiltinString_t\0223\n"
      "\010_QuanPin\030\004 \002(\0132!.MMPro.micromsg.SKBuilt"
      "inString_t\022\014\n\004_Sex\030\005 \002(\005\0222\n\007_ImgBuf\030\006 \002("
      "\0132!.MMPro.micromsg.SKBuiltinBuffer_t\022\021\n\t"
      "_Province\030\007 \001(\t\022\r\n\005_City\030\010 \001(\t\022\022\n\n_Signa"
      "ture\030\t \001(\t\022\025\n\r_PersonalCard\030\n \001(\r\022\023\n\013_Ve"
      "rifyFlag\030\013 \001(\r\022\023\n\013_VerifyInfo\030\014 \001(\t\022\016\n\006_"
      "Weibo\030\r \001(\t\022\016\n\006_Alias\030\016 \001(\t\022\026\n\016_WeiboNic"
      "kname\030\017 \001(\t\022\022\n\n_WeiboFlag\030\020 \001(\r\022\023\n\013_Albu"
      "mStyle\030\021 \001(\005\022\022\n\n_AlbumFlag\030\022 \001(\005\022\025\n\r_Alb"
      "umBGImgID\030\023 \001(\t\0221\n\014_SnsUserInfo\030\024 \001(\0132\033."
      "MMPro.micromsg.SnsUserInfo\022\020\n\010_Country\030\025"
      " \001(\t\022\024\n\014_MyBrandList\030\026 \001(\t\0227\n\017_Customize"
      "dInfo\030\027 \001(\0132\036.MMPro.micromsg.CustomizedI"
      "nfo\022\026\n\016_BigHeadImgUrl\030\030 \001(\t\022\030\n\020_SmallHea"
      "dImgUrl\030\031 \001(\t\022\027\n\017_AntispamTicket\030\032 \001(\t\022\022"
      "\n\n_MatchType\030\033 \001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 938);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SearchContactItem.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SnsUserInfo_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_CustomizedInfo_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SearchContactItem_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchContactItem::kUserNameFieldNumber;
const int SearchContactItem::kNickNameFieldNumber;
const int SearchContactItem::kPYInitialFieldNumber;
const int SearchContactItem::kQuanPinFieldNumber;
const int SearchContactItem::kSexFieldNumber;
const int SearchContactItem::kImgBufFieldNumber;
const int SearchContactItem::kProvinceFieldNumber;
const int SearchContactItem::kCityFieldNumber;
const int SearchContactItem::kSignatureFieldNumber;
const int SearchContactItem::kPersonalCardFieldNumber;
const int SearchContactItem::kVerifyFlagFieldNumber;
const int SearchContactItem::kVerifyInfoFieldNumber;
const int SearchContactItem::kWeiboFieldNumber;
const int SearchContactItem::kAliasFieldNumber;
const int SearchContactItem::kWeiboNicknameFieldNumber;
const int SearchContactItem::kWeiboFlagFieldNumber;
const int SearchContactItem::kAlbumStyleFieldNumber;
const int SearchContactItem::kAlbumFlagFieldNumber;
const int SearchContactItem::kAlbumBGImgIDFieldNumber;
const int SearchContactItem::kSnsUserInfoFieldNumber;
const int SearchContactItem::kCountryFieldNumber;
const int SearchContactItem::kMyBrandListFieldNumber;
const int SearchContactItem::kCustomizedInfoFieldNumber;
const int SearchContactItem::kBigHeadImgUrlFieldNumber;
const int SearchContactItem::kSmallHeadImgUrlFieldNumber;
const int SearchContactItem::kAntispamTicketFieldNumber;
const int SearchContactItem::kMatchTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchContactItem::SearchContactItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SearchContactItem_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.SearchContactItem)
}
SearchContactItem::SearchContactItem(const SearchContactItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__province()) {
    _province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._province_);
  }
  _city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__city()) {
    _city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._city_);
  }
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__signature()) {
    _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
  }
  _verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__verifyinfo()) {
    _verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._verifyinfo_);
  }
  _weibo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__weibo()) {
    _weibo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._weibo_);
  }
  _alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__alias()) {
    _alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._alias_);
  }
  _weibonickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__weibonickname()) {
    _weibonickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._weibonickname_);
  }
  _albumbgimgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__albumbgimgid()) {
    _albumbgimgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._albumbgimgid_);
  }
  _country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__country()) {
    _country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._country_);
  }
  _mybrandlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__mybrandlist()) {
    _mybrandlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._mybrandlist_);
  }
  _bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__bigheadimgurl()) {
    _bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._bigheadimgurl_);
  }
  _smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__smallheadimgurl()) {
    _smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._smallheadimgurl_);
  }
  _antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__antispamticket()) {
    _antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._antispamticket_);
  }
  if (from.has__username()) {
    _username_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._username_);
  } else {
    _username_ = NULL;
  }
  if (from.has__nickname()) {
    _nickname_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._nickname_);
  } else {
    _nickname_ = NULL;
  }
  if (from.has__pyinitial()) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._pyinitial_);
  } else {
    _pyinitial_ = NULL;
  }
  if (from.has__quanpin()) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._quanpin_);
  } else {
    _quanpin_ = NULL;
  }
  if (from.has__imgbuf()) {
    _imgbuf_ = new ::MMPro::micromsg::SKBuiltinBuffer_t(*from._imgbuf_);
  } else {
    _imgbuf_ = NULL;
  }
  if (from.has__snsuserinfo()) {
    _snsuserinfo_ = new ::MMPro::micromsg::SnsUserInfo(*from._snsuserinfo_);
  } else {
    _snsuserinfo_ = NULL;
  }
  if (from.has__customizedinfo()) {
    _customizedinfo_ = new ::MMPro::micromsg::CustomizedInfo(*from._customizedinfo_);
  } else {
    _customizedinfo_ = NULL;
  }
  ::memcpy(&_sex_, &from._sex_,
    reinterpret_cast<char*>(&_matchtype_) -
    reinterpret_cast<char*>(&_sex_) + sizeof(_matchtype_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.SearchContactItem)
}

void SearchContactItem::SharedCtor() {
  _cached_size_ = 0;
  _province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _weibo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _weibonickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _albumbgimgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _mybrandlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_username_, 0, reinterpret_cast<char*>(&_matchtype_) -
    reinterpret_cast<char*>(&_username_) + sizeof(_matchtype_));
}

SearchContactItem::~SearchContactItem() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.SearchContactItem)
  SharedDtor();
}

void SearchContactItem::SharedDtor() {
  _province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _verifyinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _weibo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _weibonickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _albumbgimgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _mybrandlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _bigheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _smallheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _antispamticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _username_;
  }
  if (this != internal_default_instance()) {
    delete _nickname_;
  }
  if (this != internal_default_instance()) {
    delete _pyinitial_;
  }
  if (this != internal_default_instance()) {
    delete _quanpin_;
  }
  if (this != internal_default_instance()) {
    delete _imgbuf_;
  }
  if (this != internal_default_instance()) {
    delete _snsuserinfo_;
  }
  if (this != internal_default_instance()) {
    delete _customizedinfo_;
  }
}

void SearchContactItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchContactItem::descriptor() {
  protobuf_SearchContactItem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SearchContactItem_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchContactItem& SearchContactItem::default_instance() {
  protobuf_SearchContactItem_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchContactItem* SearchContactItem::New(::google::protobuf::Arena* arena) const {
  SearchContactItem* n = new SearchContactItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchContactItem::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.SearchContactItem)
  if (_has_bits_[0 / 32] & 255u) {
    if (has__province()) {
      GOOGLE_DCHECK(!_province_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_province_.UnsafeRawStringPointer())->clear();
    }
    if (has__city()) {
      GOOGLE_DCHECK(!_city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_city_.UnsafeRawStringPointer())->clear();
    }
    if (has__signature()) {
      GOOGLE_DCHECK(!_signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_signature_.UnsafeRawStringPointer())->clear();
    }
    if (has__verifyinfo()) {
      GOOGLE_DCHECK(!_verifyinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_verifyinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has__weibo()) {
      GOOGLE_DCHECK(!_weibo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_weibo_.UnsafeRawStringPointer())->clear();
    }
    if (has__alias()) {
      GOOGLE_DCHECK(!_alias_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_alias_.UnsafeRawStringPointer())->clear();
    }
    if (has__weibonickname()) {
      GOOGLE_DCHECK(!_weibonickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_weibonickname_.UnsafeRawStringPointer())->clear();
    }
    if (has__albumbgimgid()) {
      GOOGLE_DCHECK(!_albumbgimgid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_albumbgimgid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has__country()) {
      GOOGLE_DCHECK(!_country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_country_.UnsafeRawStringPointer())->clear();
    }
    if (has__mybrandlist()) {
      GOOGLE_DCHECK(!_mybrandlist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_mybrandlist_.UnsafeRawStringPointer())->clear();
    }
    if (has__bigheadimgurl()) {
      GOOGLE_DCHECK(!_bigheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_bigheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__smallheadimgurl()) {
      GOOGLE_DCHECK(!_smallheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_smallheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__antispamticket()) {
      GOOGLE_DCHECK(!_antispamticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_antispamticket_.UnsafeRawStringPointer())->clear();
    }
    if (has__username()) {
      GOOGLE_DCHECK(_username_ != NULL);
      _username_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__nickname()) {
      GOOGLE_DCHECK(_nickname_ != NULL);
      _nickname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__pyinitial()) {
      GOOGLE_DCHECK(_pyinitial_ != NULL);
      _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 983040u) {
    if (has__quanpin()) {
      GOOGLE_DCHECK(_quanpin_ != NULL);
      _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__imgbuf()) {
      GOOGLE_DCHECK(_imgbuf_ != NULL);
      _imgbuf_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
    }
    if (has__snsuserinfo()) {
      GOOGLE_DCHECK(_snsuserinfo_ != NULL);
      _snsuserinfo_->::MMPro::micromsg::SnsUserInfo::Clear();
    }
    if (has__customizedinfo()) {
      GOOGLE_DCHECK(_customizedinfo_ != NULL);
      _customizedinfo_->::MMPro::micromsg::CustomizedInfo::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 15728640u) {
    ::memset(&_sex_, 0, reinterpret_cast<char*>(&_weiboflag_) -
      reinterpret_cast<char*>(&_sex_) + sizeof(_weiboflag_));
  }
  if (_has_bits_[24 / 32] & 117440512u) {
    ::memset(&_albumstyle_, 0, reinterpret_cast<char*>(&_matchtype_) -
      reinterpret_cast<char*>(&_albumstyle_) + sizeof(_matchtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SearchContactItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.SearchContactItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__pyinitial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__quanpin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 _Sex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__imgbuf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Province = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_province().data(), this->_province().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._Province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _City = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_city().data(), this->_city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._City");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Signature = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_signature().data(), this->_signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _PersonalCard = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has__personalcard();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_personalcard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _VerifyFlag = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has__verifyflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_verifyflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _VerifyInfo = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__verifyinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_verifyinfo().data(), this->_verifyinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._VerifyInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Weibo = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__weibo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_weibo().data(), this->_weibo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._Weibo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Alias = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_alias().data(), this->_alias().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._Alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _WeiboNickname = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__weibonickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_weibonickname().data(), this->_weibonickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._WeiboNickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _WeiboFlag = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has__weiboflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_weiboflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _AlbumStyle = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has__albumstyle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_albumstyle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _AlbumFlag = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has__albumflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_albumflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AlbumBGImgID = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__albumbgimgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_albumbgimgid().data(), this->_albumbgimgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._AlbumBGImgID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.SnsUserInfo _SnsUserInfo = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__snsuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Country = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_country().data(), this->_country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._Country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _MyBrandList = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__mybrandlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_mybrandlist().data(), this->_mybrandlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._MyBrandList");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.CustomizedInfo _CustomizedInfo = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__customizedinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _BigHeadImgUrl = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__bigheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_bigheadimgurl().data(), this->_bigheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._BigHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _SmallHeadImgUrl = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__smallheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_smallheadimgurl().data(), this->_smallheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._SmallHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AntispamTicket = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__antispamticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_antispamticket().data(), this->_antispamticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SearchContactItem._AntispamTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _MatchType = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u)) {
          set_has__matchtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_matchtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.SearchContactItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.SearchContactItem)
  return false;
#undef DO_
}

void SearchContactItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.SearchContactItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_username_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->_nickname_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->_pyinitial_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->_quanpin_, output);
  }

  // required int32 _Sex = 5;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->_sex(), output);
  }

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->_imgbuf_, output);
  }

  // optional string _Province = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_province().data(), this->_province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->_province(), output);
  }

  // optional string _City = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_city().data(), this->_city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._City");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->_city(), output);
  }

  // optional string _Signature = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->_signature(), output);
  }

  // optional uint32 _PersonalCard = 10;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_personalcard(), output);
  }

  // optional uint32 _VerifyFlag = 11;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->_verifyflag(), output);
  }

  // optional string _VerifyInfo = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_verifyinfo().data(), this->_verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._VerifyInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->_verifyinfo(), output);
  }

  // optional string _Weibo = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_weibo().data(), this->_weibo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Weibo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->_weibo(), output);
  }

  // optional string _Alias = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_alias().data(), this->_alias().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->_alias(), output);
  }

  // optional string _WeiboNickname = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_weibonickname().data(), this->_weibonickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._WeiboNickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->_weibonickname(), output);
  }

  // optional uint32 _WeiboFlag = 16;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->_weiboflag(), output);
  }

  // optional int32 _AlbumStyle = 17;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->_albumstyle(), output);
  }

  // optional int32 _AlbumFlag = 18;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->_albumflag(), output);
  }

  // optional string _AlbumBGImgID = 19;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_albumbgimgid().data(), this->_albumbgimgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._AlbumBGImgID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->_albumbgimgid(), output);
  }

  // optional .MMPro.micromsg.SnsUserInfo _SnsUserInfo = 20;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->_snsuserinfo_, output);
  }

  // optional string _Country = 21;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_country().data(), this->_country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->_country(), output);
  }

  // optional string _MyBrandList = 22;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_mybrandlist().data(), this->_mybrandlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._MyBrandList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->_mybrandlist(), output);
  }

  // optional .MMPro.micromsg.CustomizedInfo _CustomizedInfo = 23;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->_customizedinfo_, output);
  }

  // optional string _BigHeadImgUrl = 24;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_bigheadimgurl().data(), this->_bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._BigHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->_bigheadimgurl(), output);
  }

  // optional string _SmallHeadImgUrl = 25;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_smallheadimgurl().data(), this->_smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._SmallHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->_smallheadimgurl(), output);
  }

  // optional string _AntispamTicket = 26;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_antispamticket().data(), this->_antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._AntispamTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->_antispamticket(), output);
  }

  // optional uint32 _MatchType = 27;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->_matchtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.SearchContactItem)
}

::google::protobuf::uint8* SearchContactItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.SearchContactItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_username_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->_nickname_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->_pyinitial_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->_quanpin_, deterministic, target);
  }

  // required int32 _Sex = 5;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->_sex(), target);
  }

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->_imgbuf_, deterministic, target);
  }

  // optional string _Province = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_province().data(), this->_province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->_province(), target);
  }

  // optional string _City = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_city().data(), this->_city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._City");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->_city(), target);
  }

  // optional string _Signature = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->_signature(), target);
  }

  // optional uint32 _PersonalCard = 10;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->_personalcard(), target);
  }

  // optional uint32 _VerifyFlag = 11;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->_verifyflag(), target);
  }

  // optional string _VerifyInfo = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_verifyinfo().data(), this->_verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._VerifyInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->_verifyinfo(), target);
  }

  // optional string _Weibo = 13;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_weibo().data(), this->_weibo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Weibo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->_weibo(), target);
  }

  // optional string _Alias = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_alias().data(), this->_alias().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->_alias(), target);
  }

  // optional string _WeiboNickname = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_weibonickname().data(), this->_weibonickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._WeiboNickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->_weibonickname(), target);
  }

  // optional uint32 _WeiboFlag = 16;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->_weiboflag(), target);
  }

  // optional int32 _AlbumStyle = 17;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->_albumstyle(), target);
  }

  // optional int32 _AlbumFlag = 18;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->_albumflag(), target);
  }

  // optional string _AlbumBGImgID = 19;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_albumbgimgid().data(), this->_albumbgimgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._AlbumBGImgID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->_albumbgimgid(), target);
  }

  // optional .MMPro.micromsg.SnsUserInfo _SnsUserInfo = 20;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->_snsuserinfo_, deterministic, target);
  }

  // optional string _Country = 21;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_country().data(), this->_country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._Country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->_country(), target);
  }

  // optional string _MyBrandList = 22;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_mybrandlist().data(), this->_mybrandlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._MyBrandList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->_mybrandlist(), target);
  }

  // optional .MMPro.micromsg.CustomizedInfo _CustomizedInfo = 23;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->_customizedinfo_, deterministic, target);
  }

  // optional string _BigHeadImgUrl = 24;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_bigheadimgurl().data(), this->_bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._BigHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->_bigheadimgurl(), target);
  }

  // optional string _SmallHeadImgUrl = 25;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_smallheadimgurl().data(), this->_smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._SmallHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->_smallheadimgurl(), target);
  }

  // optional string _AntispamTicket = 26;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_antispamticket().data(), this->_antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SearchContactItem._AntispamTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->_antispamticket(), target);
  }

  // optional uint32 _MatchType = 27;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->_matchtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.SearchContactItem)
  return target;
}

size_t SearchContactItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MMPro.micromsg.SearchContactItem)
  size_t total_size = 0;

  if (has__username()) {
    // required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_username_);
  }

  if (has__nickname()) {
    // required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_nickname_);
  }

  if (has__pyinitial()) {
    // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_pyinitial_);
  }

  if (has__quanpin()) {
    // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_quanpin_);
  }

  if (has__imgbuf()) {
    // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_imgbuf_);
  }

  if (has__sex()) {
    // required int32 _Sex = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_sex());
  }

  return total_size;
}
size_t SearchContactItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.SearchContactItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0013e000) ^ 0x0013e000) == 0) {  // All required fields are present.
    // required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_username_);

    // required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_nickname_);

    // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_pyinitial_);

    // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_quanpin_);

    // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_imgbuf_);

    // required int32 _Sex = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_sex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string _Province = 7;
    if (has__province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_province());
    }

    // optional string _City = 8;
    if (has__city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_city());
    }

    // optional string _Signature = 9;
    if (has__signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_signature());
    }

    // optional string _VerifyInfo = 12;
    if (has__verifyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_verifyinfo());
    }

    // optional string _Weibo = 13;
    if (has__weibo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_weibo());
    }

    // optional string _Alias = 14;
    if (has__alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_alias());
    }

    // optional string _WeiboNickname = 15;
    if (has__weibonickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_weibonickname());
    }

    // optional string _AlbumBGImgID = 19;
    if (has__albumbgimgid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_albumbgimgid());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional string _Country = 21;
    if (has__country()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_country());
    }

    // optional string _MyBrandList = 22;
    if (has__mybrandlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_mybrandlist());
    }

    // optional string _BigHeadImgUrl = 24;
    if (has__bigheadimgurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_bigheadimgurl());
    }

    // optional string _SmallHeadImgUrl = 25;
    if (has__smallheadimgurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_smallheadimgurl());
    }

    // optional string _AntispamTicket = 26;
    if (has__antispamticket()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_antispamticket());
    }

  }
  if (_has_bits_[16 / 32] & 786432u) {
    // optional .MMPro.micromsg.SnsUserInfo _SnsUserInfo = 20;
    if (has__snsuserinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_snsuserinfo_);
    }

    // optional .MMPro.micromsg.CustomizedInfo _CustomizedInfo = 23;
    if (has__customizedinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_customizedinfo_);
    }

  }
  if (_has_bits_[16 / 32] & 14680064u) {
    // optional uint32 _PersonalCard = 10;
    if (has__personalcard()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_personalcard());
    }

    // optional uint32 _VerifyFlag = 11;
    if (has__verifyflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_verifyflag());
    }

    // optional uint32 _WeiboFlag = 16;
    if (has__weiboflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_weiboflag());
    }

  }
  if (_has_bits_[24 / 32] & 117440512u) {
    // optional int32 _AlbumStyle = 17;
    if (has__albumstyle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_albumstyle());
    }

    // optional int32 _AlbumFlag = 18;
    if (has__albumflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_albumflag());
    }

    // optional uint32 _MatchType = 27;
    if (has__matchtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_matchtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchContactItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.SearchContactItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchContactItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchContactItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.SearchContactItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.SearchContactItem)
    MergeFrom(*source);
  }
}

void SearchContactItem::MergeFrom(const SearchContactItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.SearchContactItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__province();
      _province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._province_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__city();
      _city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._city_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__signature();
      _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__verifyinfo();
      _verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._verifyinfo_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has__weibo();
      _weibo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._weibo_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has__alias();
      _alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._alias_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has__weibonickname();
      _weibonickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._weibonickname_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has__albumbgimgid();
      _albumbgimgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._albumbgimgid_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has__country();
      _country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._country_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has__mybrandlist();
      _mybrandlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._mybrandlist_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has__bigheadimgurl();
      _bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._bigheadimgurl_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has__smallheadimgurl();
      _smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._smallheadimgurl_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has__antispamticket();
      _antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._antispamticket_);
    }
    if (cached_has_bits & 0x00002000u) {
      mutable__username()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._username());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable__nickname()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._nickname());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable__pyinitial()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._pyinitial());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable__quanpin()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._quanpin());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable__imgbuf()->::MMPro::micromsg::SKBuiltinBuffer_t::MergeFrom(from._imgbuf());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable__snsuserinfo()->::MMPro::micromsg::SnsUserInfo::MergeFrom(from._snsuserinfo());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable__customizedinfo()->::MMPro::micromsg::CustomizedInfo::MergeFrom(from._customizedinfo());
    }
    if (cached_has_bits & 0x00100000u) {
      _sex_ = from._sex_;
    }
    if (cached_has_bits & 0x00200000u) {
      _personalcard_ = from._personalcard_;
    }
    if (cached_has_bits & 0x00400000u) {
      _verifyflag_ = from._verifyflag_;
    }
    if (cached_has_bits & 0x00800000u) {
      _weiboflag_ = from._weiboflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 117440512u) {
    if (cached_has_bits & 0x01000000u) {
      _albumstyle_ = from._albumstyle_;
    }
    if (cached_has_bits & 0x02000000u) {
      _albumflag_ = from._albumflag_;
    }
    if (cached_has_bits & 0x04000000u) {
      _matchtype_ = from._matchtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SearchContactItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.SearchContactItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchContactItem::CopyFrom(const SearchContactItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.SearchContactItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchContactItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x0013e000) != 0x0013e000) return false;
  if (has__imgbuf()) {
    if (!this->_imgbuf_->IsInitialized()) return false;
  }
  if (has__snsuserinfo()) {
    if (!this->_snsuserinfo_->IsInitialized()) return false;
  }
  if (has__customizedinfo()) {
    if (!this->_customizedinfo_->IsInitialized()) return false;
  }
  return true;
}

void SearchContactItem::Swap(SearchContactItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchContactItem::InternalSwap(SearchContactItem* other) {
  _province_.Swap(&other->_province_);
  _city_.Swap(&other->_city_);
  _signature_.Swap(&other->_signature_);
  _verifyinfo_.Swap(&other->_verifyinfo_);
  _weibo_.Swap(&other->_weibo_);
  _alias_.Swap(&other->_alias_);
  _weibonickname_.Swap(&other->_weibonickname_);
  _albumbgimgid_.Swap(&other->_albumbgimgid_);
  _country_.Swap(&other->_country_);
  _mybrandlist_.Swap(&other->_mybrandlist_);
  _bigheadimgurl_.Swap(&other->_bigheadimgurl_);
  _smallheadimgurl_.Swap(&other->_smallheadimgurl_);
  _antispamticket_.Swap(&other->_antispamticket_);
  std::swap(_username_, other->_username_);
  std::swap(_nickname_, other->_nickname_);
  std::swap(_pyinitial_, other->_pyinitial_);
  std::swap(_quanpin_, other->_quanpin_);
  std::swap(_imgbuf_, other->_imgbuf_);
  std::swap(_snsuserinfo_, other->_snsuserinfo_);
  std::swap(_customizedinfo_, other->_customizedinfo_);
  std::swap(_sex_, other->_sex_);
  std::swap(_personalcard_, other->_personalcard_);
  std::swap(_verifyflag_, other->_verifyflag_);
  std::swap(_weiboflag_, other->_weiboflag_);
  std::swap(_albumstyle_, other->_albumstyle_);
  std::swap(_albumflag_, other->_albumflag_);
  std::swap(_matchtype_, other->_matchtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchContactItem::GetMetadata() const {
  protobuf_SearchContactItem_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SearchContactItem_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchContactItem

// required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
bool SearchContactItem::has__username() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void SearchContactItem::set_has__username() {
  _has_bits_[0] |= 0x00002000u;
}
void SearchContactItem::clear_has__username() {
  _has_bits_[0] &= ~0x00002000u;
}
void SearchContactItem::clear__username() {
  if (_username_ != NULL) _username_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__username();
}
const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._UserName)
  return _username_ != NULL ? *_username_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__username() {
  set_has__username();
  if (_username_ == NULL) {
    _username_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._UserName)
  return _username_;
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._UserName)
  clear_has__username();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _username_;
  _username_ = NULL;
  return temp;
}
void SearchContactItem::set_allocated__username(::MMPro::micromsg::SKBuiltinString_t* _username) {
  delete _username_;
  _username_ = _username;
  if (_username) {
    set_has__username();
  } else {
    clear_has__username();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._UserName)
}

// required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
bool SearchContactItem::has__nickname() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void SearchContactItem::set_has__nickname() {
  _has_bits_[0] |= 0x00004000u;
}
void SearchContactItem::clear_has__nickname() {
  _has_bits_[0] &= ~0x00004000u;
}
void SearchContactItem::clear__nickname() {
  if (_nickname_ != NULL) _nickname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__nickname();
}
const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._NickName)
  return _nickname_ != NULL ? *_nickname_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__nickname() {
  set_has__nickname();
  if (_nickname_ == NULL) {
    _nickname_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._NickName)
  return _nickname_;
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._NickName)
  clear_has__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _nickname_;
  _nickname_ = NULL;
  return temp;
}
void SearchContactItem::set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname) {
  delete _nickname_;
  _nickname_ = _nickname;
  if (_nickname) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._NickName)
}

// required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
bool SearchContactItem::has__pyinitial() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void SearchContactItem::set_has__pyinitial() {
  _has_bits_[0] |= 0x00008000u;
}
void SearchContactItem::clear_has__pyinitial() {
  _has_bits_[0] &= ~0x00008000u;
}
void SearchContactItem::clear__pyinitial() {
  if (_pyinitial_ != NULL) _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__pyinitial();
}
const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_pyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._PYInitial)
  return _pyinitial_ != NULL ? *_pyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__pyinitial() {
  set_has__pyinitial();
  if (_pyinitial_ == NULL) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._PYInitial)
  return _pyinitial_;
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__pyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._PYInitial)
  clear_has__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _pyinitial_;
  _pyinitial_ = NULL;
  return temp;
}
void SearchContactItem::set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial) {
  delete _pyinitial_;
  _pyinitial_ = _pyinitial;
  if (_pyinitial) {
    set_has__pyinitial();
  } else {
    clear_has__pyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._PYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
bool SearchContactItem::has__quanpin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void SearchContactItem::set_has__quanpin() {
  _has_bits_[0] |= 0x00010000u;
}
void SearchContactItem::clear_has__quanpin() {
  _has_bits_[0] &= ~0x00010000u;
}
void SearchContactItem::clear__quanpin() {
  if (_quanpin_ != NULL) _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__quanpin();
}
const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_quanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._QuanPin)
  return _quanpin_ != NULL ? *_quanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__quanpin() {
  set_has__quanpin();
  if (_quanpin_ == NULL) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._QuanPin)
  return _quanpin_;
}
::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__quanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._QuanPin)
  clear_has__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _quanpin_;
  _quanpin_ = NULL;
  return temp;
}
void SearchContactItem::set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin) {
  delete _quanpin_;
  _quanpin_ = _quanpin;
  if (_quanpin) {
    set_has__quanpin();
  } else {
    clear_has__quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._QuanPin)
}

// required int32 _Sex = 5;
bool SearchContactItem::has__sex() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void SearchContactItem::set_has__sex() {
  _has_bits_[0] |= 0x00100000u;
}
void SearchContactItem::clear_has__sex() {
  _has_bits_[0] &= ~0x00100000u;
}
void SearchContactItem::clear__sex() {
  _sex_ = 0;
  clear_has__sex();
}
::google::protobuf::int32 SearchContactItem::_sex() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Sex)
  return _sex_;
}
void SearchContactItem::set__sex(::google::protobuf::int32 value) {
  set_has__sex();
  _sex_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Sex)
}

// required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
bool SearchContactItem::has__imgbuf() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void SearchContactItem::set_has__imgbuf() {
  _has_bits_[0] |= 0x00020000u;
}
void SearchContactItem::clear_has__imgbuf() {
  _has_bits_[0] &= ~0x00020000u;
}
void SearchContactItem::clear__imgbuf() {
  if (_imgbuf_ != NULL) _imgbuf_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__imgbuf();
}
const ::MMPro::micromsg::SKBuiltinBuffer_t& SearchContactItem::_imgbuf() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._ImgBuf)
  return _imgbuf_ != NULL ? *_imgbuf_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinBuffer_t* SearchContactItem::mutable__imgbuf() {
  set_has__imgbuf();
  if (_imgbuf_ == NULL) {
    _imgbuf_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._ImgBuf)
  return _imgbuf_;
}
::MMPro::micromsg::SKBuiltinBuffer_t* SearchContactItem::release__imgbuf() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._ImgBuf)
  clear_has__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _imgbuf_;
  _imgbuf_ = NULL;
  return temp;
}
void SearchContactItem::set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf) {
  delete _imgbuf_;
  _imgbuf_ = _imgbuf;
  if (_imgbuf) {
    set_has__imgbuf();
  } else {
    clear_has__imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._ImgBuf)
}

// optional string _Province = 7;
bool SearchContactItem::has__province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SearchContactItem::set_has__province() {
  _has_bits_[0] |= 0x00000001u;
}
void SearchContactItem::clear_has__province() {
  _has_bits_[0] &= ~0x00000001u;
}
void SearchContactItem::clear__province() {
  _province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__province();
}
const ::std::string& SearchContactItem::_province() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Province)
  return _province_.GetNoArena();
}
void SearchContactItem::set__province(const ::std::string& value) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Province)
}
#if LANG_CXX11
void SearchContactItem::set__province(::std::string&& value) {
  set_has__province();
  _province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Province)
}
#endif
void SearchContactItem::set__province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Province)
}
void SearchContactItem::set__province(const char* value, size_t size) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Province)
}
::std::string* SearchContactItem::mutable__province() {
  set_has__province();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Province)
  return _province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__province() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Province)
  clear_has__province();
  return _province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__province(::std::string* _province) {
  if (_province != NULL) {
    set_has__province();
  } else {
    clear_has__province();
  }
  _province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _province);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Province)
}

// optional string _City = 8;
bool SearchContactItem::has__city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SearchContactItem::set_has__city() {
  _has_bits_[0] |= 0x00000002u;
}
void SearchContactItem::clear_has__city() {
  _has_bits_[0] &= ~0x00000002u;
}
void SearchContactItem::clear__city() {
  _city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__city();
}
const ::std::string& SearchContactItem::_city() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._City)
  return _city_.GetNoArena();
}
void SearchContactItem::set__city(const ::std::string& value) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._City)
}
#if LANG_CXX11
void SearchContactItem::set__city(::std::string&& value) {
  set_has__city();
  _city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._City)
}
#endif
void SearchContactItem::set__city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._City)
}
void SearchContactItem::set__city(const char* value, size_t size) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._City)
}
::std::string* SearchContactItem::mutable__city() {
  set_has__city();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._City)
  return _city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__city() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._City)
  clear_has__city();
  return _city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__city(::std::string* _city) {
  if (_city != NULL) {
    set_has__city();
  } else {
    clear_has__city();
  }
  _city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _city);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._City)
}

// optional string _Signature = 9;
bool SearchContactItem::has__signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SearchContactItem::set_has__signature() {
  _has_bits_[0] |= 0x00000004u;
}
void SearchContactItem::clear_has__signature() {
  _has_bits_[0] &= ~0x00000004u;
}
void SearchContactItem::clear__signature() {
  _signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__signature();
}
const ::std::string& SearchContactItem::_signature() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Signature)
  return _signature_.GetNoArena();
}
void SearchContactItem::set__signature(const ::std::string& value) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Signature)
}
#if LANG_CXX11
void SearchContactItem::set__signature(::std::string&& value) {
  set_has__signature();
  _signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Signature)
}
#endif
void SearchContactItem::set__signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Signature)
}
void SearchContactItem::set__signature(const char* value, size_t size) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Signature)
}
::std::string* SearchContactItem::mutable__signature() {
  set_has__signature();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Signature)
  return _signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__signature() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Signature)
  clear_has__signature();
  return _signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__signature(::std::string* _signature) {
  if (_signature != NULL) {
    set_has__signature();
  } else {
    clear_has__signature();
  }
  _signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _signature);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Signature)
}

// optional uint32 _PersonalCard = 10;
bool SearchContactItem::has__personalcard() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void SearchContactItem::set_has__personalcard() {
  _has_bits_[0] |= 0x00200000u;
}
void SearchContactItem::clear_has__personalcard() {
  _has_bits_[0] &= ~0x00200000u;
}
void SearchContactItem::clear__personalcard() {
  _personalcard_ = 0u;
  clear_has__personalcard();
}
::google::protobuf::uint32 SearchContactItem::_personalcard() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._PersonalCard)
  return _personalcard_;
}
void SearchContactItem::set__personalcard(::google::protobuf::uint32 value) {
  set_has__personalcard();
  _personalcard_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._PersonalCard)
}

// optional uint32 _VerifyFlag = 11;
bool SearchContactItem::has__verifyflag() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void SearchContactItem::set_has__verifyflag() {
  _has_bits_[0] |= 0x00400000u;
}
void SearchContactItem::clear_has__verifyflag() {
  _has_bits_[0] &= ~0x00400000u;
}
void SearchContactItem::clear__verifyflag() {
  _verifyflag_ = 0u;
  clear_has__verifyflag();
}
::google::protobuf::uint32 SearchContactItem::_verifyflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._VerifyFlag)
  return _verifyflag_;
}
void SearchContactItem::set__verifyflag(::google::protobuf::uint32 value) {
  set_has__verifyflag();
  _verifyflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._VerifyFlag)
}

// optional string _VerifyInfo = 12;
bool SearchContactItem::has__verifyinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SearchContactItem::set_has__verifyinfo() {
  _has_bits_[0] |= 0x00000008u;
}
void SearchContactItem::clear_has__verifyinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
void SearchContactItem::clear__verifyinfo() {
  _verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__verifyinfo();
}
const ::std::string& SearchContactItem::_verifyinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._VerifyInfo)
  return _verifyinfo_.GetNoArena();
}
void SearchContactItem::set__verifyinfo(const ::std::string& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
#if LANG_CXX11
void SearchContactItem::set__verifyinfo(::std::string&& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
#endif
void SearchContactItem::set__verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
void SearchContactItem::set__verifyinfo(const char* value, size_t size) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
::std::string* SearchContactItem::mutable__verifyinfo() {
  set_has__verifyinfo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._VerifyInfo)
  return _verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__verifyinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._VerifyInfo)
  clear_has__verifyinfo();
  return _verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__verifyinfo(::std::string* _verifyinfo) {
  if (_verifyinfo != NULL) {
    set_has__verifyinfo();
  } else {
    clear_has__verifyinfo();
  }
  _verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._VerifyInfo)
}

// optional string _Weibo = 13;
bool SearchContactItem::has__weibo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SearchContactItem::set_has__weibo() {
  _has_bits_[0] |= 0x00000010u;
}
void SearchContactItem::clear_has__weibo() {
  _has_bits_[0] &= ~0x00000010u;
}
void SearchContactItem::clear__weibo() {
  _weibo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__weibo();
}
const ::std::string& SearchContactItem::_weibo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Weibo)
  return _weibo_.GetNoArena();
}
void SearchContactItem::set__weibo(const ::std::string& value) {
  set_has__weibo();
  _weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Weibo)
}
#if LANG_CXX11
void SearchContactItem::set__weibo(::std::string&& value) {
  set_has__weibo();
  _weibo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Weibo)
}
#endif
void SearchContactItem::set__weibo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__weibo();
  _weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Weibo)
}
void SearchContactItem::set__weibo(const char* value, size_t size) {
  set_has__weibo();
  _weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Weibo)
}
::std::string* SearchContactItem::mutable__weibo() {
  set_has__weibo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Weibo)
  return _weibo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__weibo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Weibo)
  clear_has__weibo();
  return _weibo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__weibo(::std::string* _weibo) {
  if (_weibo != NULL) {
    set_has__weibo();
  } else {
    clear_has__weibo();
  }
  _weibo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _weibo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Weibo)
}

// optional string _Alias = 14;
bool SearchContactItem::has__alias() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SearchContactItem::set_has__alias() {
  _has_bits_[0] |= 0x00000020u;
}
void SearchContactItem::clear_has__alias() {
  _has_bits_[0] &= ~0x00000020u;
}
void SearchContactItem::clear__alias() {
  _alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__alias();
}
const ::std::string& SearchContactItem::_alias() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Alias)
  return _alias_.GetNoArena();
}
void SearchContactItem::set__alias(const ::std::string& value) {
  set_has__alias();
  _alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Alias)
}
#if LANG_CXX11
void SearchContactItem::set__alias(::std::string&& value) {
  set_has__alias();
  _alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Alias)
}
#endif
void SearchContactItem::set__alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__alias();
  _alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Alias)
}
void SearchContactItem::set__alias(const char* value, size_t size) {
  set_has__alias();
  _alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Alias)
}
::std::string* SearchContactItem::mutable__alias() {
  set_has__alias();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Alias)
  return _alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__alias() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Alias)
  clear_has__alias();
  return _alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__alias(::std::string* _alias) {
  if (_alias != NULL) {
    set_has__alias();
  } else {
    clear_has__alias();
  }
  _alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _alias);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Alias)
}

// optional string _WeiboNickname = 15;
bool SearchContactItem::has__weibonickname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SearchContactItem::set_has__weibonickname() {
  _has_bits_[0] |= 0x00000040u;
}
void SearchContactItem::clear_has__weibonickname() {
  _has_bits_[0] &= ~0x00000040u;
}
void SearchContactItem::clear__weibonickname() {
  _weibonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__weibonickname();
}
const ::std::string& SearchContactItem::_weibonickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._WeiboNickname)
  return _weibonickname_.GetNoArena();
}
void SearchContactItem::set__weibonickname(const ::std::string& value) {
  set_has__weibonickname();
  _weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
#if LANG_CXX11
void SearchContactItem::set__weibonickname(::std::string&& value) {
  set_has__weibonickname();
  _weibonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
#endif
void SearchContactItem::set__weibonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__weibonickname();
  _weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
void SearchContactItem::set__weibonickname(const char* value, size_t size) {
  set_has__weibonickname();
  _weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
::std::string* SearchContactItem::mutable__weibonickname() {
  set_has__weibonickname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._WeiboNickname)
  return _weibonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__weibonickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._WeiboNickname)
  clear_has__weibonickname();
  return _weibonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__weibonickname(::std::string* _weibonickname) {
  if (_weibonickname != NULL) {
    set_has__weibonickname();
  } else {
    clear_has__weibonickname();
  }
  _weibonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _weibonickname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._WeiboNickname)
}

// optional uint32 _WeiboFlag = 16;
bool SearchContactItem::has__weiboflag() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void SearchContactItem::set_has__weiboflag() {
  _has_bits_[0] |= 0x00800000u;
}
void SearchContactItem::clear_has__weiboflag() {
  _has_bits_[0] &= ~0x00800000u;
}
void SearchContactItem::clear__weiboflag() {
  _weiboflag_ = 0u;
  clear_has__weiboflag();
}
::google::protobuf::uint32 SearchContactItem::_weiboflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._WeiboFlag)
  return _weiboflag_;
}
void SearchContactItem::set__weiboflag(::google::protobuf::uint32 value) {
  set_has__weiboflag();
  _weiboflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._WeiboFlag)
}

// optional int32 _AlbumStyle = 17;
bool SearchContactItem::has__albumstyle() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void SearchContactItem::set_has__albumstyle() {
  _has_bits_[0] |= 0x01000000u;
}
void SearchContactItem::clear_has__albumstyle() {
  _has_bits_[0] &= ~0x01000000u;
}
void SearchContactItem::clear__albumstyle() {
  _albumstyle_ = 0;
  clear_has__albumstyle();
}
::google::protobuf::int32 SearchContactItem::_albumstyle() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AlbumStyle)
  return _albumstyle_;
}
void SearchContactItem::set__albumstyle(::google::protobuf::int32 value) {
  set_has__albumstyle();
  _albumstyle_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AlbumStyle)
}

// optional int32 _AlbumFlag = 18;
bool SearchContactItem::has__albumflag() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void SearchContactItem::set_has__albumflag() {
  _has_bits_[0] |= 0x02000000u;
}
void SearchContactItem::clear_has__albumflag() {
  _has_bits_[0] &= ~0x02000000u;
}
void SearchContactItem::clear__albumflag() {
  _albumflag_ = 0;
  clear_has__albumflag();
}
::google::protobuf::int32 SearchContactItem::_albumflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AlbumFlag)
  return _albumflag_;
}
void SearchContactItem::set__albumflag(::google::protobuf::int32 value) {
  set_has__albumflag();
  _albumflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AlbumFlag)
}

// optional string _AlbumBGImgID = 19;
bool SearchContactItem::has__albumbgimgid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SearchContactItem::set_has__albumbgimgid() {
  _has_bits_[0] |= 0x00000080u;
}
void SearchContactItem::clear_has__albumbgimgid() {
  _has_bits_[0] &= ~0x00000080u;
}
void SearchContactItem::clear__albumbgimgid() {
  _albumbgimgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__albumbgimgid();
}
const ::std::string& SearchContactItem::_albumbgimgid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
  return _albumbgimgid_.GetNoArena();
}
void SearchContactItem::set__albumbgimgid(const ::std::string& value) {
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
#if LANG_CXX11
void SearchContactItem::set__albumbgimgid(::std::string&& value) {
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
#endif
void SearchContactItem::set__albumbgimgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
void SearchContactItem::set__albumbgimgid(const char* value, size_t size) {
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
::std::string* SearchContactItem::mutable__albumbgimgid() {
  set_has__albumbgimgid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
  return _albumbgimgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__albumbgimgid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
  clear_has__albumbgimgid();
  return _albumbgimgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__albumbgimgid(::std::string* _albumbgimgid) {
  if (_albumbgimgid != NULL) {
    set_has__albumbgimgid();
  } else {
    clear_has__albumbgimgid();
  }
  _albumbgimgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _albumbgimgid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}

// optional .MMPro.micromsg.SnsUserInfo _SnsUserInfo = 20;
bool SearchContactItem::has__snsuserinfo() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void SearchContactItem::set_has__snsuserinfo() {
  _has_bits_[0] |= 0x00040000u;
}
void SearchContactItem::clear_has__snsuserinfo() {
  _has_bits_[0] &= ~0x00040000u;
}
void SearchContactItem::clear__snsuserinfo() {
  if (_snsuserinfo_ != NULL) _snsuserinfo_->::MMPro::micromsg::SnsUserInfo::Clear();
  clear_has__snsuserinfo();
}
const ::MMPro::micromsg::SnsUserInfo& SearchContactItem::_snsuserinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._SnsUserInfo)
  return _snsuserinfo_ != NULL ? *_snsuserinfo_
                         : *::MMPro::micromsg::SnsUserInfo::internal_default_instance();
}
::MMPro::micromsg::SnsUserInfo* SearchContactItem::mutable__snsuserinfo() {
  set_has__snsuserinfo();
  if (_snsuserinfo_ == NULL) {
    _snsuserinfo_ = new ::MMPro::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._SnsUserInfo)
  return _snsuserinfo_;
}
::MMPro::micromsg::SnsUserInfo* SearchContactItem::release__snsuserinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._SnsUserInfo)
  clear_has__snsuserinfo();
  ::MMPro::micromsg::SnsUserInfo* temp = _snsuserinfo_;
  _snsuserinfo_ = NULL;
  return temp;
}
void SearchContactItem::set_allocated__snsuserinfo(::MMPro::micromsg::SnsUserInfo* _snsuserinfo) {
  delete _snsuserinfo_;
  _snsuserinfo_ = _snsuserinfo;
  if (_snsuserinfo) {
    set_has__snsuserinfo();
  } else {
    clear_has__snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._SnsUserInfo)
}

// optional string _Country = 21;
bool SearchContactItem::has__country() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SearchContactItem::set_has__country() {
  _has_bits_[0] |= 0x00000100u;
}
void SearchContactItem::clear_has__country() {
  _has_bits_[0] &= ~0x00000100u;
}
void SearchContactItem::clear__country() {
  _country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__country();
}
const ::std::string& SearchContactItem::_country() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Country)
  return _country_.GetNoArena();
}
void SearchContactItem::set__country(const ::std::string& value) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Country)
}
#if LANG_CXX11
void SearchContactItem::set__country(::std::string&& value) {
  set_has__country();
  _country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Country)
}
#endif
void SearchContactItem::set__country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Country)
}
void SearchContactItem::set__country(const char* value, size_t size) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Country)
}
::std::string* SearchContactItem::mutable__country() {
  set_has__country();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Country)
  return _country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__country() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Country)
  clear_has__country();
  return _country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__country(::std::string* _country) {
  if (_country != NULL) {
    set_has__country();
  } else {
    clear_has__country();
  }
  _country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _country);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Country)
}

// optional string _MyBrandList = 22;
bool SearchContactItem::has__mybrandlist() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SearchContactItem::set_has__mybrandlist() {
  _has_bits_[0] |= 0x00000200u;
}
void SearchContactItem::clear_has__mybrandlist() {
  _has_bits_[0] &= ~0x00000200u;
}
void SearchContactItem::clear__mybrandlist() {
  _mybrandlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__mybrandlist();
}
const ::std::string& SearchContactItem::_mybrandlist() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._MyBrandList)
  return _mybrandlist_.GetNoArena();
}
void SearchContactItem::set__mybrandlist(const ::std::string& value) {
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._MyBrandList)
}
#if LANG_CXX11
void SearchContactItem::set__mybrandlist(::std::string&& value) {
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._MyBrandList)
}
#endif
void SearchContactItem::set__mybrandlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._MyBrandList)
}
void SearchContactItem::set__mybrandlist(const char* value, size_t size) {
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._MyBrandList)
}
::std::string* SearchContactItem::mutable__mybrandlist() {
  set_has__mybrandlist();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._MyBrandList)
  return _mybrandlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__mybrandlist() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._MyBrandList)
  clear_has__mybrandlist();
  return _mybrandlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__mybrandlist(::std::string* _mybrandlist) {
  if (_mybrandlist != NULL) {
    set_has__mybrandlist();
  } else {
    clear_has__mybrandlist();
  }
  _mybrandlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _mybrandlist);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._MyBrandList)
}

// optional .MMPro.micromsg.CustomizedInfo _CustomizedInfo = 23;
bool SearchContactItem::has__customizedinfo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void SearchContactItem::set_has__customizedinfo() {
  _has_bits_[0] |= 0x00080000u;
}
void SearchContactItem::clear_has__customizedinfo() {
  _has_bits_[0] &= ~0x00080000u;
}
void SearchContactItem::clear__customizedinfo() {
  if (_customizedinfo_ != NULL) _customizedinfo_->::MMPro::micromsg::CustomizedInfo::Clear();
  clear_has__customizedinfo();
}
const ::MMPro::micromsg::CustomizedInfo& SearchContactItem::_customizedinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._CustomizedInfo)
  return _customizedinfo_ != NULL ? *_customizedinfo_
                         : *::MMPro::micromsg::CustomizedInfo::internal_default_instance();
}
::MMPro::micromsg::CustomizedInfo* SearchContactItem::mutable__customizedinfo() {
  set_has__customizedinfo();
  if (_customizedinfo_ == NULL) {
    _customizedinfo_ = new ::MMPro::micromsg::CustomizedInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._CustomizedInfo)
  return _customizedinfo_;
}
::MMPro::micromsg::CustomizedInfo* SearchContactItem::release__customizedinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._CustomizedInfo)
  clear_has__customizedinfo();
  ::MMPro::micromsg::CustomizedInfo* temp = _customizedinfo_;
  _customizedinfo_ = NULL;
  return temp;
}
void SearchContactItem::set_allocated__customizedinfo(::MMPro::micromsg::CustomizedInfo* _customizedinfo) {
  delete _customizedinfo_;
  _customizedinfo_ = _customizedinfo;
  if (_customizedinfo) {
    set_has__customizedinfo();
  } else {
    clear_has__customizedinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._CustomizedInfo)
}

// optional string _BigHeadImgUrl = 24;
bool SearchContactItem::has__bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SearchContactItem::set_has__bigheadimgurl() {
  _has_bits_[0] |= 0x00000400u;
}
void SearchContactItem::clear_has__bigheadimgurl() {
  _has_bits_[0] &= ~0x00000400u;
}
void SearchContactItem::clear__bigheadimgurl() {
  _bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__bigheadimgurl();
}
const ::std::string& SearchContactItem::_bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
  return _bigheadimgurl_.GetNoArena();
}
void SearchContactItem::set__bigheadimgurl(const ::std::string& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
#if LANG_CXX11
void SearchContactItem::set__bigheadimgurl(::std::string&& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
#endif
void SearchContactItem::set__bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
void SearchContactItem::set__bigheadimgurl(const char* value, size_t size) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
::std::string* SearchContactItem::mutable__bigheadimgurl() {
  set_has__bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
  return _bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__bigheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
  clear_has__bigheadimgurl();
  return _bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__bigheadimgurl(::std::string* _bigheadimgurl) {
  if (_bigheadimgurl != NULL) {
    set_has__bigheadimgurl();
  } else {
    clear_has__bigheadimgurl();
  }
  _bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}

// optional string _SmallHeadImgUrl = 25;
bool SearchContactItem::has__smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SearchContactItem::set_has__smallheadimgurl() {
  _has_bits_[0] |= 0x00000800u;
}
void SearchContactItem::clear_has__smallheadimgurl() {
  _has_bits_[0] &= ~0x00000800u;
}
void SearchContactItem::clear__smallheadimgurl() {
  _smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__smallheadimgurl();
}
const ::std::string& SearchContactItem::_smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
  return _smallheadimgurl_.GetNoArena();
}
void SearchContactItem::set__smallheadimgurl(const ::std::string& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
#if LANG_CXX11
void SearchContactItem::set__smallheadimgurl(::std::string&& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
#endif
void SearchContactItem::set__smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
void SearchContactItem::set__smallheadimgurl(const char* value, size_t size) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
::std::string* SearchContactItem::mutable__smallheadimgurl() {
  set_has__smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
  return _smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__smallheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
  clear_has__smallheadimgurl();
  return _smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__smallheadimgurl(::std::string* _smallheadimgurl) {
  if (_smallheadimgurl != NULL) {
    set_has__smallheadimgurl();
  } else {
    clear_has__smallheadimgurl();
  }
  _smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}

// optional string _AntispamTicket = 26;
bool SearchContactItem::has__antispamticket() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SearchContactItem::set_has__antispamticket() {
  _has_bits_[0] |= 0x00001000u;
}
void SearchContactItem::clear_has__antispamticket() {
  _has_bits_[0] &= ~0x00001000u;
}
void SearchContactItem::clear__antispamticket() {
  _antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__antispamticket();
}
const ::std::string& SearchContactItem::_antispamticket() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AntispamTicket)
  return _antispamticket_.GetNoArena();
}
void SearchContactItem::set__antispamticket(const ::std::string& value) {
  set_has__antispamticket();
  _antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
#if LANG_CXX11
void SearchContactItem::set__antispamticket(::std::string&& value) {
  set_has__antispamticket();
  _antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
#endif
void SearchContactItem::set__antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__antispamticket();
  _antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
void SearchContactItem::set__antispamticket(const char* value, size_t size) {
  set_has__antispamticket();
  _antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
::std::string* SearchContactItem::mutable__antispamticket() {
  set_has__antispamticket();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._AntispamTicket)
  return _antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchContactItem::release__antispamticket() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._AntispamTicket)
  clear_has__antispamticket();
  return _antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchContactItem::set_allocated__antispamticket(::std::string* _antispamticket) {
  if (_antispamticket != NULL) {
    set_has__antispamticket();
  } else {
    clear_has__antispamticket();
  }
  _antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _antispamticket);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._AntispamTicket)
}

// optional uint32 _MatchType = 27;
bool SearchContactItem::has__matchtype() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void SearchContactItem::set_has__matchtype() {
  _has_bits_[0] |= 0x04000000u;
}
void SearchContactItem::clear_has__matchtype() {
  _has_bits_[0] &= ~0x04000000u;
}
void SearchContactItem::clear__matchtype() {
  _matchtype_ = 0u;
  clear_has__matchtype();
}
::google::protobuf::uint32 SearchContactItem::_matchtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._MatchType)
  return _matchtype_;
}
void SearchContactItem::set__matchtype(::google::protobuf::uint32 value) {
  set_has__matchtype();
  _matchtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._MatchType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
