// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomInfo.proto

#ifndef PROTOBUF_RoomInfo_2eproto__INCLUDED
#define PROTOBUF_RoomInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "SKBuiltinString_t.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_RoomInfo_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_RoomInfo_2eproto

// ===================================================================

class RoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.RoomInfo) */ {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  static inline const RoomInfo* internal_default_instance() {
    return reinterpret_cast<const RoomInfo*>(
               &_RoomInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RoomInfo* other);

  // implements Message ----------------------------------------------

  inline RoomInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
  bool has__username() const;
  void clear__username();
  static const int kUserNameFieldNumber = 1;
  const ::MMPro::micromsg::SKBuiltinString_t& _username() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__username();
  ::MMPro::micromsg::SKBuiltinString_t* release__username();
  void set_allocated__username(::MMPro::micromsg::SKBuiltinString_t* _username);

  // required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
  bool has__nickname() const;
  void clear__nickname();
  static const int kNickNameFieldNumber = 2;
  const ::MMPro::micromsg::SKBuiltinString_t& _nickname() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* release__nickname();
  void set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.RoomInfo)
 private:
  void set_has__username();
  void clear_has__username();
  void set_has__nickname();
  void clear_has__nickname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::MMPro::micromsg::SKBuiltinString_t* _username_;
  ::MMPro::micromsg::SKBuiltinString_t* _nickname_;
  friend struct protobuf_RoomInfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomInfo

// required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
inline bool RoomInfo::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear__username() {
  if (_username_ != NULL) _username_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__username();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& RoomInfo::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.RoomInfo._UserName)
  return _username_ != NULL ? *_username_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* RoomInfo::mutable__username() {
  set_has__username();
  if (_username_ == NULL) {
    _username_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.RoomInfo._UserName)
  return _username_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* RoomInfo::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.RoomInfo._UserName)
  clear_has__username();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _username_;
  _username_ = NULL;
  return temp;
}
inline void RoomInfo::set_allocated__username(::MMPro::micromsg::SKBuiltinString_t* _username) {
  delete _username_;
  _username_ = _username;
  if (_username) {
    set_has__username();
  } else {
    clear_has__username();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.RoomInfo._UserName)
}

// required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
inline bool RoomInfo::has__nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has__nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear__nickname() {
  if (_nickname_ != NULL) _nickname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__nickname();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& RoomInfo::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.RoomInfo._NickName)
  return _nickname_ != NULL ? *_nickname_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* RoomInfo::mutable__nickname() {
  set_has__nickname();
  if (_nickname_ == NULL) {
    _nickname_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.RoomInfo._NickName)
  return _nickname_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* RoomInfo::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.RoomInfo._NickName)
  clear_has__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _nickname_;
  _nickname_ = NULL;
  return temp;
}
inline void RoomInfo::set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname) {
  delete _nickname_;
  _nickname_ = _nickname;
  if (_nickname) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.RoomInfo._NickName)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoomInfo_2eproto__INCLUDED
