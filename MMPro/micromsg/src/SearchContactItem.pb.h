// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SearchContactItem.proto

#ifndef PROTOBUF_SearchContactItem_2eproto__INCLUDED
#define PROTOBUF_SearchContactItem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "SKBuiltinString_t.pb.h"
#include "SKBuiltinBuffer_t.pb.h"
#include "SnsUserInfo.pb.h"
#include "CustomizedInfo.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SearchContactItem;
class SearchContactItemDefaultTypeInternal;
extern SearchContactItemDefaultTypeInternal _SearchContactItem_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_SearchContactItem_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_SearchContactItem_2eproto

// ===================================================================

class SearchContactItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.SearchContactItem) */ {
 public:
  SearchContactItem();
  virtual ~SearchContactItem();

  SearchContactItem(const SearchContactItem& from);

  inline SearchContactItem& operator=(const SearchContactItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchContactItem& default_instance();

  static inline const SearchContactItem* internal_default_instance() {
    return reinterpret_cast<const SearchContactItem*>(
               &_SearchContactItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SearchContactItem* other);

  // implements Message ----------------------------------------------

  inline SearchContactItem* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchContactItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchContactItem& from);
  void MergeFrom(const SearchContactItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchContactItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _Province = 7;
  bool has__province() const;
  void clear__province();
  static const int kProvinceFieldNumber = 7;
  const ::std::string& _province() const;
  void set__province(const ::std::string& value);
  #if LANG_CXX11
  void set__province(::std::string&& value);
  #endif
  void set__province(const char* value);
  void set__province(const char* value, size_t size);
  ::std::string* mutable__province();
  ::std::string* release__province();
  void set_allocated__province(::std::string* _province);

  // optional string _City = 8;
  bool has__city() const;
  void clear__city();
  static const int kCityFieldNumber = 8;
  const ::std::string& _city() const;
  void set__city(const ::std::string& value);
  #if LANG_CXX11
  void set__city(::std::string&& value);
  #endif
  void set__city(const char* value);
  void set__city(const char* value, size_t size);
  ::std::string* mutable__city();
  ::std::string* release__city();
  void set_allocated__city(::std::string* _city);

  // optional string _Signature = 9;
  bool has__signature() const;
  void clear__signature();
  static const int kSignatureFieldNumber = 9;
  const ::std::string& _signature() const;
  void set__signature(const ::std::string& value);
  #if LANG_CXX11
  void set__signature(::std::string&& value);
  #endif
  void set__signature(const char* value);
  void set__signature(const char* value, size_t size);
  ::std::string* mutable__signature();
  ::std::string* release__signature();
  void set_allocated__signature(::std::string* _signature);

  // optional string _VerifyInfo = 12;
  bool has__verifyinfo() const;
  void clear__verifyinfo();
  static const int kVerifyInfoFieldNumber = 12;
  const ::std::string& _verifyinfo() const;
  void set__verifyinfo(const ::std::string& value);
  #if LANG_CXX11
  void set__verifyinfo(::std::string&& value);
  #endif
  void set__verifyinfo(const char* value);
  void set__verifyinfo(const char* value, size_t size);
  ::std::string* mutable__verifyinfo();
  ::std::string* release__verifyinfo();
  void set_allocated__verifyinfo(::std::string* _verifyinfo);

  // optional string _Weibo = 13;
  bool has__weibo() const;
  void clear__weibo();
  static const int kWeiboFieldNumber = 13;
  const ::std::string& _weibo() const;
  void set__weibo(const ::std::string& value);
  #if LANG_CXX11
  void set__weibo(::std::string&& value);
  #endif
  void set__weibo(const char* value);
  void set__weibo(const char* value, size_t size);
  ::std::string* mutable__weibo();
  ::std::string* release__weibo();
  void set_allocated__weibo(::std::string* _weibo);

  // optional string _Alias = 14;
  bool has__alias() const;
  void clear__alias();
  static const int kAliasFieldNumber = 14;
  const ::std::string& _alias() const;
  void set__alias(const ::std::string& value);
  #if LANG_CXX11
  void set__alias(::std::string&& value);
  #endif
  void set__alias(const char* value);
  void set__alias(const char* value, size_t size);
  ::std::string* mutable__alias();
  ::std::string* release__alias();
  void set_allocated__alias(::std::string* _alias);

  // optional string _WeiboNickname = 15;
  bool has__weibonickname() const;
  void clear__weibonickname();
  static const int kWeiboNicknameFieldNumber = 15;
  const ::std::string& _weibonickname() const;
  void set__weibonickname(const ::std::string& value);
  #if LANG_CXX11
  void set__weibonickname(::std::string&& value);
  #endif
  void set__weibonickname(const char* value);
  void set__weibonickname(const char* value, size_t size);
  ::std::string* mutable__weibonickname();
  ::std::string* release__weibonickname();
  void set_allocated__weibonickname(::std::string* _weibonickname);

  // optional string _AlbumBGImgID = 19;
  bool has__albumbgimgid() const;
  void clear__albumbgimgid();
  static const int kAlbumBGImgIDFieldNumber = 19;
  const ::std::string& _albumbgimgid() const;
  void set__albumbgimgid(const ::std::string& value);
  #if LANG_CXX11
  void set__albumbgimgid(::std::string&& value);
  #endif
  void set__albumbgimgid(const char* value);
  void set__albumbgimgid(const char* value, size_t size);
  ::std::string* mutable__albumbgimgid();
  ::std::string* release__albumbgimgid();
  void set_allocated__albumbgimgid(::std::string* _albumbgimgid);

  // optional string _Country = 21;
  bool has__country() const;
  void clear__country();
  static const int kCountryFieldNumber = 21;
  const ::std::string& _country() const;
  void set__country(const ::std::string& value);
  #if LANG_CXX11
  void set__country(::std::string&& value);
  #endif
  void set__country(const char* value);
  void set__country(const char* value, size_t size);
  ::std::string* mutable__country();
  ::std::string* release__country();
  void set_allocated__country(::std::string* _country);

  // optional string _MyBrandList = 22;
  bool has__mybrandlist() const;
  void clear__mybrandlist();
  static const int kMyBrandListFieldNumber = 22;
  const ::std::string& _mybrandlist() const;
  void set__mybrandlist(const ::std::string& value);
  #if LANG_CXX11
  void set__mybrandlist(::std::string&& value);
  #endif
  void set__mybrandlist(const char* value);
  void set__mybrandlist(const char* value, size_t size);
  ::std::string* mutable__mybrandlist();
  ::std::string* release__mybrandlist();
  void set_allocated__mybrandlist(::std::string* _mybrandlist);

  // optional string _BigHeadImgUrl = 24;
  bool has__bigheadimgurl() const;
  void clear__bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 24;
  const ::std::string& _bigheadimgurl() const;
  void set__bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set__bigheadimgurl(::std::string&& value);
  #endif
  void set__bigheadimgurl(const char* value);
  void set__bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable__bigheadimgurl();
  ::std::string* release__bigheadimgurl();
  void set_allocated__bigheadimgurl(::std::string* _bigheadimgurl);

  // optional string _SmallHeadImgUrl = 25;
  bool has__smallheadimgurl() const;
  void clear__smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 25;
  const ::std::string& _smallheadimgurl() const;
  void set__smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set__smallheadimgurl(::std::string&& value);
  #endif
  void set__smallheadimgurl(const char* value);
  void set__smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable__smallheadimgurl();
  ::std::string* release__smallheadimgurl();
  void set_allocated__smallheadimgurl(::std::string* _smallheadimgurl);

  // optional string _AntispamTicket = 26;
  bool has__antispamticket() const;
  void clear__antispamticket();
  static const int kAntispamTicketFieldNumber = 26;
  const ::std::string& _antispamticket() const;
  void set__antispamticket(const ::std::string& value);
  #if LANG_CXX11
  void set__antispamticket(::std::string&& value);
  #endif
  void set__antispamticket(const char* value);
  void set__antispamticket(const char* value, size_t size);
  ::std::string* mutable__antispamticket();
  ::std::string* release__antispamticket();
  void set_allocated__antispamticket(::std::string* _antispamticket);

  // required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
  bool has__username() const;
  void clear__username();
  static const int kUserNameFieldNumber = 1;
  const ::MMPro::micromsg::SKBuiltinString_t& _username() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__username();
  ::MMPro::micromsg::SKBuiltinString_t* release__username();
  void set_allocated__username(::MMPro::micromsg::SKBuiltinString_t* _username);

  // required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
  bool has__nickname() const;
  void clear__nickname();
  static const int kNickNameFieldNumber = 2;
  const ::MMPro::micromsg::SKBuiltinString_t& _nickname() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* release__nickname();
  void set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname);

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
  bool has__pyinitial() const;
  void clear__pyinitial();
  static const int kPYInitialFieldNumber = 3;
  const ::MMPro::micromsg::SKBuiltinString_t& _pyinitial() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* release__pyinitial();
  void set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial);

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
  bool has__quanpin() const;
  void clear__quanpin();
  static const int kQuanPinFieldNumber = 4;
  const ::MMPro::micromsg::SKBuiltinString_t& _quanpin() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* release__quanpin();
  void set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin);

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
  bool has__imgbuf() const;
  void clear__imgbuf();
  static const int kImgBufFieldNumber = 6;
  const ::MMPro::micromsg::SKBuiltinBuffer_t& _imgbuf() const;
  ::MMPro::micromsg::SKBuiltinBuffer_t* mutable__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* release__imgbuf();
  void set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf);

  // optional .MMPro.micromsg.SnsUserInfo _SnsUserInfo = 20;
  bool has__snsuserinfo() const;
  void clear__snsuserinfo();
  static const int kSnsUserInfoFieldNumber = 20;
  const ::MMPro::micromsg::SnsUserInfo& _snsuserinfo() const;
  ::MMPro::micromsg::SnsUserInfo* mutable__snsuserinfo();
  ::MMPro::micromsg::SnsUserInfo* release__snsuserinfo();
  void set_allocated__snsuserinfo(::MMPro::micromsg::SnsUserInfo* _snsuserinfo);

  // optional .MMPro.micromsg.CustomizedInfo _CustomizedInfo = 23;
  bool has__customizedinfo() const;
  void clear__customizedinfo();
  static const int kCustomizedInfoFieldNumber = 23;
  const ::MMPro::micromsg::CustomizedInfo& _customizedinfo() const;
  ::MMPro::micromsg::CustomizedInfo* mutable__customizedinfo();
  ::MMPro::micromsg::CustomizedInfo* release__customizedinfo();
  void set_allocated__customizedinfo(::MMPro::micromsg::CustomizedInfo* _customizedinfo);

  // required int32 _Sex = 5;
  bool has__sex() const;
  void clear__sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::int32 _sex() const;
  void set__sex(::google::protobuf::int32 value);

  // optional uint32 _PersonalCard = 10;
  bool has__personalcard() const;
  void clear__personalcard();
  static const int kPersonalCardFieldNumber = 10;
  ::google::protobuf::uint32 _personalcard() const;
  void set__personalcard(::google::protobuf::uint32 value);

  // optional uint32 _VerifyFlag = 11;
  bool has__verifyflag() const;
  void clear__verifyflag();
  static const int kVerifyFlagFieldNumber = 11;
  ::google::protobuf::uint32 _verifyflag() const;
  void set__verifyflag(::google::protobuf::uint32 value);

  // optional uint32 _WeiboFlag = 16;
  bool has__weiboflag() const;
  void clear__weiboflag();
  static const int kWeiboFlagFieldNumber = 16;
  ::google::protobuf::uint32 _weiboflag() const;
  void set__weiboflag(::google::protobuf::uint32 value);

  // optional int32 _AlbumStyle = 17;
  bool has__albumstyle() const;
  void clear__albumstyle();
  static const int kAlbumStyleFieldNumber = 17;
  ::google::protobuf::int32 _albumstyle() const;
  void set__albumstyle(::google::protobuf::int32 value);

  // optional int32 _AlbumFlag = 18;
  bool has__albumflag() const;
  void clear__albumflag();
  static const int kAlbumFlagFieldNumber = 18;
  ::google::protobuf::int32 _albumflag() const;
  void set__albumflag(::google::protobuf::int32 value);

  // optional uint32 _MatchType = 27;
  bool has__matchtype() const;
  void clear__matchtype();
  static const int kMatchTypeFieldNumber = 27;
  ::google::protobuf::uint32 _matchtype() const;
  void set__matchtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.SearchContactItem)
 private:
  void set_has__username();
  void clear_has__username();
  void set_has__nickname();
  void clear_has__nickname();
  void set_has__pyinitial();
  void clear_has__pyinitial();
  void set_has__quanpin();
  void clear_has__quanpin();
  void set_has__sex();
  void clear_has__sex();
  void set_has__imgbuf();
  void clear_has__imgbuf();
  void set_has__province();
  void clear_has__province();
  void set_has__city();
  void clear_has__city();
  void set_has__signature();
  void clear_has__signature();
  void set_has__personalcard();
  void clear_has__personalcard();
  void set_has__verifyflag();
  void clear_has__verifyflag();
  void set_has__verifyinfo();
  void clear_has__verifyinfo();
  void set_has__weibo();
  void clear_has__weibo();
  void set_has__alias();
  void clear_has__alias();
  void set_has__weibonickname();
  void clear_has__weibonickname();
  void set_has__weiboflag();
  void clear_has__weiboflag();
  void set_has__albumstyle();
  void clear_has__albumstyle();
  void set_has__albumflag();
  void clear_has__albumflag();
  void set_has__albumbgimgid();
  void clear_has__albumbgimgid();
  void set_has__snsuserinfo();
  void clear_has__snsuserinfo();
  void set_has__country();
  void clear_has__country();
  void set_has__mybrandlist();
  void clear_has__mybrandlist();
  void set_has__customizedinfo();
  void clear_has__customizedinfo();
  void set_has__bigheadimgurl();
  void clear_has__bigheadimgurl();
  void set_has__smallheadimgurl();
  void clear_has__smallheadimgurl();
  void set_has__antispamticket();
  void clear_has__antispamticket();
  void set_has__matchtype();
  void clear_has__matchtype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _province_;
  ::google::protobuf::internal::ArenaStringPtr _city_;
  ::google::protobuf::internal::ArenaStringPtr _signature_;
  ::google::protobuf::internal::ArenaStringPtr _verifyinfo_;
  ::google::protobuf::internal::ArenaStringPtr _weibo_;
  ::google::protobuf::internal::ArenaStringPtr _alias_;
  ::google::protobuf::internal::ArenaStringPtr _weibonickname_;
  ::google::protobuf::internal::ArenaStringPtr _albumbgimgid_;
  ::google::protobuf::internal::ArenaStringPtr _country_;
  ::google::protobuf::internal::ArenaStringPtr _mybrandlist_;
  ::google::protobuf::internal::ArenaStringPtr _bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr _smallheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr _antispamticket_;
  ::MMPro::micromsg::SKBuiltinString_t* _username_;
  ::MMPro::micromsg::SKBuiltinString_t* _nickname_;
  ::MMPro::micromsg::SKBuiltinString_t* _pyinitial_;
  ::MMPro::micromsg::SKBuiltinString_t* _quanpin_;
  ::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf_;
  ::MMPro::micromsg::SnsUserInfo* _snsuserinfo_;
  ::MMPro::micromsg::CustomizedInfo* _customizedinfo_;
  ::google::protobuf::int32 _sex_;
  ::google::protobuf::uint32 _personalcard_;
  ::google::protobuf::uint32 _verifyflag_;
  ::google::protobuf::uint32 _weiboflag_;
  ::google::protobuf::int32 _albumstyle_;
  ::google::protobuf::int32 _albumflag_;
  ::google::protobuf::uint32 _matchtype_;
  friend struct protobuf_SearchContactItem_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchContactItem

// required .MMPro.micromsg.SKBuiltinString_t _UserName = 1;
inline bool SearchContactItem::has__username() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SearchContactItem::set_has__username() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SearchContactItem::clear_has__username() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SearchContactItem::clear__username() {
  if (_username_ != NULL) _username_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__username();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._UserName)
  return _username_ != NULL ? *_username_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__username() {
  set_has__username();
  if (_username_ == NULL) {
    _username_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._UserName)
  return _username_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._UserName)
  clear_has__username();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _username_;
  _username_ = NULL;
  return temp;
}
inline void SearchContactItem::set_allocated__username(::MMPro::micromsg::SKBuiltinString_t* _username) {
  delete _username_;
  _username_ = _username;
  if (_username) {
    set_has__username();
  } else {
    clear_has__username();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._UserName)
}

// required .MMPro.micromsg.SKBuiltinString_t _NickName = 2;
inline bool SearchContactItem::has__nickname() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SearchContactItem::set_has__nickname() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SearchContactItem::clear_has__nickname() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SearchContactItem::clear__nickname() {
  if (_nickname_ != NULL) _nickname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__nickname();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._NickName)
  return _nickname_ != NULL ? *_nickname_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__nickname() {
  set_has__nickname();
  if (_nickname_ == NULL) {
    _nickname_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._NickName)
  return _nickname_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._NickName)
  clear_has__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _nickname_;
  _nickname_ = NULL;
  return temp;
}
inline void SearchContactItem::set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname) {
  delete _nickname_;
  _nickname_ = _nickname;
  if (_nickname) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._NickName)
}

// required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 3;
inline bool SearchContactItem::has__pyinitial() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SearchContactItem::set_has__pyinitial() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SearchContactItem::clear_has__pyinitial() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SearchContactItem::clear__pyinitial() {
  if (_pyinitial_ != NULL) _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__pyinitial();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_pyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._PYInitial)
  return _pyinitial_ != NULL ? *_pyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__pyinitial() {
  set_has__pyinitial();
  if (_pyinitial_ == NULL) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._PYInitial)
  return _pyinitial_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__pyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._PYInitial)
  clear_has__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _pyinitial_;
  _pyinitial_ = NULL;
  return temp;
}
inline void SearchContactItem::set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial) {
  delete _pyinitial_;
  _pyinitial_ = _pyinitial;
  if (_pyinitial) {
    set_has__pyinitial();
  } else {
    clear_has__pyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._PYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 4;
inline bool SearchContactItem::has__quanpin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void SearchContactItem::set_has__quanpin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void SearchContactItem::clear_has__quanpin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void SearchContactItem::clear__quanpin() {
  if (_quanpin_ != NULL) _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__quanpin();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& SearchContactItem::_quanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._QuanPin)
  return _quanpin_ != NULL ? *_quanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::mutable__quanpin() {
  set_has__quanpin();
  if (_quanpin_ == NULL) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._QuanPin)
  return _quanpin_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* SearchContactItem::release__quanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._QuanPin)
  clear_has__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _quanpin_;
  _quanpin_ = NULL;
  return temp;
}
inline void SearchContactItem::set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin) {
  delete _quanpin_;
  _quanpin_ = _quanpin;
  if (_quanpin) {
    set_has__quanpin();
  } else {
    clear_has__quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._QuanPin)
}

// required int32 _Sex = 5;
inline bool SearchContactItem::has__sex() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void SearchContactItem::set_has__sex() {
  _has_bits_[0] |= 0x00100000u;
}
inline void SearchContactItem::clear_has__sex() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void SearchContactItem::clear__sex() {
  _sex_ = 0;
  clear_has__sex();
}
inline ::google::protobuf::int32 SearchContactItem::_sex() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Sex)
  return _sex_;
}
inline void SearchContactItem::set__sex(::google::protobuf::int32 value) {
  set_has__sex();
  _sex_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Sex)
}

// required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 6;
inline bool SearchContactItem::has__imgbuf() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void SearchContactItem::set_has__imgbuf() {
  _has_bits_[0] |= 0x00020000u;
}
inline void SearchContactItem::clear_has__imgbuf() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void SearchContactItem::clear__imgbuf() {
  if (_imgbuf_ != NULL) _imgbuf_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__imgbuf();
}
inline const ::MMPro::micromsg::SKBuiltinBuffer_t& SearchContactItem::_imgbuf() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._ImgBuf)
  return _imgbuf_ != NULL ? *_imgbuf_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* SearchContactItem::mutable__imgbuf() {
  set_has__imgbuf();
  if (_imgbuf_ == NULL) {
    _imgbuf_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._ImgBuf)
  return _imgbuf_;
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* SearchContactItem::release__imgbuf() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._ImgBuf)
  clear_has__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _imgbuf_;
  _imgbuf_ = NULL;
  return temp;
}
inline void SearchContactItem::set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf) {
  delete _imgbuf_;
  _imgbuf_ = _imgbuf;
  if (_imgbuf) {
    set_has__imgbuf();
  } else {
    clear_has__imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._ImgBuf)
}

// optional string _Province = 7;
inline bool SearchContactItem::has__province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchContactItem::set_has__province() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchContactItem::clear_has__province() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchContactItem::clear__province() {
  _province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__province();
}
inline const ::std::string& SearchContactItem::_province() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Province)
  return _province_.GetNoArena();
}
inline void SearchContactItem::set__province(const ::std::string& value) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Province)
}
#if LANG_CXX11
inline void SearchContactItem::set__province(::std::string&& value) {
  set_has__province();
  _province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Province)
}
#endif
inline void SearchContactItem::set__province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Province)
}
inline void SearchContactItem::set__province(const char* value, size_t size) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Province)
}
inline ::std::string* SearchContactItem::mutable__province() {
  set_has__province();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Province)
  return _province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__province() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Province)
  clear_has__province();
  return _province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__province(::std::string* _province) {
  if (_province != NULL) {
    set_has__province();
  } else {
    clear_has__province();
  }
  _province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _province);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Province)
}

// optional string _City = 8;
inline bool SearchContactItem::has__city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchContactItem::set_has__city() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchContactItem::clear_has__city() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchContactItem::clear__city() {
  _city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__city();
}
inline const ::std::string& SearchContactItem::_city() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._City)
  return _city_.GetNoArena();
}
inline void SearchContactItem::set__city(const ::std::string& value) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._City)
}
#if LANG_CXX11
inline void SearchContactItem::set__city(::std::string&& value) {
  set_has__city();
  _city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._City)
}
#endif
inline void SearchContactItem::set__city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._City)
}
inline void SearchContactItem::set__city(const char* value, size_t size) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._City)
}
inline ::std::string* SearchContactItem::mutable__city() {
  set_has__city();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._City)
  return _city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__city() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._City)
  clear_has__city();
  return _city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__city(::std::string* _city) {
  if (_city != NULL) {
    set_has__city();
  } else {
    clear_has__city();
  }
  _city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _city);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._City)
}

// optional string _Signature = 9;
inline bool SearchContactItem::has__signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchContactItem::set_has__signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchContactItem::clear_has__signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchContactItem::clear__signature() {
  _signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__signature();
}
inline const ::std::string& SearchContactItem::_signature() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Signature)
  return _signature_.GetNoArena();
}
inline void SearchContactItem::set__signature(const ::std::string& value) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Signature)
}
#if LANG_CXX11
inline void SearchContactItem::set__signature(::std::string&& value) {
  set_has__signature();
  _signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Signature)
}
#endif
inline void SearchContactItem::set__signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Signature)
}
inline void SearchContactItem::set__signature(const char* value, size_t size) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Signature)
}
inline ::std::string* SearchContactItem::mutable__signature() {
  set_has__signature();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Signature)
  return _signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__signature() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Signature)
  clear_has__signature();
  return _signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__signature(::std::string* _signature) {
  if (_signature != NULL) {
    set_has__signature();
  } else {
    clear_has__signature();
  }
  _signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _signature);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Signature)
}

// optional uint32 _PersonalCard = 10;
inline bool SearchContactItem::has__personalcard() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void SearchContactItem::set_has__personalcard() {
  _has_bits_[0] |= 0x00200000u;
}
inline void SearchContactItem::clear_has__personalcard() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void SearchContactItem::clear__personalcard() {
  _personalcard_ = 0u;
  clear_has__personalcard();
}
inline ::google::protobuf::uint32 SearchContactItem::_personalcard() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._PersonalCard)
  return _personalcard_;
}
inline void SearchContactItem::set__personalcard(::google::protobuf::uint32 value) {
  set_has__personalcard();
  _personalcard_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._PersonalCard)
}

// optional uint32 _VerifyFlag = 11;
inline bool SearchContactItem::has__verifyflag() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void SearchContactItem::set_has__verifyflag() {
  _has_bits_[0] |= 0x00400000u;
}
inline void SearchContactItem::clear_has__verifyflag() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void SearchContactItem::clear__verifyflag() {
  _verifyflag_ = 0u;
  clear_has__verifyflag();
}
inline ::google::protobuf::uint32 SearchContactItem::_verifyflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._VerifyFlag)
  return _verifyflag_;
}
inline void SearchContactItem::set__verifyflag(::google::protobuf::uint32 value) {
  set_has__verifyflag();
  _verifyflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._VerifyFlag)
}

// optional string _VerifyInfo = 12;
inline bool SearchContactItem::has__verifyinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SearchContactItem::set_has__verifyinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SearchContactItem::clear_has__verifyinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SearchContactItem::clear__verifyinfo() {
  _verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__verifyinfo();
}
inline const ::std::string& SearchContactItem::_verifyinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._VerifyInfo)
  return _verifyinfo_.GetNoArena();
}
inline void SearchContactItem::set__verifyinfo(const ::std::string& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
#if LANG_CXX11
inline void SearchContactItem::set__verifyinfo(::std::string&& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
#endif
inline void SearchContactItem::set__verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
inline void SearchContactItem::set__verifyinfo(const char* value, size_t size) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._VerifyInfo)
}
inline ::std::string* SearchContactItem::mutable__verifyinfo() {
  set_has__verifyinfo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._VerifyInfo)
  return _verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__verifyinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._VerifyInfo)
  clear_has__verifyinfo();
  return _verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__verifyinfo(::std::string* _verifyinfo) {
  if (_verifyinfo != NULL) {
    set_has__verifyinfo();
  } else {
    clear_has__verifyinfo();
  }
  _verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._VerifyInfo)
}

// optional string _Weibo = 13;
inline bool SearchContactItem::has__weibo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SearchContactItem::set_has__weibo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SearchContactItem::clear_has__weibo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SearchContactItem::clear__weibo() {
  _weibo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__weibo();
}
inline const ::std::string& SearchContactItem::_weibo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Weibo)
  return _weibo_.GetNoArena();
}
inline void SearchContactItem::set__weibo(const ::std::string& value) {
  set_has__weibo();
  _weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Weibo)
}
#if LANG_CXX11
inline void SearchContactItem::set__weibo(::std::string&& value) {
  set_has__weibo();
  _weibo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Weibo)
}
#endif
inline void SearchContactItem::set__weibo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__weibo();
  _weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Weibo)
}
inline void SearchContactItem::set__weibo(const char* value, size_t size) {
  set_has__weibo();
  _weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Weibo)
}
inline ::std::string* SearchContactItem::mutable__weibo() {
  set_has__weibo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Weibo)
  return _weibo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__weibo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Weibo)
  clear_has__weibo();
  return _weibo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__weibo(::std::string* _weibo) {
  if (_weibo != NULL) {
    set_has__weibo();
  } else {
    clear_has__weibo();
  }
  _weibo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _weibo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Weibo)
}

// optional string _Alias = 14;
inline bool SearchContactItem::has__alias() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SearchContactItem::set_has__alias() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SearchContactItem::clear_has__alias() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SearchContactItem::clear__alias() {
  _alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__alias();
}
inline const ::std::string& SearchContactItem::_alias() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Alias)
  return _alias_.GetNoArena();
}
inline void SearchContactItem::set__alias(const ::std::string& value) {
  set_has__alias();
  _alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Alias)
}
#if LANG_CXX11
inline void SearchContactItem::set__alias(::std::string&& value) {
  set_has__alias();
  _alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Alias)
}
#endif
inline void SearchContactItem::set__alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__alias();
  _alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Alias)
}
inline void SearchContactItem::set__alias(const char* value, size_t size) {
  set_has__alias();
  _alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Alias)
}
inline ::std::string* SearchContactItem::mutable__alias() {
  set_has__alias();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Alias)
  return _alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__alias() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Alias)
  clear_has__alias();
  return _alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__alias(::std::string* _alias) {
  if (_alias != NULL) {
    set_has__alias();
  } else {
    clear_has__alias();
  }
  _alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _alias);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Alias)
}

// optional string _WeiboNickname = 15;
inline bool SearchContactItem::has__weibonickname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SearchContactItem::set_has__weibonickname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SearchContactItem::clear_has__weibonickname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SearchContactItem::clear__weibonickname() {
  _weibonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__weibonickname();
}
inline const ::std::string& SearchContactItem::_weibonickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._WeiboNickname)
  return _weibonickname_.GetNoArena();
}
inline void SearchContactItem::set__weibonickname(const ::std::string& value) {
  set_has__weibonickname();
  _weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
#if LANG_CXX11
inline void SearchContactItem::set__weibonickname(::std::string&& value) {
  set_has__weibonickname();
  _weibonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
#endif
inline void SearchContactItem::set__weibonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__weibonickname();
  _weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
inline void SearchContactItem::set__weibonickname(const char* value, size_t size) {
  set_has__weibonickname();
  _weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._WeiboNickname)
}
inline ::std::string* SearchContactItem::mutable__weibonickname() {
  set_has__weibonickname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._WeiboNickname)
  return _weibonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__weibonickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._WeiboNickname)
  clear_has__weibonickname();
  return _weibonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__weibonickname(::std::string* _weibonickname) {
  if (_weibonickname != NULL) {
    set_has__weibonickname();
  } else {
    clear_has__weibonickname();
  }
  _weibonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _weibonickname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._WeiboNickname)
}

// optional uint32 _WeiboFlag = 16;
inline bool SearchContactItem::has__weiboflag() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void SearchContactItem::set_has__weiboflag() {
  _has_bits_[0] |= 0x00800000u;
}
inline void SearchContactItem::clear_has__weiboflag() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void SearchContactItem::clear__weiboflag() {
  _weiboflag_ = 0u;
  clear_has__weiboflag();
}
inline ::google::protobuf::uint32 SearchContactItem::_weiboflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._WeiboFlag)
  return _weiboflag_;
}
inline void SearchContactItem::set__weiboflag(::google::protobuf::uint32 value) {
  set_has__weiboflag();
  _weiboflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._WeiboFlag)
}

// optional int32 _AlbumStyle = 17;
inline bool SearchContactItem::has__albumstyle() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void SearchContactItem::set_has__albumstyle() {
  _has_bits_[0] |= 0x01000000u;
}
inline void SearchContactItem::clear_has__albumstyle() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void SearchContactItem::clear__albumstyle() {
  _albumstyle_ = 0;
  clear_has__albumstyle();
}
inline ::google::protobuf::int32 SearchContactItem::_albumstyle() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AlbumStyle)
  return _albumstyle_;
}
inline void SearchContactItem::set__albumstyle(::google::protobuf::int32 value) {
  set_has__albumstyle();
  _albumstyle_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AlbumStyle)
}

// optional int32 _AlbumFlag = 18;
inline bool SearchContactItem::has__albumflag() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void SearchContactItem::set_has__albumflag() {
  _has_bits_[0] |= 0x02000000u;
}
inline void SearchContactItem::clear_has__albumflag() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void SearchContactItem::clear__albumflag() {
  _albumflag_ = 0;
  clear_has__albumflag();
}
inline ::google::protobuf::int32 SearchContactItem::_albumflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AlbumFlag)
  return _albumflag_;
}
inline void SearchContactItem::set__albumflag(::google::protobuf::int32 value) {
  set_has__albumflag();
  _albumflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AlbumFlag)
}

// optional string _AlbumBGImgID = 19;
inline bool SearchContactItem::has__albumbgimgid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SearchContactItem::set_has__albumbgimgid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SearchContactItem::clear_has__albumbgimgid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SearchContactItem::clear__albumbgimgid() {
  _albumbgimgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__albumbgimgid();
}
inline const ::std::string& SearchContactItem::_albumbgimgid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
  return _albumbgimgid_.GetNoArena();
}
inline void SearchContactItem::set__albumbgimgid(const ::std::string& value) {
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
#if LANG_CXX11
inline void SearchContactItem::set__albumbgimgid(::std::string&& value) {
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
#endif
inline void SearchContactItem::set__albumbgimgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
inline void SearchContactItem::set__albumbgimgid(const char* value, size_t size) {
  set_has__albumbgimgid();
  _albumbgimgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}
inline ::std::string* SearchContactItem::mutable__albumbgimgid() {
  set_has__albumbgimgid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
  return _albumbgimgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__albumbgimgid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
  clear_has__albumbgimgid();
  return _albumbgimgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__albumbgimgid(::std::string* _albumbgimgid) {
  if (_albumbgimgid != NULL) {
    set_has__albumbgimgid();
  } else {
    clear_has__albumbgimgid();
  }
  _albumbgimgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _albumbgimgid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._AlbumBGImgID)
}

// optional .MMPro.micromsg.SnsUserInfo _SnsUserInfo = 20;
inline bool SearchContactItem::has__snsuserinfo() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void SearchContactItem::set_has__snsuserinfo() {
  _has_bits_[0] |= 0x00040000u;
}
inline void SearchContactItem::clear_has__snsuserinfo() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void SearchContactItem::clear__snsuserinfo() {
  if (_snsuserinfo_ != NULL) _snsuserinfo_->::MMPro::micromsg::SnsUserInfo::Clear();
  clear_has__snsuserinfo();
}
inline const ::MMPro::micromsg::SnsUserInfo& SearchContactItem::_snsuserinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._SnsUserInfo)
  return _snsuserinfo_ != NULL ? *_snsuserinfo_
                         : *::MMPro::micromsg::SnsUserInfo::internal_default_instance();
}
inline ::MMPro::micromsg::SnsUserInfo* SearchContactItem::mutable__snsuserinfo() {
  set_has__snsuserinfo();
  if (_snsuserinfo_ == NULL) {
    _snsuserinfo_ = new ::MMPro::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._SnsUserInfo)
  return _snsuserinfo_;
}
inline ::MMPro::micromsg::SnsUserInfo* SearchContactItem::release__snsuserinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._SnsUserInfo)
  clear_has__snsuserinfo();
  ::MMPro::micromsg::SnsUserInfo* temp = _snsuserinfo_;
  _snsuserinfo_ = NULL;
  return temp;
}
inline void SearchContactItem::set_allocated__snsuserinfo(::MMPro::micromsg::SnsUserInfo* _snsuserinfo) {
  delete _snsuserinfo_;
  _snsuserinfo_ = _snsuserinfo;
  if (_snsuserinfo) {
    set_has__snsuserinfo();
  } else {
    clear_has__snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._SnsUserInfo)
}

// optional string _Country = 21;
inline bool SearchContactItem::has__country() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SearchContactItem::set_has__country() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SearchContactItem::clear_has__country() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SearchContactItem::clear__country() {
  _country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__country();
}
inline const ::std::string& SearchContactItem::_country() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._Country)
  return _country_.GetNoArena();
}
inline void SearchContactItem::set__country(const ::std::string& value) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._Country)
}
#if LANG_CXX11
inline void SearchContactItem::set__country(::std::string&& value) {
  set_has__country();
  _country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._Country)
}
#endif
inline void SearchContactItem::set__country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._Country)
}
inline void SearchContactItem::set__country(const char* value, size_t size) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._Country)
}
inline ::std::string* SearchContactItem::mutable__country() {
  set_has__country();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._Country)
  return _country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__country() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._Country)
  clear_has__country();
  return _country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__country(::std::string* _country) {
  if (_country != NULL) {
    set_has__country();
  } else {
    clear_has__country();
  }
  _country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _country);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._Country)
}

// optional string _MyBrandList = 22;
inline bool SearchContactItem::has__mybrandlist() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SearchContactItem::set_has__mybrandlist() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SearchContactItem::clear_has__mybrandlist() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SearchContactItem::clear__mybrandlist() {
  _mybrandlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__mybrandlist();
}
inline const ::std::string& SearchContactItem::_mybrandlist() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._MyBrandList)
  return _mybrandlist_.GetNoArena();
}
inline void SearchContactItem::set__mybrandlist(const ::std::string& value) {
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._MyBrandList)
}
#if LANG_CXX11
inline void SearchContactItem::set__mybrandlist(::std::string&& value) {
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._MyBrandList)
}
#endif
inline void SearchContactItem::set__mybrandlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._MyBrandList)
}
inline void SearchContactItem::set__mybrandlist(const char* value, size_t size) {
  set_has__mybrandlist();
  _mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._MyBrandList)
}
inline ::std::string* SearchContactItem::mutable__mybrandlist() {
  set_has__mybrandlist();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._MyBrandList)
  return _mybrandlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__mybrandlist() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._MyBrandList)
  clear_has__mybrandlist();
  return _mybrandlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__mybrandlist(::std::string* _mybrandlist) {
  if (_mybrandlist != NULL) {
    set_has__mybrandlist();
  } else {
    clear_has__mybrandlist();
  }
  _mybrandlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _mybrandlist);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._MyBrandList)
}

// optional .MMPro.micromsg.CustomizedInfo _CustomizedInfo = 23;
inline bool SearchContactItem::has__customizedinfo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void SearchContactItem::set_has__customizedinfo() {
  _has_bits_[0] |= 0x00080000u;
}
inline void SearchContactItem::clear_has__customizedinfo() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void SearchContactItem::clear__customizedinfo() {
  if (_customizedinfo_ != NULL) _customizedinfo_->::MMPro::micromsg::CustomizedInfo::Clear();
  clear_has__customizedinfo();
}
inline const ::MMPro::micromsg::CustomizedInfo& SearchContactItem::_customizedinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._CustomizedInfo)
  return _customizedinfo_ != NULL ? *_customizedinfo_
                         : *::MMPro::micromsg::CustomizedInfo::internal_default_instance();
}
inline ::MMPro::micromsg::CustomizedInfo* SearchContactItem::mutable__customizedinfo() {
  set_has__customizedinfo();
  if (_customizedinfo_ == NULL) {
    _customizedinfo_ = new ::MMPro::micromsg::CustomizedInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._CustomizedInfo)
  return _customizedinfo_;
}
inline ::MMPro::micromsg::CustomizedInfo* SearchContactItem::release__customizedinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._CustomizedInfo)
  clear_has__customizedinfo();
  ::MMPro::micromsg::CustomizedInfo* temp = _customizedinfo_;
  _customizedinfo_ = NULL;
  return temp;
}
inline void SearchContactItem::set_allocated__customizedinfo(::MMPro::micromsg::CustomizedInfo* _customizedinfo) {
  delete _customizedinfo_;
  _customizedinfo_ = _customizedinfo;
  if (_customizedinfo) {
    set_has__customizedinfo();
  } else {
    clear_has__customizedinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._CustomizedInfo)
}

// optional string _BigHeadImgUrl = 24;
inline bool SearchContactItem::has__bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SearchContactItem::set_has__bigheadimgurl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SearchContactItem::clear_has__bigheadimgurl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SearchContactItem::clear__bigheadimgurl() {
  _bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__bigheadimgurl();
}
inline const ::std::string& SearchContactItem::_bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
  return _bigheadimgurl_.GetNoArena();
}
inline void SearchContactItem::set__bigheadimgurl(const ::std::string& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
#if LANG_CXX11
inline void SearchContactItem::set__bigheadimgurl(::std::string&& value) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
#endif
inline void SearchContactItem::set__bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
inline void SearchContactItem::set__bigheadimgurl(const char* value, size_t size) {
  set_has__bigheadimgurl();
  _bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}
inline ::std::string* SearchContactItem::mutable__bigheadimgurl() {
  set_has__bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
  return _bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__bigheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
  clear_has__bigheadimgurl();
  return _bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__bigheadimgurl(::std::string* _bigheadimgurl) {
  if (_bigheadimgurl != NULL) {
    set_has__bigheadimgurl();
  } else {
    clear_has__bigheadimgurl();
  }
  _bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._BigHeadImgUrl)
}

// optional string _SmallHeadImgUrl = 25;
inline bool SearchContactItem::has__smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SearchContactItem::set_has__smallheadimgurl() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SearchContactItem::clear_has__smallheadimgurl() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SearchContactItem::clear__smallheadimgurl() {
  _smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__smallheadimgurl();
}
inline const ::std::string& SearchContactItem::_smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
  return _smallheadimgurl_.GetNoArena();
}
inline void SearchContactItem::set__smallheadimgurl(const ::std::string& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
#if LANG_CXX11
inline void SearchContactItem::set__smallheadimgurl(::std::string&& value) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
#endif
inline void SearchContactItem::set__smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
inline void SearchContactItem::set__smallheadimgurl(const char* value, size_t size) {
  set_has__smallheadimgurl();
  _smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}
inline ::std::string* SearchContactItem::mutable__smallheadimgurl() {
  set_has__smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
  return _smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__smallheadimgurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
  clear_has__smallheadimgurl();
  return _smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__smallheadimgurl(::std::string* _smallheadimgurl) {
  if (_smallheadimgurl != NULL) {
    set_has__smallheadimgurl();
  } else {
    clear_has__smallheadimgurl();
  }
  _smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._SmallHeadImgUrl)
}

// optional string _AntispamTicket = 26;
inline bool SearchContactItem::has__antispamticket() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SearchContactItem::set_has__antispamticket() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SearchContactItem::clear_has__antispamticket() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SearchContactItem::clear__antispamticket() {
  _antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__antispamticket();
}
inline const ::std::string& SearchContactItem::_antispamticket() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._AntispamTicket)
  return _antispamticket_.GetNoArena();
}
inline void SearchContactItem::set__antispamticket(const ::std::string& value) {
  set_has__antispamticket();
  _antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
#if LANG_CXX11
inline void SearchContactItem::set__antispamticket(::std::string&& value) {
  set_has__antispamticket();
  _antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
#endif
inline void SearchContactItem::set__antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__antispamticket();
  _antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
inline void SearchContactItem::set__antispamticket(const char* value, size_t size) {
  set_has__antispamticket();
  _antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SearchContactItem._AntispamTicket)
}
inline ::std::string* SearchContactItem::mutable__antispamticket() {
  set_has__antispamticket();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SearchContactItem._AntispamTicket)
  return _antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchContactItem::release__antispamticket() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SearchContactItem._AntispamTicket)
  clear_has__antispamticket();
  return _antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchContactItem::set_allocated__antispamticket(::std::string* _antispamticket) {
  if (_antispamticket != NULL) {
    set_has__antispamticket();
  } else {
    clear_has__antispamticket();
  }
  _antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _antispamticket);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SearchContactItem._AntispamTicket)
}

// optional uint32 _MatchType = 27;
inline bool SearchContactItem::has__matchtype() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void SearchContactItem::set_has__matchtype() {
  _has_bits_[0] |= 0x04000000u;
}
inline void SearchContactItem::clear_has__matchtype() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void SearchContactItem::clear__matchtype() {
  _matchtype_ = 0u;
  clear_has__matchtype();
}
inline ::google::protobuf::uint32 SearchContactItem::_matchtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SearchContactItem._MatchType)
  return _matchtype_;
}
inline void SearchContactItem::set__matchtype(::google::protobuf::uint32 value) {
  set_has__matchtype();
  _matchtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SearchContactItem._MatchType)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SearchContactItem_2eproto__INCLUDED
