// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SnsTimeLineResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SnsTimeLineResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class SnsTimeLineResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SnsTimeLineResponse> {
} _SnsTimeLineResponse_default_instance_;

namespace protobuf_SnsTimeLineResponse_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _firstpagemd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _objectcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _objectlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _newrequesttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _objectcountforsamemd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _controlflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _serverconfig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _advertisecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _advertiselist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SnsTimeLineResponse, _session_),
  1,
  0,
  4,
  ~0u,
  5,
  6,
  7,
  2,
  8,
  ~0u,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 16, sizeof(SnsTimeLineResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SnsTimeLineResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SnsTimeLineResponse.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _SnsTimeLineResponse_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SnsObject_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SnsServerConfig_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_AdvertiseObject_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::InitDefaults();
  _SnsTimeLineResponse_default_instance_.DefaultConstruct();
  _SnsTimeLineResponse_default_instance_.get_mutable()->_baseresponse_ = const_cast< ::MMPro::micromsg::BaseResponse*>(
      ::MMPro::micromsg::BaseResponse::internal_default_instance());
  _SnsTimeLineResponse_default_instance_.get_mutable()->_serverconfig_ = const_cast< ::MMPro::micromsg::SnsServerConfig*>(
      ::MMPro::micromsg::SnsServerConfig::internal_default_instance());
  _SnsTimeLineResponse_default_instance_.get_mutable()->_session_ = const_cast< ::MMPro::micromsg::SKBuiltinBuffer_t*>(
      ::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031SnsTimeLineResponse.proto\022\016MMPro.micro"
      "msg\032\022BaseResponse.proto\032\017SnsObject.proto"
      "\032\025SnsServerConfig.proto\032\025AdvertiseObject"
      ".proto\032\027SKBuiltinBuffer_t.proto\"\265\003\n\023SnsT"
      "imeLineResponse\0223\n\r_BaseResponse\030\001 \002(\0132\034"
      ".MMPro.micromsg.BaseResponse\022\025\n\r_FirstPa"
      "geMd5\030\002 \001(\t\022\024\n\014_ObjectCount\030\003 \002(\r\022.\n\013_Ob"
      "jectList\030\004 \003(\0132\031.MMPro.micromsg.SnsObjec"
      "t\022\027\n\017_NewRequestTime\030\005 \001(\r\022\036\n\026_ObjectCou"
      "ntForSameMd5\030\006 \001(\r\022\024\n\014_ControlFlag\030\007 \001(\r"
      "\0226\n\r_ServerConfig\030\010 \001(\0132\037.MMPro.micromsg"
      ".SnsServerConfig\022\027\n\017_AdvertiseCount\030\t \001("
      "\r\0227\n\016_AdvertiseList\030\n \003(\0132\037.MMPro.microm"
      "sg.AdvertiseObject\0223\n\010_Session\030\013 \001(\0132!.M"
      "MPro.micromsg.SKBuiltinBuffer_t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 591);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SnsTimeLineResponse.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SnsObject_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SnsServerConfig_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_AdvertiseObject_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_SKBuiltinBuffer_5ft_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SnsTimeLineResponse_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnsTimeLineResponse::kBaseResponseFieldNumber;
const int SnsTimeLineResponse::kFirstPageMd5FieldNumber;
const int SnsTimeLineResponse::kObjectCountFieldNumber;
const int SnsTimeLineResponse::kObjectListFieldNumber;
const int SnsTimeLineResponse::kNewRequestTimeFieldNumber;
const int SnsTimeLineResponse::kObjectCountForSameMd5FieldNumber;
const int SnsTimeLineResponse::kControlFlagFieldNumber;
const int SnsTimeLineResponse::kServerConfigFieldNumber;
const int SnsTimeLineResponse::kAdvertiseCountFieldNumber;
const int SnsTimeLineResponse::kAdvertiseListFieldNumber;
const int SnsTimeLineResponse::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnsTimeLineResponse::SnsTimeLineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SnsTimeLineResponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.SnsTimeLineResponse)
}
SnsTimeLineResponse::SnsTimeLineResponse(const SnsTimeLineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _objectlist_(from._objectlist_),
      _advertiselist_(from._advertiselist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _firstpagemd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__firstpagemd5()) {
    _firstpagemd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._firstpagemd5_);
  }
  if (from.has__baseresponse()) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse(*from._baseresponse_);
  } else {
    _baseresponse_ = NULL;
  }
  if (from.has__serverconfig()) {
    _serverconfig_ = new ::MMPro::micromsg::SnsServerConfig(*from._serverconfig_);
  } else {
    _serverconfig_ = NULL;
  }
  if (from.has__session()) {
    _session_ = new ::MMPro::micromsg::SKBuiltinBuffer_t(*from._session_);
  } else {
    _session_ = NULL;
  }
  ::memcpy(&_objectcount_, &from._objectcount_,
    reinterpret_cast<char*>(&_advertisecount_) -
    reinterpret_cast<char*>(&_objectcount_) + sizeof(_advertisecount_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.SnsTimeLineResponse)
}

void SnsTimeLineResponse::SharedCtor() {
  _cached_size_ = 0;
  _firstpagemd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_baseresponse_, 0, reinterpret_cast<char*>(&_advertisecount_) -
    reinterpret_cast<char*>(&_baseresponse_) + sizeof(_advertisecount_));
}

SnsTimeLineResponse::~SnsTimeLineResponse() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.SnsTimeLineResponse)
  SharedDtor();
}

void SnsTimeLineResponse::SharedDtor() {
  _firstpagemd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete _serverconfig_;
  }
  if (this != internal_default_instance()) {
    delete _session_;
  }
}

void SnsTimeLineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnsTimeLineResponse::descriptor() {
  protobuf_SnsTimeLineResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SnsTimeLineResponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnsTimeLineResponse& SnsTimeLineResponse::default_instance() {
  protobuf_SnsTimeLineResponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

SnsTimeLineResponse* SnsTimeLineResponse::New(::google::protobuf::Arena* arena) const {
  SnsTimeLineResponse* n = new SnsTimeLineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnsTimeLineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.SnsTimeLineResponse)
  _objectlist_.Clear();
  _advertiselist_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has__firstpagemd5()) {
      GOOGLE_DCHECK(!_firstpagemd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_firstpagemd5_.UnsafeRawStringPointer())->clear();
    }
    if (has__baseresponse()) {
      GOOGLE_DCHECK(_baseresponse_ != NULL);
      _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
    }
    if (has__serverconfig()) {
      GOOGLE_DCHECK(_serverconfig_ != NULL);
      _serverconfig_->::MMPro::micromsg::SnsServerConfig::Clear();
    }
    if (has__session()) {
      GOOGLE_DCHECK(_session_ != NULL);
      _session_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&_objectcount_, 0, reinterpret_cast<char*>(&_controlflag_) -
      reinterpret_cast<char*>(&_objectcount_) + sizeof(_controlflag_));
  }
  _advertisecount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnsTimeLineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.SnsTimeLineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _FirstPageMd5 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__firstpagemd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_firstpagemd5().data(), this->_firstpagemd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _ObjectCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__objectcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_objectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.SnsObject _ObjectList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__objectlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _NewRequestTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__newrequesttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_newrequesttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ObjectCountForSameMd5 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has__objectcountforsamemd5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_objectcountforsamemd5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ControlFlag = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has__controlflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_controlflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.SnsServerConfig _ServerConfig = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__serverconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _AdvertiseCount = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has__advertisecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_advertisecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.AdvertiseObject _AdvertiseList = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__advertiselist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.SKBuiltinBuffer_t _Session = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.SnsTimeLineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.SnsTimeLineResponse)
  return false;
#undef DO_
}

void SnsTimeLineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.SnsTimeLineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_baseresponse_, output);
  }

  // optional string _FirstPageMd5 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_firstpagemd5().data(), this->_firstpagemd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_firstpagemd5(), output);
  }

  // required uint32 _ObjectCount = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_objectcount(), output);
  }

  // repeated .MMPro.micromsg.SnsObject _ObjectList = 4;
  for (unsigned int i = 0, n = this->_objectlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_objectlist(i), output);
  }

  // optional uint32 _NewRequestTime = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_newrequesttime(), output);
  }

  // optional uint32 _ObjectCountForSameMd5 = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_objectcountforsamemd5(), output);
  }

  // optional uint32 _ControlFlag = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->_controlflag(), output);
  }

  // optional .MMPro.micromsg.SnsServerConfig _ServerConfig = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->_serverconfig_, output);
  }

  // optional uint32 _AdvertiseCount = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->_advertisecount(), output);
  }

  // repeated .MMPro.micromsg.AdvertiseObject _AdvertiseList = 10;
  for (unsigned int i = 0, n = this->_advertiselist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_advertiselist(i), output);
  }

  // optional .MMPro.micromsg.SKBuiltinBuffer_t _Session = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->_session_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.SnsTimeLineResponse)
}

::google::protobuf::uint8* SnsTimeLineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.SnsTimeLineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_baseresponse_, deterministic, target);
  }

  // optional string _FirstPageMd5 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_firstpagemd5().data(), this->_firstpagemd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_firstpagemd5(), target);
  }

  // required uint32 _ObjectCount = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_objectcount(), target);
  }

  // repeated .MMPro.micromsg.SnsObject _ObjectList = 4;
  for (unsigned int i = 0, n = this->_objectlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->_objectlist(i), deterministic, target);
  }

  // optional uint32 _NewRequestTime = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_newrequesttime(), target);
  }

  // optional uint32 _ObjectCountForSameMd5 = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->_objectcountforsamemd5(), target);
  }

  // optional uint32 _ControlFlag = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->_controlflag(), target);
  }

  // optional .MMPro.micromsg.SnsServerConfig _ServerConfig = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->_serverconfig_, deterministic, target);
  }

  // optional uint32 _AdvertiseCount = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->_advertisecount(), target);
  }

  // repeated .MMPro.micromsg.AdvertiseObject _AdvertiseList = 10;
  for (unsigned int i = 0, n = this->_advertiselist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->_advertiselist(i), deterministic, target);
  }

  // optional .MMPro.micromsg.SKBuiltinBuffer_t _Session = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->_session_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.SnsTimeLineResponse)
  return target;
}

size_t SnsTimeLineResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MMPro.micromsg.SnsTimeLineResponse)
  size_t total_size = 0;

  if (has__baseresponse()) {
    // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseresponse_);
  }

  if (has__objectcount()) {
    // required uint32 _ObjectCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_objectcount());
  }

  return total_size;
}
size_t SnsTimeLineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.SnsTimeLineResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000012) ^ 0x00000012) == 0) {  // All required fields are present.
    // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseresponse_);

    // required uint32 _ObjectCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_objectcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .MMPro.micromsg.SnsObject _ObjectList = 4;
  {
    unsigned int count = this->_objectlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_objectlist(i));
    }
  }

  // repeated .MMPro.micromsg.AdvertiseObject _AdvertiseList = 10;
  {
    unsigned int count = this->_advertiselist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_advertiselist(i));
    }
  }

  // optional string _FirstPageMd5 = 2;
  if (has__firstpagemd5()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_firstpagemd5());
  }

  if (_has_bits_[0 / 32] & 12u) {
    // optional .MMPro.micromsg.SnsServerConfig _ServerConfig = 8;
    if (has__serverconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_serverconfig_);
    }

    // optional .MMPro.micromsg.SKBuiltinBuffer_t _Session = 11;
    if (has__session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_session_);
    }

  }
  if (_has_bits_[0 / 32] & 224u) {
    // optional uint32 _NewRequestTime = 5;
    if (has__newrequesttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_newrequesttime());
    }

    // optional uint32 _ObjectCountForSameMd5 = 6;
    if (has__objectcountforsamemd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_objectcountforsamemd5());
    }

    // optional uint32 _ControlFlag = 7;
    if (has__controlflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_controlflag());
    }

  }
  // optional uint32 _AdvertiseCount = 9;
  if (has__advertisecount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_advertisecount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnsTimeLineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.SnsTimeLineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SnsTimeLineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnsTimeLineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.SnsTimeLineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.SnsTimeLineResponse)
    MergeFrom(*source);
  }
}

void SnsTimeLineResponse::MergeFrom(const SnsTimeLineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.SnsTimeLineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _objectlist_.MergeFrom(from._objectlist_);
  _advertiselist_.MergeFrom(from._advertiselist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__firstpagemd5();
      _firstpagemd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._firstpagemd5_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable__baseresponse()->::MMPro::micromsg::BaseResponse::MergeFrom(from._baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable__serverconfig()->::MMPro::micromsg::SnsServerConfig::MergeFrom(from._serverconfig());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable__session()->::MMPro::micromsg::SKBuiltinBuffer_t::MergeFrom(from._session());
    }
    if (cached_has_bits & 0x00000010u) {
      _objectcount_ = from._objectcount_;
    }
    if (cached_has_bits & 0x00000020u) {
      _newrequesttime_ = from._newrequesttime_;
    }
    if (cached_has_bits & 0x00000040u) {
      _objectcountforsamemd5_ = from._objectcountforsamemd5_;
    }
    if (cached_has_bits & 0x00000080u) {
      _controlflag_ = from._controlflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set__advertisecount(from._advertisecount());
  }
}

void SnsTimeLineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.SnsTimeLineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnsTimeLineResponse::CopyFrom(const SnsTimeLineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.SnsTimeLineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnsTimeLineResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000012) != 0x00000012) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->_objectlist())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->_advertiselist())) return false;
  if (has__baseresponse()) {
    if (!this->_baseresponse_->IsInitialized()) return false;
  }
  if (has__session()) {
    if (!this->_session_->IsInitialized()) return false;
  }
  return true;
}

void SnsTimeLineResponse::Swap(SnsTimeLineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnsTimeLineResponse::InternalSwap(SnsTimeLineResponse* other) {
  _objectlist_.InternalSwap(&other->_objectlist_);
  _advertiselist_.InternalSwap(&other->_advertiselist_);
  _firstpagemd5_.Swap(&other->_firstpagemd5_);
  std::swap(_baseresponse_, other->_baseresponse_);
  std::swap(_serverconfig_, other->_serverconfig_);
  std::swap(_session_, other->_session_);
  std::swap(_objectcount_, other->_objectcount_);
  std::swap(_newrequesttime_, other->_newrequesttime_);
  std::swap(_objectcountforsamemd5_, other->_objectcountforsamemd5_);
  std::swap(_controlflag_, other->_controlflag_);
  std::swap(_advertisecount_, other->_advertisecount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnsTimeLineResponse::GetMetadata() const {
  protobuf_SnsTimeLineResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SnsTimeLineResponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SnsTimeLineResponse

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
bool SnsTimeLineResponse::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SnsTimeLineResponse::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void SnsTimeLineResponse::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void SnsTimeLineResponse::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
const ::MMPro::micromsg::BaseResponse& SnsTimeLineResponse::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
::MMPro::micromsg::BaseResponse* SnsTimeLineResponse::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsTimeLineResponse._BaseResponse)
  return _baseresponse_;
}
::MMPro::micromsg::BaseResponse* SnsTimeLineResponse::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsTimeLineResponse._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
void SnsTimeLineResponse::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsTimeLineResponse._BaseResponse)
}

// optional string _FirstPageMd5 = 2;
bool SnsTimeLineResponse::has__firstpagemd5() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SnsTimeLineResponse::set_has__firstpagemd5() {
  _has_bits_[0] |= 0x00000001u;
}
void SnsTimeLineResponse::clear_has__firstpagemd5() {
  _has_bits_[0] &= ~0x00000001u;
}
void SnsTimeLineResponse::clear__firstpagemd5() {
  _firstpagemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__firstpagemd5();
}
const ::std::string& SnsTimeLineResponse::_firstpagemd5() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
  return _firstpagemd5_.GetNoArena();
}
void SnsTimeLineResponse::set__firstpagemd5(const ::std::string& value) {
  set_has__firstpagemd5();
  _firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
}
#if LANG_CXX11
void SnsTimeLineResponse::set__firstpagemd5(::std::string&& value) {
  set_has__firstpagemd5();
  _firstpagemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
}
#endif
void SnsTimeLineResponse::set__firstpagemd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__firstpagemd5();
  _firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
}
void SnsTimeLineResponse::set__firstpagemd5(const char* value, size_t size) {
  set_has__firstpagemd5();
  _firstpagemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
}
::std::string* SnsTimeLineResponse::mutable__firstpagemd5() {
  set_has__firstpagemd5();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
  return _firstpagemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SnsTimeLineResponse::release__firstpagemd5() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
  clear_has__firstpagemd5();
  return _firstpagemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SnsTimeLineResponse::set_allocated__firstpagemd5(::std::string* _firstpagemd5) {
  if (_firstpagemd5 != NULL) {
    set_has__firstpagemd5();
  } else {
    clear_has__firstpagemd5();
  }
  _firstpagemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _firstpagemd5);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsTimeLineResponse._FirstPageMd5)
}

// required uint32 _ObjectCount = 3;
bool SnsTimeLineResponse::has__objectcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SnsTimeLineResponse::set_has__objectcount() {
  _has_bits_[0] |= 0x00000010u;
}
void SnsTimeLineResponse::clear_has__objectcount() {
  _has_bits_[0] &= ~0x00000010u;
}
void SnsTimeLineResponse::clear__objectcount() {
  _objectcount_ = 0u;
  clear_has__objectcount();
}
::google::protobuf::uint32 SnsTimeLineResponse::_objectcount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._ObjectCount)
  return _objectcount_;
}
void SnsTimeLineResponse::set__objectcount(::google::protobuf::uint32 value) {
  set_has__objectcount();
  _objectcount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsTimeLineResponse._ObjectCount)
}

// repeated .MMPro.micromsg.SnsObject _ObjectList = 4;
int SnsTimeLineResponse::_objectlist_size() const {
  return _objectlist_.size();
}
void SnsTimeLineResponse::clear__objectlist() {
  _objectlist_.Clear();
}
const ::MMPro::micromsg::SnsObject& SnsTimeLineResponse::_objectlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._ObjectList)
  return _objectlist_.Get(index);
}
::MMPro::micromsg::SnsObject* SnsTimeLineResponse::mutable__objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsTimeLineResponse._ObjectList)
  return _objectlist_.Mutable(index);
}
::MMPro::micromsg::SnsObject* SnsTimeLineResponse::add__objectlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsTimeLineResponse._ObjectList)
  return _objectlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsObject >*
SnsTimeLineResponse::mutable__objectlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsTimeLineResponse._ObjectList)
  return &_objectlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::SnsObject >&
SnsTimeLineResponse::_objectlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsTimeLineResponse._ObjectList)
  return _objectlist_;
}

// optional uint32 _NewRequestTime = 5;
bool SnsTimeLineResponse::has__newrequesttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SnsTimeLineResponse::set_has__newrequesttime() {
  _has_bits_[0] |= 0x00000020u;
}
void SnsTimeLineResponse::clear_has__newrequesttime() {
  _has_bits_[0] &= ~0x00000020u;
}
void SnsTimeLineResponse::clear__newrequesttime() {
  _newrequesttime_ = 0u;
  clear_has__newrequesttime();
}
::google::protobuf::uint32 SnsTimeLineResponse::_newrequesttime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._NewRequestTime)
  return _newrequesttime_;
}
void SnsTimeLineResponse::set__newrequesttime(::google::protobuf::uint32 value) {
  set_has__newrequesttime();
  _newrequesttime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsTimeLineResponse._NewRequestTime)
}

// optional uint32 _ObjectCountForSameMd5 = 6;
bool SnsTimeLineResponse::has__objectcountforsamemd5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SnsTimeLineResponse::set_has__objectcountforsamemd5() {
  _has_bits_[0] |= 0x00000040u;
}
void SnsTimeLineResponse::clear_has__objectcountforsamemd5() {
  _has_bits_[0] &= ~0x00000040u;
}
void SnsTimeLineResponse::clear__objectcountforsamemd5() {
  _objectcountforsamemd5_ = 0u;
  clear_has__objectcountforsamemd5();
}
::google::protobuf::uint32 SnsTimeLineResponse::_objectcountforsamemd5() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._ObjectCountForSameMd5)
  return _objectcountforsamemd5_;
}
void SnsTimeLineResponse::set__objectcountforsamemd5(::google::protobuf::uint32 value) {
  set_has__objectcountforsamemd5();
  _objectcountforsamemd5_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsTimeLineResponse._ObjectCountForSameMd5)
}

// optional uint32 _ControlFlag = 7;
bool SnsTimeLineResponse::has__controlflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SnsTimeLineResponse::set_has__controlflag() {
  _has_bits_[0] |= 0x00000080u;
}
void SnsTimeLineResponse::clear_has__controlflag() {
  _has_bits_[0] &= ~0x00000080u;
}
void SnsTimeLineResponse::clear__controlflag() {
  _controlflag_ = 0u;
  clear_has__controlflag();
}
::google::protobuf::uint32 SnsTimeLineResponse::_controlflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._ControlFlag)
  return _controlflag_;
}
void SnsTimeLineResponse::set__controlflag(::google::protobuf::uint32 value) {
  set_has__controlflag();
  _controlflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsTimeLineResponse._ControlFlag)
}

// optional .MMPro.micromsg.SnsServerConfig _ServerConfig = 8;
bool SnsTimeLineResponse::has__serverconfig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SnsTimeLineResponse::set_has__serverconfig() {
  _has_bits_[0] |= 0x00000004u;
}
void SnsTimeLineResponse::clear_has__serverconfig() {
  _has_bits_[0] &= ~0x00000004u;
}
void SnsTimeLineResponse::clear__serverconfig() {
  if (_serverconfig_ != NULL) _serverconfig_->::MMPro::micromsg::SnsServerConfig::Clear();
  clear_has__serverconfig();
}
const ::MMPro::micromsg::SnsServerConfig& SnsTimeLineResponse::_serverconfig() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._ServerConfig)
  return _serverconfig_ != NULL ? *_serverconfig_
                         : *::MMPro::micromsg::SnsServerConfig::internal_default_instance();
}
::MMPro::micromsg::SnsServerConfig* SnsTimeLineResponse::mutable__serverconfig() {
  set_has__serverconfig();
  if (_serverconfig_ == NULL) {
    _serverconfig_ = new ::MMPro::micromsg::SnsServerConfig;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsTimeLineResponse._ServerConfig)
  return _serverconfig_;
}
::MMPro::micromsg::SnsServerConfig* SnsTimeLineResponse::release__serverconfig() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsTimeLineResponse._ServerConfig)
  clear_has__serverconfig();
  ::MMPro::micromsg::SnsServerConfig* temp = _serverconfig_;
  _serverconfig_ = NULL;
  return temp;
}
void SnsTimeLineResponse::set_allocated__serverconfig(::MMPro::micromsg::SnsServerConfig* _serverconfig) {
  delete _serverconfig_;
  _serverconfig_ = _serverconfig;
  if (_serverconfig) {
    set_has__serverconfig();
  } else {
    clear_has__serverconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsTimeLineResponse._ServerConfig)
}

// optional uint32 _AdvertiseCount = 9;
bool SnsTimeLineResponse::has__advertisecount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SnsTimeLineResponse::set_has__advertisecount() {
  _has_bits_[0] |= 0x00000100u;
}
void SnsTimeLineResponse::clear_has__advertisecount() {
  _has_bits_[0] &= ~0x00000100u;
}
void SnsTimeLineResponse::clear__advertisecount() {
  _advertisecount_ = 0u;
  clear_has__advertisecount();
}
::google::protobuf::uint32 SnsTimeLineResponse::_advertisecount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._AdvertiseCount)
  return _advertisecount_;
}
void SnsTimeLineResponse::set__advertisecount(::google::protobuf::uint32 value) {
  set_has__advertisecount();
  _advertisecount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.SnsTimeLineResponse._AdvertiseCount)
}

// repeated .MMPro.micromsg.AdvertiseObject _AdvertiseList = 10;
int SnsTimeLineResponse::_advertiselist_size() const {
  return _advertiselist_.size();
}
void SnsTimeLineResponse::clear__advertiselist() {
  _advertiselist_.Clear();
}
const ::MMPro::micromsg::AdvertiseObject& SnsTimeLineResponse::_advertiselist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._AdvertiseList)
  return _advertiselist_.Get(index);
}
::MMPro::micromsg::AdvertiseObject* SnsTimeLineResponse::mutable__advertiselist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsTimeLineResponse._AdvertiseList)
  return _advertiselist_.Mutable(index);
}
::MMPro::micromsg::AdvertiseObject* SnsTimeLineResponse::add__advertiselist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.SnsTimeLineResponse._AdvertiseList)
  return _advertiselist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::AdvertiseObject >*
SnsTimeLineResponse::mutable__advertiselist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.SnsTimeLineResponse._AdvertiseList)
  return &_advertiselist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::AdvertiseObject >&
SnsTimeLineResponse::_advertiselist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.SnsTimeLineResponse._AdvertiseList)
  return _advertiselist_;
}

// optional .MMPro.micromsg.SKBuiltinBuffer_t _Session = 11;
bool SnsTimeLineResponse::has__session() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SnsTimeLineResponse::set_has__session() {
  _has_bits_[0] |= 0x00000008u;
}
void SnsTimeLineResponse::clear_has__session() {
  _has_bits_[0] &= ~0x00000008u;
}
void SnsTimeLineResponse::clear__session() {
  if (_session_ != NULL) _session_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__session();
}
const ::MMPro::micromsg::SKBuiltinBuffer_t& SnsTimeLineResponse::_session() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.SnsTimeLineResponse._Session)
  return _session_ != NULL ? *_session_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinBuffer_t* SnsTimeLineResponse::mutable__session() {
  set_has__session();
  if (_session_ == NULL) {
    _session_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.SnsTimeLineResponse._Session)
  return _session_;
}
::MMPro::micromsg::SKBuiltinBuffer_t* SnsTimeLineResponse::release__session() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.SnsTimeLineResponse._Session)
  clear_has__session();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _session_;
  _session_ = NULL;
  return temp;
}
void SnsTimeLineResponse::set_allocated__session(::MMPro::micromsg::SKBuiltinBuffer_t* _session) {
  delete _session_;
  _session_ = _session;
  if (_session) {
    set_has__session();
  } else {
    clear_has__session();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.SnsTimeLineResponse._Session)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
