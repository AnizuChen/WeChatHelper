// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetChatroomMemberDetailResponse.proto

#ifndef PROTOBUF_GetChatroomMemberDetailResponse_2eproto__INCLUDED
#define PROTOBUF_GetChatroomMemberDetailResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "BaseResponse.pb.h"
#include "ChatRoomMemberData.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class GetChatroomMemberDetailResponse;
class GetChatroomMemberDetailResponseDefaultTypeInternal;
extern GetChatroomMemberDetailResponseDefaultTypeInternal _GetChatroomMemberDetailResponse_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_GetChatroomMemberDetailResponse_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GetChatroomMemberDetailResponse_2eproto

// ===================================================================

class GetChatroomMemberDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.GetChatroomMemberDetailResponse) */ {
 public:
  GetChatroomMemberDetailResponse();
  virtual ~GetChatroomMemberDetailResponse();

  GetChatroomMemberDetailResponse(const GetChatroomMemberDetailResponse& from);

  inline GetChatroomMemberDetailResponse& operator=(const GetChatroomMemberDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChatroomMemberDetailResponse& default_instance();

  static inline const GetChatroomMemberDetailResponse* internal_default_instance() {
    return reinterpret_cast<const GetChatroomMemberDetailResponse*>(
               &_GetChatroomMemberDetailResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetChatroomMemberDetailResponse* other);

  // implements Message ----------------------------------------------

  inline GetChatroomMemberDetailResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetChatroomMemberDetailResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetChatroomMemberDetailResponse& from);
  void MergeFrom(const GetChatroomMemberDetailResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetChatroomMemberDetailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _ChatroomUserName = 2;
  bool has__chatroomusername() const;
  void clear__chatroomusername();
  static const int kChatroomUserNameFieldNumber = 2;
  const ::std::string& _chatroomusername() const;
  void set__chatroomusername(const ::std::string& value);
  #if LANG_CXX11
  void set__chatroomusername(::std::string&& value);
  #endif
  void set__chatroomusername(const char* value);
  void set__chatroomusername(const char* value, size_t size);
  ::std::string* mutable__chatroomusername();
  ::std::string* release__chatroomusername();
  void set_allocated__chatroomusername(::std::string* _chatroomusername);

  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  bool has__baseresponse() const;
  void clear__baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::MMPro::micromsg::BaseResponse& _baseresponse() const;
  ::MMPro::micromsg::BaseResponse* mutable__baseresponse();
  ::MMPro::micromsg::BaseResponse* release__baseresponse();
  void set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse);

  // required .MMPro.micromsg.ChatRoomMemberData _NewChatroomData = 4;
  bool has__newchatroomdata() const;
  void clear__newchatroomdata();
  static const int kNewChatroomDataFieldNumber = 4;
  const ::MMPro::micromsg::ChatRoomMemberData& _newchatroomdata() const;
  ::MMPro::micromsg::ChatRoomMemberData* mutable__newchatroomdata();
  ::MMPro::micromsg::ChatRoomMemberData* release__newchatroomdata();
  void set_allocated__newchatroomdata(::MMPro::micromsg::ChatRoomMemberData* _newchatroomdata);

  // required uint32 _ServerVersion = 3;
  bool has__serverversion() const;
  void clear__serverversion();
  static const int kServerVersionFieldNumber = 3;
  ::google::protobuf::uint32 _serverversion() const;
  void set__serverversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.GetChatroomMemberDetailResponse)
 private:
  void set_has__baseresponse();
  void clear_has__baseresponse();
  void set_has__chatroomusername();
  void clear_has__chatroomusername();
  void set_has__serverversion();
  void clear_has__serverversion();
  void set_has__newchatroomdata();
  void clear_has__newchatroomdata();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _chatroomusername_;
  ::MMPro::micromsg::BaseResponse* _baseresponse_;
  ::MMPro::micromsg::ChatRoomMemberData* _newchatroomdata_;
  ::google::protobuf::uint32 _serverversion_;
  friend struct protobuf_GetChatroomMemberDetailResponse_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetChatroomMemberDetailResponse

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
inline bool GetChatroomMemberDetailResponse::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetChatroomMemberDetailResponse::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetChatroomMemberDetailResponse::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetChatroomMemberDetailResponse::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
inline const ::MMPro::micromsg::BaseResponse& GetChatroomMemberDetailResponse::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.GetChatroomMemberDetailResponse._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
inline ::MMPro::micromsg::BaseResponse* GetChatroomMemberDetailResponse::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.GetChatroomMemberDetailResponse._BaseResponse)
  return _baseresponse_;
}
inline ::MMPro::micromsg::BaseResponse* GetChatroomMemberDetailResponse::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.GetChatroomMemberDetailResponse._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
inline void GetChatroomMemberDetailResponse::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.GetChatroomMemberDetailResponse._BaseResponse)
}

// optional string _ChatroomUserName = 2;
inline bool GetChatroomMemberDetailResponse::has__chatroomusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetChatroomMemberDetailResponse::set_has__chatroomusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetChatroomMemberDetailResponse::clear_has__chatroomusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetChatroomMemberDetailResponse::clear__chatroomusername() {
  _chatroomusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__chatroomusername();
}
inline const ::std::string& GetChatroomMemberDetailResponse::_chatroomusername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
  return _chatroomusername_.GetNoArena();
}
inline void GetChatroomMemberDetailResponse::set__chatroomusername(const ::std::string& value) {
  set_has__chatroomusername();
  _chatroomusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
}
#if LANG_CXX11
inline void GetChatroomMemberDetailResponse::set__chatroomusername(::std::string&& value) {
  set_has__chatroomusername();
  _chatroomusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
}
#endif
inline void GetChatroomMemberDetailResponse::set__chatroomusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__chatroomusername();
  _chatroomusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
}
inline void GetChatroomMemberDetailResponse::set__chatroomusername(const char* value, size_t size) {
  set_has__chatroomusername();
  _chatroomusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
}
inline ::std::string* GetChatroomMemberDetailResponse::mutable__chatroomusername() {
  set_has__chatroomusername();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
  return _chatroomusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetChatroomMemberDetailResponse::release__chatroomusername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
  clear_has__chatroomusername();
  return _chatroomusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetChatroomMemberDetailResponse::set_allocated__chatroomusername(::std::string* _chatroomusername) {
  if (_chatroomusername != NULL) {
    set_has__chatroomusername();
  } else {
    clear_has__chatroomusername();
  }
  _chatroomusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _chatroomusername);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.GetChatroomMemberDetailResponse._ChatroomUserName)
}

// required uint32 _ServerVersion = 3;
inline bool GetChatroomMemberDetailResponse::has__serverversion() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetChatroomMemberDetailResponse::set_has__serverversion() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetChatroomMemberDetailResponse::clear_has__serverversion() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetChatroomMemberDetailResponse::clear__serverversion() {
  _serverversion_ = 0u;
  clear_has__serverversion();
}
inline ::google::protobuf::uint32 GetChatroomMemberDetailResponse::_serverversion() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.GetChatroomMemberDetailResponse._ServerVersion)
  return _serverversion_;
}
inline void GetChatroomMemberDetailResponse::set__serverversion(::google::protobuf::uint32 value) {
  set_has__serverversion();
  _serverversion_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.GetChatroomMemberDetailResponse._ServerVersion)
}

// required .MMPro.micromsg.ChatRoomMemberData _NewChatroomData = 4;
inline bool GetChatroomMemberDetailResponse::has__newchatroomdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetChatroomMemberDetailResponse::set_has__newchatroomdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetChatroomMemberDetailResponse::clear_has__newchatroomdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetChatroomMemberDetailResponse::clear__newchatroomdata() {
  if (_newchatroomdata_ != NULL) _newchatroomdata_->::MMPro::micromsg::ChatRoomMemberData::Clear();
  clear_has__newchatroomdata();
}
inline const ::MMPro::micromsg::ChatRoomMemberData& GetChatroomMemberDetailResponse::_newchatroomdata() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.GetChatroomMemberDetailResponse._NewChatroomData)
  return _newchatroomdata_ != NULL ? *_newchatroomdata_
                         : *::MMPro::micromsg::ChatRoomMemberData::internal_default_instance();
}
inline ::MMPro::micromsg::ChatRoomMemberData* GetChatroomMemberDetailResponse::mutable__newchatroomdata() {
  set_has__newchatroomdata();
  if (_newchatroomdata_ == NULL) {
    _newchatroomdata_ = new ::MMPro::micromsg::ChatRoomMemberData;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.GetChatroomMemberDetailResponse._NewChatroomData)
  return _newchatroomdata_;
}
inline ::MMPro::micromsg::ChatRoomMemberData* GetChatroomMemberDetailResponse::release__newchatroomdata() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.GetChatroomMemberDetailResponse._NewChatroomData)
  clear_has__newchatroomdata();
  ::MMPro::micromsg::ChatRoomMemberData* temp = _newchatroomdata_;
  _newchatroomdata_ = NULL;
  return temp;
}
inline void GetChatroomMemberDetailResponse::set_allocated__newchatroomdata(::MMPro::micromsg::ChatRoomMemberData* _newchatroomdata) {
  delete _newchatroomdata_;
  _newchatroomdata_ = _newchatroomdata;
  if (_newchatroomdata) {
    set_has__newchatroomdata();
  } else {
    clear_has__newchatroomdata();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.GetChatroomMemberDetailResponse._NewChatroomData)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GetChatroomMemberDetailResponse_2eproto__INCLUDED
