// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PhoneNumberList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PhoneNumberList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class PhoneNumberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PhoneNumber> {
} _PhoneNumber_default_instance_;
class PhoneNumberListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PhoneNumberList> {
} _PhoneNumberList_default_instance_;

namespace protobuf_PhoneNumberList_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhoneNumber, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhoneNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhoneNumber, _phonenum_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhoneNumberList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhoneNumberList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhoneNumberList, _phonenumbercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhoneNumberList, _phonenumber_),
  0,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(PhoneNumber)},
  { 7, 14, sizeof(PhoneNumberList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PhoneNumber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PhoneNumberList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PhoneNumberList.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _PhoneNumber_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PhoneNumberList_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PhoneNumber_default_instance_.DefaultConstruct();
  _PhoneNumberList_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025PhoneNumberList.proto\022\016MMPro.micromsg\""
      " \n\013PhoneNumber\022\021\n\t_PhoneNum\030\001 \002(\t\"_\n\017Pho"
      "neNumberList\022\031\n\021_PhoneNumberCount\030\001 \001(\005\022"
      "1\n\014_PhoneNumber\030\002 \003(\0132\033.MMPro.micromsg.P"
      "honeNumber"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PhoneNumberList.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_PhoneNumberList_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneNumber::kPhoneNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneNumber::PhoneNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PhoneNumberList_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.PhoneNumber)
}
PhoneNumber::PhoneNumber(const PhoneNumber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__phonenum()) {
    _phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._phonenum_);
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.PhoneNumber)
}

void PhoneNumber::SharedCtor() {
  _cached_size_ = 0;
  _phonenum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PhoneNumber::~PhoneNumber() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.PhoneNumber)
  SharedDtor();
}

void PhoneNumber::SharedDtor() {
  _phonenum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhoneNumber::descriptor() {
  protobuf_PhoneNumberList_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PhoneNumberList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneNumber& PhoneNumber::default_instance() {
  protobuf_PhoneNumberList_2eproto::InitDefaults();
  return *internal_default_instance();
}

PhoneNumber* PhoneNumber::New(::google::protobuf::Arena* arena) const {
  PhoneNumber* n = new PhoneNumber;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhoneNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.PhoneNumber)
  if (has__phonenum()) {
    GOOGLE_DCHECK(!_phonenum_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_phonenum_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.PhoneNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string _PhoneNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__phonenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_phonenum().data(), this->_phonenum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.PhoneNumber._PhoneNum");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.PhoneNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.PhoneNumber)
  return false;
#undef DO_
}

void PhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.PhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string _PhoneNum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_phonenum().data(), this->_phonenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.PhoneNumber._PhoneNum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_phonenum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.PhoneNumber)
}

::google::protobuf::uint8* PhoneNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.PhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string _PhoneNum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_phonenum().data(), this->_phonenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.PhoneNumber._PhoneNum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_phonenum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.PhoneNumber)
  return target;
}

size_t PhoneNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.PhoneNumber)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string _PhoneNum = 1;
  if (has__phonenum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_phonenum());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhoneNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.PhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.PhoneNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.PhoneNumber)
    MergeFrom(*source);
  }
}

void PhoneNumber::MergeFrom(const PhoneNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.PhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has__phonenum()) {
    set_has__phonenum();
    _phonenum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._phonenum_);
  }
}

void PhoneNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.PhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneNumber::CopyFrom(const PhoneNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.PhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneNumber::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PhoneNumber::Swap(PhoneNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneNumber::InternalSwap(PhoneNumber* other) {
  _phonenum_.Swap(&other->_phonenum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhoneNumber::GetMetadata() const {
  protobuf_PhoneNumberList_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PhoneNumberList_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhoneNumber

// required string _PhoneNum = 1;
bool PhoneNumber::has__phonenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PhoneNumber::set_has__phonenum() {
  _has_bits_[0] |= 0x00000001u;
}
void PhoneNumber::clear_has__phonenum() {
  _has_bits_[0] &= ~0x00000001u;
}
void PhoneNumber::clear__phonenum() {
  _phonenum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__phonenum();
}
const ::std::string& PhoneNumber::_phonenum() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.PhoneNumber._PhoneNum)
  return _phonenum_.GetNoArena();
}
void PhoneNumber::set__phonenum(const ::std::string& value) {
  set_has__phonenum();
  _phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.PhoneNumber._PhoneNum)
}
#if LANG_CXX11
void PhoneNumber::set__phonenum(::std::string&& value) {
  set_has__phonenum();
  _phonenum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.PhoneNumber._PhoneNum)
}
#endif
void PhoneNumber::set__phonenum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__phonenum();
  _phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.PhoneNumber._PhoneNum)
}
void PhoneNumber::set__phonenum(const char* value, size_t size) {
  set_has__phonenum();
  _phonenum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.PhoneNumber._PhoneNum)
}
::std::string* PhoneNumber::mutable__phonenum() {
  set_has__phonenum();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.PhoneNumber._PhoneNum)
  return _phonenum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhoneNumber::release__phonenum() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.PhoneNumber._PhoneNum)
  clear_has__phonenum();
  return _phonenum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhoneNumber::set_allocated__phonenum(::std::string* _phonenum) {
  if (_phonenum != NULL) {
    set_has__phonenum();
  } else {
    clear_has__phonenum();
  }
  _phonenum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _phonenum);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.PhoneNumber._PhoneNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneNumberList::kPhoneNumberCountFieldNumber;
const int PhoneNumberList::kPhoneNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneNumberList::PhoneNumberList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PhoneNumberList_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.PhoneNumberList)
}
PhoneNumberList::PhoneNumberList(const PhoneNumberList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _phonenumber_(from._phonenumber_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _phonenumbercount_ = from._phonenumbercount_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.PhoneNumberList)
}

void PhoneNumberList::SharedCtor() {
  _cached_size_ = 0;
  _phonenumbercount_ = 0;
}

PhoneNumberList::~PhoneNumberList() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.PhoneNumberList)
  SharedDtor();
}

void PhoneNumberList::SharedDtor() {
}

void PhoneNumberList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhoneNumberList::descriptor() {
  protobuf_PhoneNumberList_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PhoneNumberList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneNumberList& PhoneNumberList::default_instance() {
  protobuf_PhoneNumberList_2eproto::InitDefaults();
  return *internal_default_instance();
}

PhoneNumberList* PhoneNumberList::New(::google::protobuf::Arena* arena) const {
  PhoneNumberList* n = new PhoneNumberList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhoneNumberList::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.PhoneNumberList)
  _phonenumber_.Clear();
  _phonenumbercount_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PhoneNumberList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.PhoneNumberList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _PhoneNumberCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__phonenumbercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_phonenumbercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.PhoneNumber _PhoneNumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__phonenumber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.PhoneNumberList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.PhoneNumberList)
  return false;
#undef DO_
}

void PhoneNumberList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.PhoneNumberList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 _PhoneNumberCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_phonenumbercount(), output);
  }

  // repeated .MMPro.micromsg.PhoneNumber _PhoneNumber = 2;
  for (unsigned int i = 0, n = this->_phonenumber_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_phonenumber(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.PhoneNumberList)
}

::google::protobuf::uint8* PhoneNumberList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.PhoneNumberList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 _PhoneNumberCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_phonenumbercount(), target);
  }

  // repeated .MMPro.micromsg.PhoneNumber _PhoneNumber = 2;
  for (unsigned int i = 0, n = this->_phonenumber_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->_phonenumber(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.PhoneNumberList)
  return target;
}

size_t PhoneNumberList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.PhoneNumberList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.PhoneNumber _PhoneNumber = 2;
  {
    unsigned int count = this->_phonenumber_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_phonenumber(i));
    }
  }

  // optional int32 _PhoneNumberCount = 1;
  if (has__phonenumbercount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_phonenumbercount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhoneNumberList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.PhoneNumberList)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneNumberList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneNumberList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.PhoneNumberList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.PhoneNumberList)
    MergeFrom(*source);
  }
}

void PhoneNumberList::MergeFrom(const PhoneNumberList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.PhoneNumberList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _phonenumber_.MergeFrom(from._phonenumber_);
  if (from.has__phonenumbercount()) {
    set__phonenumbercount(from._phonenumbercount());
  }
}

void PhoneNumberList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.PhoneNumberList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneNumberList::CopyFrom(const PhoneNumberList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.PhoneNumberList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneNumberList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->_phonenumber())) return false;
  return true;
}

void PhoneNumberList::Swap(PhoneNumberList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneNumberList::InternalSwap(PhoneNumberList* other) {
  _phonenumber_.InternalSwap(&other->_phonenumber_);
  std::swap(_phonenumbercount_, other->_phonenumbercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhoneNumberList::GetMetadata() const {
  protobuf_PhoneNumberList_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PhoneNumberList_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhoneNumberList

// optional int32 _PhoneNumberCount = 1;
bool PhoneNumberList::has__phonenumbercount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PhoneNumberList::set_has__phonenumbercount() {
  _has_bits_[0] |= 0x00000001u;
}
void PhoneNumberList::clear_has__phonenumbercount() {
  _has_bits_[0] &= ~0x00000001u;
}
void PhoneNumberList::clear__phonenumbercount() {
  _phonenumbercount_ = 0;
  clear_has__phonenumbercount();
}
::google::protobuf::int32 PhoneNumberList::_phonenumbercount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.PhoneNumberList._PhoneNumberCount)
  return _phonenumbercount_;
}
void PhoneNumberList::set__phonenumbercount(::google::protobuf::int32 value) {
  set_has__phonenumbercount();
  _phonenumbercount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.PhoneNumberList._PhoneNumberCount)
}

// repeated .MMPro.micromsg.PhoneNumber _PhoneNumber = 2;
int PhoneNumberList::_phonenumber_size() const {
  return _phonenumber_.size();
}
void PhoneNumberList::clear__phonenumber() {
  _phonenumber_.Clear();
}
const ::MMPro::micromsg::PhoneNumber& PhoneNumberList::_phonenumber(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.PhoneNumberList._PhoneNumber)
  return _phonenumber_.Get(index);
}
::MMPro::micromsg::PhoneNumber* PhoneNumberList::mutable__phonenumber(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.PhoneNumberList._PhoneNumber)
  return _phonenumber_.Mutable(index);
}
::MMPro::micromsg::PhoneNumber* PhoneNumberList::add__phonenumber() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.PhoneNumberList._PhoneNumber)
  return _phonenumber_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::PhoneNumber >*
PhoneNumberList::mutable__phonenumber() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.PhoneNumberList._PhoneNumber)
  return &_phonenumber_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::PhoneNumber >&
PhoneNumberList::_phonenumber() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.PhoneNumberList._PhoneNumber)
  return _phonenumber_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
