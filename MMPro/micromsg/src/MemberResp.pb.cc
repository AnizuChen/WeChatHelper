// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MemberResp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MemberResp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class MemberRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MemberResp> {
} _MemberResp_default_instance_;

namespace protobuf_MemberResp_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _membername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _memberstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _pyinitial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _quanpin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _remarkpyinitial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _remarkquanpin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _contacttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _personalcard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _verifyflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _verifyinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemberResp, _country_),
  5,
  12,
  6,
  7,
  8,
  13,
  9,
  10,
  11,
  14,
  0,
  1,
  2,
  15,
  16,
  3,
  4,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 22, sizeof(MemberResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MemberResp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MemberResp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _MemberResp_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::InitDefaults();
  _MemberResp_default_instance_.DefaultConstruct();
  _MemberResp_default_instance_.get_mutable()->_membername_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _MemberResp_default_instance_.get_mutable()->_nickname_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _MemberResp_default_instance_.get_mutable()->_pyinitial_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _MemberResp_default_instance_.get_mutable()->_quanpin_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _MemberResp_default_instance_.get_mutable()->_remark_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _MemberResp_default_instance_.get_mutable()->_remarkpyinitial_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
  _MemberResp_default_instance_.get_mutable()->_remarkquanpin_ = const_cast< ::MMPro::micromsg::SKBuiltinString_t*>(
      ::MMPro::micromsg::SKBuiltinString_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020MemberResp.proto\022\016MMPro.micromsg\032\027SKBu"
      "iltinString_t.proto\"\326\004\n\nMemberResp\0226\n\013_M"
      "emberName\030\001 \002(\0132!.MMPro.micromsg.SKBuilt"
      "inString_t\022\025\n\r_MemberStatus\030\002 \002(\r\0224\n\t_Ni"
      "ckName\030\003 \002(\0132!.MMPro.micromsg.SKBuiltinS"
      "tring_t\0225\n\n_PYInitial\030\004 \002(\0132!.MMPro.micr"
      "omsg.SKBuiltinString_t\0223\n\010_QuanPin\030\005 \002(\013"
      "2!.MMPro.micromsg.SKBuiltinString_t\022\014\n\004_"
      "Sex\030\006 \002(\005\0222\n\007_Remark\030\t \002(\0132!.MMPro.micro"
      "msg.SKBuiltinString_t\022;\n\020_RemarkPYInitia"
      "l\030\n \002(\0132!.MMPro.micromsg.SKBuiltinString"
      "_t\0229\n\016_RemarkQuanPin\030\013 \002(\0132!.MMPro.micro"
      "msg.SKBuiltinString_t\022\024\n\014_ContactType\030\014 "
      "\002(\r\022\021\n\t_Province\030\r \001(\t\022\r\n\005_City\030\016 \001(\t\022\022\n"
      "\n_Signature\030\017 \001(\t\022\025\n\r_PersonalCard\030\020 \001(\r"
      "\022\023\n\013_VerifyFlag\030\021 \001(\r\022\023\n\013_VerifyInfo\030\022 \001"
      "(\t\022\020\n\010_Country\030\023 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MemberResp.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_SKBuiltinString_5ft_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_MemberResp_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberResp::kMemberNameFieldNumber;
const int MemberResp::kMemberStatusFieldNumber;
const int MemberResp::kNickNameFieldNumber;
const int MemberResp::kPYInitialFieldNumber;
const int MemberResp::kQuanPinFieldNumber;
const int MemberResp::kSexFieldNumber;
const int MemberResp::kRemarkFieldNumber;
const int MemberResp::kRemarkPYInitialFieldNumber;
const int MemberResp::kRemarkQuanPinFieldNumber;
const int MemberResp::kContactTypeFieldNumber;
const int MemberResp::kProvinceFieldNumber;
const int MemberResp::kCityFieldNumber;
const int MemberResp::kSignatureFieldNumber;
const int MemberResp::kPersonalCardFieldNumber;
const int MemberResp::kVerifyFlagFieldNumber;
const int MemberResp::kVerifyInfoFieldNumber;
const int MemberResp::kCountryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberResp::MemberResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MemberResp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.MemberResp)
}
MemberResp::MemberResp(const MemberResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__province()) {
    _province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._province_);
  }
  _city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__city()) {
    _city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._city_);
  }
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__signature()) {
    _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
  }
  _verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__verifyinfo()) {
    _verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._verifyinfo_);
  }
  _country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__country()) {
    _country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._country_);
  }
  if (from.has__membername()) {
    _membername_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._membername_);
  } else {
    _membername_ = NULL;
  }
  if (from.has__nickname()) {
    _nickname_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._nickname_);
  } else {
    _nickname_ = NULL;
  }
  if (from.has__pyinitial()) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._pyinitial_);
  } else {
    _pyinitial_ = NULL;
  }
  if (from.has__quanpin()) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._quanpin_);
  } else {
    _quanpin_ = NULL;
  }
  if (from.has__remark()) {
    _remark_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._remark_);
  } else {
    _remark_ = NULL;
  }
  if (from.has__remarkpyinitial()) {
    _remarkpyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._remarkpyinitial_);
  } else {
    _remarkpyinitial_ = NULL;
  }
  if (from.has__remarkquanpin()) {
    _remarkquanpin_ = new ::MMPro::micromsg::SKBuiltinString_t(*from._remarkquanpin_);
  } else {
    _remarkquanpin_ = NULL;
  }
  ::memcpy(&_memberstatus_, &from._memberstatus_,
    reinterpret_cast<char*>(&_verifyflag_) -
    reinterpret_cast<char*>(&_memberstatus_) + sizeof(_verifyflag_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.MemberResp)
}

void MemberResp::SharedCtor() {
  _cached_size_ = 0;
  _province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_membername_, 0, reinterpret_cast<char*>(&_verifyflag_) -
    reinterpret_cast<char*>(&_membername_) + sizeof(_verifyflag_));
}

MemberResp::~MemberResp() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.MemberResp)
  SharedDtor();
}

void MemberResp::SharedDtor() {
  _province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _verifyinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _membername_;
  }
  if (this != internal_default_instance()) {
    delete _nickname_;
  }
  if (this != internal_default_instance()) {
    delete _pyinitial_;
  }
  if (this != internal_default_instance()) {
    delete _quanpin_;
  }
  if (this != internal_default_instance()) {
    delete _remark_;
  }
  if (this != internal_default_instance()) {
    delete _remarkpyinitial_;
  }
  if (this != internal_default_instance()) {
    delete _remarkquanpin_;
  }
}

void MemberResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberResp::descriptor() {
  protobuf_MemberResp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MemberResp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberResp& MemberResp::default_instance() {
  protobuf_MemberResp_2eproto::InitDefaults();
  return *internal_default_instance();
}

MemberResp* MemberResp::New(::google::protobuf::Arena* arena) const {
  MemberResp* n = new MemberResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberResp::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.MemberResp)
  if (_has_bits_[0 / 32] & 255u) {
    if (has__province()) {
      GOOGLE_DCHECK(!_province_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_province_.UnsafeRawStringPointer())->clear();
    }
    if (has__city()) {
      GOOGLE_DCHECK(!_city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_city_.UnsafeRawStringPointer())->clear();
    }
    if (has__signature()) {
      GOOGLE_DCHECK(!_signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_signature_.UnsafeRawStringPointer())->clear();
    }
    if (has__verifyinfo()) {
      GOOGLE_DCHECK(!_verifyinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_verifyinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has__country()) {
      GOOGLE_DCHECK(!_country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_country_.UnsafeRawStringPointer())->clear();
    }
    if (has__membername()) {
      GOOGLE_DCHECK(_membername_ != NULL);
      _membername_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__nickname()) {
      GOOGLE_DCHECK(_nickname_ != NULL);
      _nickname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__pyinitial()) {
      GOOGLE_DCHECK(_pyinitial_ != NULL);
      _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    if (has__quanpin()) {
      GOOGLE_DCHECK(_quanpin_ != NULL);
      _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__remark()) {
      GOOGLE_DCHECK(_remark_ != NULL);
      _remark_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__remarkpyinitial()) {
      GOOGLE_DCHECK(_remarkpyinitial_ != NULL);
      _remarkpyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
    if (has__remarkquanpin()) {
      GOOGLE_DCHECK(_remarkquanpin_ != NULL);
      _remarkquanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 61440u) {
    ::memset(&_memberstatus_, 0, reinterpret_cast<char*>(&_personalcard_) -
      reinterpret_cast<char*>(&_memberstatus_) + sizeof(_personalcard_));
  }
  _verifyflag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemberResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.MemberResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__membername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _MemberStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__memberstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_memberstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__pyinitial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__quanpin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 _Sex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has__sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__remark()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__remarkpyinitial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__remarkquanpin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 _ContactType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has__contacttype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_contacttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Province = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_province().data(), this->_province().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.MemberResp._Province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _City = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_city().data(), this->_city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.MemberResp._City");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Signature = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_signature().data(), this->_signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.MemberResp._Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _PersonalCard = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has__personalcard();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_personalcard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _VerifyFlag = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has__verifyflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_verifyflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _VerifyInfo = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__verifyinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_verifyinfo().data(), this->_verifyinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.MemberResp._VerifyInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Country = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_country().data(), this->_country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.MemberResp._Country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.MemberResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.MemberResp)
  return false;
#undef DO_
}

void MemberResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.MemberResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_membername_, output);
  }

  // required uint32 _MemberStatus = 2;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_memberstatus(), output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->_nickname_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->_pyinitial_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->_quanpin_, output);
  }

  // required int32 _Sex = 6;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->_sex(), output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->_remark_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->_remarkpyinitial_, output);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->_remarkquanpin_, output);
  }

  // required uint32 _ContactType = 12;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->_contacttype(), output);
  }

  // optional string _Province = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_province().data(), this->_province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._Province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->_province(), output);
  }

  // optional string _City = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_city().data(), this->_city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._City");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->_city(), output);
  }

  // optional string _Signature = 15;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->_signature(), output);
  }

  // optional uint32 _PersonalCard = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->_personalcard(), output);
  }

  // optional uint32 _VerifyFlag = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->_verifyflag(), output);
  }

  // optional string _VerifyInfo = 18;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_verifyinfo().data(), this->_verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._VerifyInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->_verifyinfo(), output);
  }

  // optional string _Country = 19;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_country().data(), this->_country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._Country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->_country(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.MemberResp)
}

::google::protobuf::uint8* MemberResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.MemberResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_membername_, deterministic, target);
  }

  // required uint32 _MemberStatus = 2;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_memberstatus(), target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->_nickname_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->_pyinitial_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->_quanpin_, deterministic, target);
  }

  // required int32 _Sex = 6;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->_sex(), target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->_remark_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->_remarkpyinitial_, deterministic, target);
  }

  // required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->_remarkquanpin_, deterministic, target);
  }

  // required uint32 _ContactType = 12;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->_contacttype(), target);
  }

  // optional string _Province = 13;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_province().data(), this->_province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._Province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->_province(), target);
  }

  // optional string _City = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_city().data(), this->_city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._City");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->_city(), target);
  }

  // optional string _Signature = 15;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->_signature(), target);
  }

  // optional uint32 _PersonalCard = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->_personalcard(), target);
  }

  // optional uint32 _VerifyFlag = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->_verifyflag(), target);
  }

  // optional string _VerifyInfo = 18;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_verifyinfo().data(), this->_verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._VerifyInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->_verifyinfo(), target);
  }

  // optional string _Country = 19;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_country().data(), this->_country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.MemberResp._Country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->_country(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.MemberResp)
  return target;
}

size_t MemberResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MMPro.micromsg.MemberResp)
  size_t total_size = 0;

  if (has__membername()) {
    // required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_membername_);
  }

  if (has__nickname()) {
    // required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_nickname_);
  }

  if (has__pyinitial()) {
    // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_pyinitial_);
  }

  if (has__quanpin()) {
    // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_quanpin_);
  }

  if (has__remark()) {
    // required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_remark_);
  }

  if (has__remarkpyinitial()) {
    // required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_remarkpyinitial_);
  }

  if (has__remarkquanpin()) {
    // required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_remarkquanpin_);
  }

  if (has__memberstatus()) {
    // required uint32 _MemberStatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_memberstatus());
  }

  if (has__sex()) {
    // required int32 _Sex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_sex());
  }

  if (has__contacttype()) {
    // required uint32 _ContactType = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_contacttype());
  }

  return total_size;
}
size_t MemberResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.MemberResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00007fe0) ^ 0x00007fe0) == 0) {  // All required fields are present.
    // required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_membername_);

    // required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_nickname_);

    // required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_pyinitial_);

    // required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_quanpin_);

    // required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_remark_);

    // required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_remarkpyinitial_);

    // required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_remarkquanpin_);

    // required uint32 _MemberStatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_memberstatus());

    // required int32 _Sex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_sex());

    // required uint32 _ContactType = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_contacttype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string _Province = 13;
    if (has__province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_province());
    }

    // optional string _City = 14;
    if (has__city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_city());
    }

    // optional string _Signature = 15;
    if (has__signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_signature());
    }

    // optional string _VerifyInfo = 18;
    if (has__verifyinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_verifyinfo());
    }

    // optional string _Country = 19;
    if (has__country()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_country());
    }

  }
  // optional uint32 _PersonalCard = 16;
  if (has__personalcard()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_personalcard());
  }

  // optional uint32 _VerifyFlag = 17;
  if (has__verifyflag()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_verifyflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.MemberResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.MemberResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.MemberResp)
    MergeFrom(*source);
  }
}

void MemberResp::MergeFrom(const MemberResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.MemberResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__province();
      _province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._province_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__city();
      _city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._city_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__signature();
      _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__verifyinfo();
      _verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._verifyinfo_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has__country();
      _country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._country_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable__membername()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._membername());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable__nickname()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._nickname());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable__pyinitial()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._pyinitial());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable__quanpin()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._quanpin());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable__remark()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._remark());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable__remarkpyinitial()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._remarkpyinitial());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable__remarkquanpin()->::MMPro::micromsg::SKBuiltinString_t::MergeFrom(from._remarkquanpin());
    }
    if (cached_has_bits & 0x00001000u) {
      _memberstatus_ = from._memberstatus_;
    }
    if (cached_has_bits & 0x00002000u) {
      _sex_ = from._sex_;
    }
    if (cached_has_bits & 0x00004000u) {
      _contacttype_ = from._contacttype_;
    }
    if (cached_has_bits & 0x00008000u) {
      _personalcard_ = from._personalcard_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set__verifyflag(from._verifyflag());
  }
}

void MemberResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.MemberResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberResp::CopyFrom(const MemberResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.MemberResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fe0) != 0x00007fe0) return false;
  return true;
}

void MemberResp::Swap(MemberResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberResp::InternalSwap(MemberResp* other) {
  _province_.Swap(&other->_province_);
  _city_.Swap(&other->_city_);
  _signature_.Swap(&other->_signature_);
  _verifyinfo_.Swap(&other->_verifyinfo_);
  _country_.Swap(&other->_country_);
  std::swap(_membername_, other->_membername_);
  std::swap(_nickname_, other->_nickname_);
  std::swap(_pyinitial_, other->_pyinitial_);
  std::swap(_quanpin_, other->_quanpin_);
  std::swap(_remark_, other->_remark_);
  std::swap(_remarkpyinitial_, other->_remarkpyinitial_);
  std::swap(_remarkquanpin_, other->_remarkquanpin_);
  std::swap(_memberstatus_, other->_memberstatus_);
  std::swap(_sex_, other->_sex_);
  std::swap(_contacttype_, other->_contacttype_);
  std::swap(_personalcard_, other->_personalcard_);
  std::swap(_verifyflag_, other->_verifyflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberResp::GetMetadata() const {
  protobuf_MemberResp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MemberResp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemberResp

// required .MMPro.micromsg.SKBuiltinString_t _MemberName = 1;
bool MemberResp::has__membername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MemberResp::set_has__membername() {
  _has_bits_[0] |= 0x00000020u;
}
void MemberResp::clear_has__membername() {
  _has_bits_[0] &= ~0x00000020u;
}
void MemberResp::clear__membername() {
  if (_membername_ != NULL) _membername_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__membername();
}
const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_membername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._MemberName)
  return _membername_ != NULL ? *_membername_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__membername() {
  set_has__membername();
  if (_membername_ == NULL) {
    _membername_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._MemberName)
  return _membername_;
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__membername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._MemberName)
  clear_has__membername();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _membername_;
  _membername_ = NULL;
  return temp;
}
void MemberResp::set_allocated__membername(::MMPro::micromsg::SKBuiltinString_t* _membername) {
  delete _membername_;
  _membername_ = _membername;
  if (_membername) {
    set_has__membername();
  } else {
    clear_has__membername();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._MemberName)
}

// required uint32 _MemberStatus = 2;
bool MemberResp::has__memberstatus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void MemberResp::set_has__memberstatus() {
  _has_bits_[0] |= 0x00001000u;
}
void MemberResp::clear_has__memberstatus() {
  _has_bits_[0] &= ~0x00001000u;
}
void MemberResp::clear__memberstatus() {
  _memberstatus_ = 0u;
  clear_has__memberstatus();
}
::google::protobuf::uint32 MemberResp::_memberstatus() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._MemberStatus)
  return _memberstatus_;
}
void MemberResp::set__memberstatus(::google::protobuf::uint32 value) {
  set_has__memberstatus();
  _memberstatus_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._MemberStatus)
}

// required .MMPro.micromsg.SKBuiltinString_t _NickName = 3;
bool MemberResp::has__nickname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MemberResp::set_has__nickname() {
  _has_bits_[0] |= 0x00000040u;
}
void MemberResp::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000040u;
}
void MemberResp::clear__nickname() {
  if (_nickname_ != NULL) _nickname_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__nickname();
}
const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._NickName)
  return _nickname_ != NULL ? *_nickname_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__nickname() {
  set_has__nickname();
  if (_nickname_ == NULL) {
    _nickname_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._NickName)
  return _nickname_;
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._NickName)
  clear_has__nickname();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _nickname_;
  _nickname_ = NULL;
  return temp;
}
void MemberResp::set_allocated__nickname(::MMPro::micromsg::SKBuiltinString_t* _nickname) {
  delete _nickname_;
  _nickname_ = _nickname;
  if (_nickname) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._NickName)
}

// required .MMPro.micromsg.SKBuiltinString_t _PYInitial = 4;
bool MemberResp::has__pyinitial() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MemberResp::set_has__pyinitial() {
  _has_bits_[0] |= 0x00000080u;
}
void MemberResp::clear_has__pyinitial() {
  _has_bits_[0] &= ~0x00000080u;
}
void MemberResp::clear__pyinitial() {
  if (_pyinitial_ != NULL) _pyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__pyinitial();
}
const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_pyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._PYInitial)
  return _pyinitial_ != NULL ? *_pyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__pyinitial() {
  set_has__pyinitial();
  if (_pyinitial_ == NULL) {
    _pyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._PYInitial)
  return _pyinitial_;
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__pyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._PYInitial)
  clear_has__pyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _pyinitial_;
  _pyinitial_ = NULL;
  return temp;
}
void MemberResp::set_allocated__pyinitial(::MMPro::micromsg::SKBuiltinString_t* _pyinitial) {
  delete _pyinitial_;
  _pyinitial_ = _pyinitial;
  if (_pyinitial) {
    set_has__pyinitial();
  } else {
    clear_has__pyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._PYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _QuanPin = 5;
bool MemberResp::has__quanpin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MemberResp::set_has__quanpin() {
  _has_bits_[0] |= 0x00000100u;
}
void MemberResp::clear_has__quanpin() {
  _has_bits_[0] &= ~0x00000100u;
}
void MemberResp::clear__quanpin() {
  if (_quanpin_ != NULL) _quanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__quanpin();
}
const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_quanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._QuanPin)
  return _quanpin_ != NULL ? *_quanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__quanpin() {
  set_has__quanpin();
  if (_quanpin_ == NULL) {
    _quanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._QuanPin)
  return _quanpin_;
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__quanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._QuanPin)
  clear_has__quanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _quanpin_;
  _quanpin_ = NULL;
  return temp;
}
void MemberResp::set_allocated__quanpin(::MMPro::micromsg::SKBuiltinString_t* _quanpin) {
  delete _quanpin_;
  _quanpin_ = _quanpin;
  if (_quanpin) {
    set_has__quanpin();
  } else {
    clear_has__quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._QuanPin)
}

// required int32 _Sex = 6;
bool MemberResp::has__sex() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void MemberResp::set_has__sex() {
  _has_bits_[0] |= 0x00002000u;
}
void MemberResp::clear_has__sex() {
  _has_bits_[0] &= ~0x00002000u;
}
void MemberResp::clear__sex() {
  _sex_ = 0;
  clear_has__sex();
}
::google::protobuf::int32 MemberResp::_sex() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Sex)
  return _sex_;
}
void MemberResp::set__sex(::google::protobuf::int32 value) {
  set_has__sex();
  _sex_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Sex)
}

// required .MMPro.micromsg.SKBuiltinString_t _Remark = 9;
bool MemberResp::has__remark() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MemberResp::set_has__remark() {
  _has_bits_[0] |= 0x00000200u;
}
void MemberResp::clear_has__remark() {
  _has_bits_[0] &= ~0x00000200u;
}
void MemberResp::clear__remark() {
  if (_remark_ != NULL) _remark_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__remark();
}
const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_remark() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Remark)
  return _remark_ != NULL ? *_remark_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__remark() {
  set_has__remark();
  if (_remark_ == NULL) {
    _remark_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Remark)
  return _remark_;
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__remark() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Remark)
  clear_has__remark();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _remark_;
  _remark_ = NULL;
  return temp;
}
void MemberResp::set_allocated__remark(::MMPro::micromsg::SKBuiltinString_t* _remark) {
  delete _remark_;
  _remark_ = _remark;
  if (_remark) {
    set_has__remark();
  } else {
    clear_has__remark();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Remark)
}

// required .MMPro.micromsg.SKBuiltinString_t _RemarkPYInitial = 10;
bool MemberResp::has__remarkpyinitial() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MemberResp::set_has__remarkpyinitial() {
  _has_bits_[0] |= 0x00000400u;
}
void MemberResp::clear_has__remarkpyinitial() {
  _has_bits_[0] &= ~0x00000400u;
}
void MemberResp::clear__remarkpyinitial() {
  if (_remarkpyinitial_ != NULL) _remarkpyinitial_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__remarkpyinitial();
}
const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_remarkpyinitial() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._RemarkPYInitial)
  return _remarkpyinitial_ != NULL ? *_remarkpyinitial_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__remarkpyinitial() {
  set_has__remarkpyinitial();
  if (_remarkpyinitial_ == NULL) {
    _remarkpyinitial_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._RemarkPYInitial)
  return _remarkpyinitial_;
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__remarkpyinitial() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._RemarkPYInitial)
  clear_has__remarkpyinitial();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _remarkpyinitial_;
  _remarkpyinitial_ = NULL;
  return temp;
}
void MemberResp::set_allocated__remarkpyinitial(::MMPro::micromsg::SKBuiltinString_t* _remarkpyinitial) {
  delete _remarkpyinitial_;
  _remarkpyinitial_ = _remarkpyinitial;
  if (_remarkpyinitial) {
    set_has__remarkpyinitial();
  } else {
    clear_has__remarkpyinitial();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._RemarkPYInitial)
}

// required .MMPro.micromsg.SKBuiltinString_t _RemarkQuanPin = 11;
bool MemberResp::has__remarkquanpin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MemberResp::set_has__remarkquanpin() {
  _has_bits_[0] |= 0x00000800u;
}
void MemberResp::clear_has__remarkquanpin() {
  _has_bits_[0] &= ~0x00000800u;
}
void MemberResp::clear__remarkquanpin() {
  if (_remarkquanpin_ != NULL) _remarkquanpin_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__remarkquanpin();
}
const ::MMPro::micromsg::SKBuiltinString_t& MemberResp::_remarkquanpin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._RemarkQuanPin)
  return _remarkquanpin_ != NULL ? *_remarkquanpin_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::mutable__remarkquanpin() {
  set_has__remarkquanpin();
  if (_remarkquanpin_ == NULL) {
    _remarkquanpin_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._RemarkQuanPin)
  return _remarkquanpin_;
}
::MMPro::micromsg::SKBuiltinString_t* MemberResp::release__remarkquanpin() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._RemarkQuanPin)
  clear_has__remarkquanpin();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _remarkquanpin_;
  _remarkquanpin_ = NULL;
  return temp;
}
void MemberResp::set_allocated__remarkquanpin(::MMPro::micromsg::SKBuiltinString_t* _remarkquanpin) {
  delete _remarkquanpin_;
  _remarkquanpin_ = _remarkquanpin;
  if (_remarkquanpin) {
    set_has__remarkquanpin();
  } else {
    clear_has__remarkquanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._RemarkQuanPin)
}

// required uint32 _ContactType = 12;
bool MemberResp::has__contacttype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void MemberResp::set_has__contacttype() {
  _has_bits_[0] |= 0x00004000u;
}
void MemberResp::clear_has__contacttype() {
  _has_bits_[0] &= ~0x00004000u;
}
void MemberResp::clear__contacttype() {
  _contacttype_ = 0u;
  clear_has__contacttype();
}
::google::protobuf::uint32 MemberResp::_contacttype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._ContactType)
  return _contacttype_;
}
void MemberResp::set__contacttype(::google::protobuf::uint32 value) {
  set_has__contacttype();
  _contacttype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._ContactType)
}

// optional string _Province = 13;
bool MemberResp::has__province() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MemberResp::set_has__province() {
  _has_bits_[0] |= 0x00000001u;
}
void MemberResp::clear_has__province() {
  _has_bits_[0] &= ~0x00000001u;
}
void MemberResp::clear__province() {
  _province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__province();
}
const ::std::string& MemberResp::_province() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Province)
  return _province_.GetNoArena();
}
void MemberResp::set__province(const ::std::string& value) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Province)
}
#if LANG_CXX11
void MemberResp::set__province(::std::string&& value) {
  set_has__province();
  _province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._Province)
}
#endif
void MemberResp::set__province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._Province)
}
void MemberResp::set__province(const char* value, size_t size) {
  set_has__province();
  _province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._Province)
}
::std::string* MemberResp::mutable__province() {
  set_has__province();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Province)
  return _province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemberResp::release__province() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Province)
  clear_has__province();
  return _province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemberResp::set_allocated__province(::std::string* _province) {
  if (_province != NULL) {
    set_has__province();
  } else {
    clear_has__province();
  }
  _province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _province);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Province)
}

// optional string _City = 14;
bool MemberResp::has__city() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MemberResp::set_has__city() {
  _has_bits_[0] |= 0x00000002u;
}
void MemberResp::clear_has__city() {
  _has_bits_[0] &= ~0x00000002u;
}
void MemberResp::clear__city() {
  _city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__city();
}
const ::std::string& MemberResp::_city() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._City)
  return _city_.GetNoArena();
}
void MemberResp::set__city(const ::std::string& value) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._City)
}
#if LANG_CXX11
void MemberResp::set__city(::std::string&& value) {
  set_has__city();
  _city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._City)
}
#endif
void MemberResp::set__city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._City)
}
void MemberResp::set__city(const char* value, size_t size) {
  set_has__city();
  _city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._City)
}
::std::string* MemberResp::mutable__city() {
  set_has__city();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._City)
  return _city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemberResp::release__city() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._City)
  clear_has__city();
  return _city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemberResp::set_allocated__city(::std::string* _city) {
  if (_city != NULL) {
    set_has__city();
  } else {
    clear_has__city();
  }
  _city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _city);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._City)
}

// optional string _Signature = 15;
bool MemberResp::has__signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MemberResp::set_has__signature() {
  _has_bits_[0] |= 0x00000004u;
}
void MemberResp::clear_has__signature() {
  _has_bits_[0] &= ~0x00000004u;
}
void MemberResp::clear__signature() {
  _signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__signature();
}
const ::std::string& MemberResp::_signature() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Signature)
  return _signature_.GetNoArena();
}
void MemberResp::set__signature(const ::std::string& value) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Signature)
}
#if LANG_CXX11
void MemberResp::set__signature(::std::string&& value) {
  set_has__signature();
  _signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._Signature)
}
#endif
void MemberResp::set__signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._Signature)
}
void MemberResp::set__signature(const char* value, size_t size) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._Signature)
}
::std::string* MemberResp::mutable__signature() {
  set_has__signature();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Signature)
  return _signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemberResp::release__signature() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Signature)
  clear_has__signature();
  return _signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemberResp::set_allocated__signature(::std::string* _signature) {
  if (_signature != NULL) {
    set_has__signature();
  } else {
    clear_has__signature();
  }
  _signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _signature);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Signature)
}

// optional uint32 _PersonalCard = 16;
bool MemberResp::has__personalcard() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void MemberResp::set_has__personalcard() {
  _has_bits_[0] |= 0x00008000u;
}
void MemberResp::clear_has__personalcard() {
  _has_bits_[0] &= ~0x00008000u;
}
void MemberResp::clear__personalcard() {
  _personalcard_ = 0u;
  clear_has__personalcard();
}
::google::protobuf::uint32 MemberResp::_personalcard() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._PersonalCard)
  return _personalcard_;
}
void MemberResp::set__personalcard(::google::protobuf::uint32 value) {
  set_has__personalcard();
  _personalcard_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._PersonalCard)
}

// optional uint32 _VerifyFlag = 17;
bool MemberResp::has__verifyflag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void MemberResp::set_has__verifyflag() {
  _has_bits_[0] |= 0x00010000u;
}
void MemberResp::clear_has__verifyflag() {
  _has_bits_[0] &= ~0x00010000u;
}
void MemberResp::clear__verifyflag() {
  _verifyflag_ = 0u;
  clear_has__verifyflag();
}
::google::protobuf::uint32 MemberResp::_verifyflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._VerifyFlag)
  return _verifyflag_;
}
void MemberResp::set__verifyflag(::google::protobuf::uint32 value) {
  set_has__verifyflag();
  _verifyflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._VerifyFlag)
}

// optional string _VerifyInfo = 18;
bool MemberResp::has__verifyinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MemberResp::set_has__verifyinfo() {
  _has_bits_[0] |= 0x00000008u;
}
void MemberResp::clear_has__verifyinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
void MemberResp::clear__verifyinfo() {
  _verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__verifyinfo();
}
const ::std::string& MemberResp::_verifyinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._VerifyInfo)
  return _verifyinfo_.GetNoArena();
}
void MemberResp::set__verifyinfo(const ::std::string& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._VerifyInfo)
}
#if LANG_CXX11
void MemberResp::set__verifyinfo(::std::string&& value) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._VerifyInfo)
}
#endif
void MemberResp::set__verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._VerifyInfo)
}
void MemberResp::set__verifyinfo(const char* value, size_t size) {
  set_has__verifyinfo();
  _verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._VerifyInfo)
}
::std::string* MemberResp::mutable__verifyinfo() {
  set_has__verifyinfo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._VerifyInfo)
  return _verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemberResp::release__verifyinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._VerifyInfo)
  clear_has__verifyinfo();
  return _verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemberResp::set_allocated__verifyinfo(::std::string* _verifyinfo) {
  if (_verifyinfo != NULL) {
    set_has__verifyinfo();
  } else {
    clear_has__verifyinfo();
  }
  _verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._VerifyInfo)
}

// optional string _Country = 19;
bool MemberResp::has__country() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MemberResp::set_has__country() {
  _has_bits_[0] |= 0x00000010u;
}
void MemberResp::clear_has__country() {
  _has_bits_[0] &= ~0x00000010u;
}
void MemberResp::clear__country() {
  _country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__country();
}
const ::std::string& MemberResp::_country() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.MemberResp._Country)
  return _country_.GetNoArena();
}
void MemberResp::set__country(const ::std::string& value) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.MemberResp._Country)
}
#if LANG_CXX11
void MemberResp::set__country(::std::string&& value) {
  set_has__country();
  _country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.MemberResp._Country)
}
#endif
void MemberResp::set__country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.MemberResp._Country)
}
void MemberResp::set__country(const char* value, size_t size) {
  set_has__country();
  _country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.MemberResp._Country)
}
::std::string* MemberResp::mutable__country() {
  set_has__country();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.MemberResp._Country)
  return _country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MemberResp::release__country() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.MemberResp._Country)
  clear_has__country();
  return _country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MemberResp::set_allocated__country(::std::string* _country) {
  if (_country != NULL) {
    set_has__country();
  } else {
    clear_has__country();
  }
  _country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _country);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.MemberResp._Country)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
