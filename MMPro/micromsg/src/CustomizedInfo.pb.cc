// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CustomizedInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CustomizedInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class CustomizedInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CustomizedInfo> {
} _CustomizedInfo_default_instance_;

namespace protobuf_CustomizedInfo_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomizedInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomizedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomizedInfo, _brandflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomizedInfo, _externalinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomizedInfo, _brandinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomizedInfo, _brandiconurl_),
  3,
  0,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(CustomizedInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomizedInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CustomizedInfo.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _CustomizedInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CustomizedInfo_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024CustomizedInfo.proto\022\016MMPro.micromsg\"f"
      "\n\016CustomizedInfo\022\022\n\n_BrandFlag\030\001 \002(\r\022\025\n\r"
      "_ExternalInfo\030\002 \001(\t\022\022\n\n_BrandInfo\030\003 \001(\t\022"
      "\025\n\r_BrandIconURL\030\004 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 142);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CustomizedInfo.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_CustomizedInfo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomizedInfo::kBrandFlagFieldNumber;
const int CustomizedInfo::kExternalInfoFieldNumber;
const int CustomizedInfo::kBrandInfoFieldNumber;
const int CustomizedInfo::kBrandIconURLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomizedInfo::CustomizedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_CustomizedInfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.CustomizedInfo)
}
CustomizedInfo::CustomizedInfo(const CustomizedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _externalinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__externalinfo()) {
    _externalinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._externalinfo_);
  }
  _brandinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__brandinfo()) {
    _brandinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._brandinfo_);
  }
  _brandiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__brandiconurl()) {
    _brandiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._brandiconurl_);
  }
  _brandflag_ = from._brandflag_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.CustomizedInfo)
}

void CustomizedInfo::SharedCtor() {
  _cached_size_ = 0;
  _externalinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _brandinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _brandiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _brandflag_ = 0u;
}

CustomizedInfo::~CustomizedInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.CustomizedInfo)
  SharedDtor();
}

void CustomizedInfo::SharedDtor() {
  _externalinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _brandinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _brandiconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomizedInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomizedInfo::descriptor() {
  protobuf_CustomizedInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CustomizedInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomizedInfo& CustomizedInfo::default_instance() {
  protobuf_CustomizedInfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomizedInfo* CustomizedInfo::New(::google::protobuf::Arena* arena) const {
  CustomizedInfo* n = new CustomizedInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomizedInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.CustomizedInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has__externalinfo()) {
      GOOGLE_DCHECK(!_externalinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_externalinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has__brandinfo()) {
      GOOGLE_DCHECK(!_brandinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_brandinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has__brandiconurl()) {
      GOOGLE_DCHECK(!_brandiconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_brandiconurl_.UnsafeRawStringPointer())->clear();
    }
  }
  _brandflag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CustomizedInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.CustomizedInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _BrandFlag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__brandflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_brandflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ExternalInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__externalinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_externalinfo().data(), this->_externalinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.CustomizedInfo._ExternalInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _BrandInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__brandinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_brandinfo().data(), this->_brandinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.CustomizedInfo._BrandInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _BrandIconURL = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__brandiconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_brandiconurl().data(), this->_brandiconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.CustomizedInfo._BrandIconURL");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.CustomizedInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.CustomizedInfo)
  return false;
#undef DO_
}

void CustomizedInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.CustomizedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 _BrandFlag = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_brandflag(), output);
  }

  // optional string _ExternalInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_externalinfo().data(), this->_externalinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CustomizedInfo._ExternalInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_externalinfo(), output);
  }

  // optional string _BrandInfo = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_brandinfo().data(), this->_brandinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CustomizedInfo._BrandInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_brandinfo(), output);
  }

  // optional string _BrandIconURL = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_brandiconurl().data(), this->_brandiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CustomizedInfo._BrandIconURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_brandiconurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.CustomizedInfo)
}

::google::protobuf::uint8* CustomizedInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.CustomizedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 _BrandFlag = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_brandflag(), target);
  }

  // optional string _ExternalInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_externalinfo().data(), this->_externalinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CustomizedInfo._ExternalInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_externalinfo(), target);
  }

  // optional string _BrandInfo = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_brandinfo().data(), this->_brandinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CustomizedInfo._BrandInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_brandinfo(), target);
  }

  // optional string _BrandIconURL = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_brandiconurl().data(), this->_brandiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CustomizedInfo._BrandIconURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_brandiconurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.CustomizedInfo)
  return target;
}

size_t CustomizedInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.CustomizedInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 _BrandFlag = 1;
  if (has__brandflag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_brandflag());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string _ExternalInfo = 2;
    if (has__externalinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_externalinfo());
    }

    // optional string _BrandInfo = 3;
    if (has__brandinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_brandinfo());
    }

    // optional string _BrandIconURL = 4;
    if (has__brandiconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_brandiconurl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomizedInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.CustomizedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomizedInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomizedInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.CustomizedInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.CustomizedInfo)
    MergeFrom(*source);
  }
}

void CustomizedInfo::MergeFrom(const CustomizedInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.CustomizedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__externalinfo();
      _externalinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._externalinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__brandinfo();
      _brandinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._brandinfo_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__brandiconurl();
      _brandiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._brandiconurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      _brandflag_ = from._brandflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CustomizedInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.CustomizedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomizedInfo::CopyFrom(const CustomizedInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.CustomizedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomizedInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void CustomizedInfo::Swap(CustomizedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomizedInfo::InternalSwap(CustomizedInfo* other) {
  _externalinfo_.Swap(&other->_externalinfo_);
  _brandinfo_.Swap(&other->_brandinfo_);
  _brandiconurl_.Swap(&other->_brandiconurl_);
  std::swap(_brandflag_, other->_brandflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomizedInfo::GetMetadata() const {
  protobuf_CustomizedInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CustomizedInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomizedInfo

// required uint32 _BrandFlag = 1;
bool CustomizedInfo::has__brandflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CustomizedInfo::set_has__brandflag() {
  _has_bits_[0] |= 0x00000008u;
}
void CustomizedInfo::clear_has__brandflag() {
  _has_bits_[0] &= ~0x00000008u;
}
void CustomizedInfo::clear__brandflag() {
  _brandflag_ = 0u;
  clear_has__brandflag();
}
::google::protobuf::uint32 CustomizedInfo::_brandflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CustomizedInfo._BrandFlag)
  return _brandflag_;
}
void CustomizedInfo::set__brandflag(::google::protobuf::uint32 value) {
  set_has__brandflag();
  _brandflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CustomizedInfo._BrandFlag)
}

// optional string _ExternalInfo = 2;
bool CustomizedInfo::has__externalinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CustomizedInfo::set_has__externalinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void CustomizedInfo::clear_has__externalinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void CustomizedInfo::clear__externalinfo() {
  _externalinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__externalinfo();
}
const ::std::string& CustomizedInfo::_externalinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CustomizedInfo._ExternalInfo)
  return _externalinfo_.GetNoArena();
}
void CustomizedInfo::set__externalinfo(const ::std::string& value) {
  set_has__externalinfo();
  _externalinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CustomizedInfo._ExternalInfo)
}
#if LANG_CXX11
void CustomizedInfo::set__externalinfo(::std::string&& value) {
  set_has__externalinfo();
  _externalinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CustomizedInfo._ExternalInfo)
}
#endif
void CustomizedInfo::set__externalinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__externalinfo();
  _externalinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CustomizedInfo._ExternalInfo)
}
void CustomizedInfo::set__externalinfo(const char* value, size_t size) {
  set_has__externalinfo();
  _externalinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CustomizedInfo._ExternalInfo)
}
::std::string* CustomizedInfo::mutable__externalinfo() {
  set_has__externalinfo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CustomizedInfo._ExternalInfo)
  return _externalinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomizedInfo::release__externalinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CustomizedInfo._ExternalInfo)
  clear_has__externalinfo();
  return _externalinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomizedInfo::set_allocated__externalinfo(::std::string* _externalinfo) {
  if (_externalinfo != NULL) {
    set_has__externalinfo();
  } else {
    clear_has__externalinfo();
  }
  _externalinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _externalinfo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CustomizedInfo._ExternalInfo)
}

// optional string _BrandInfo = 3;
bool CustomizedInfo::has__brandinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CustomizedInfo::set_has__brandinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void CustomizedInfo::clear_has__brandinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void CustomizedInfo::clear__brandinfo() {
  _brandinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__brandinfo();
}
const ::std::string& CustomizedInfo::_brandinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CustomizedInfo._BrandInfo)
  return _brandinfo_.GetNoArena();
}
void CustomizedInfo::set__brandinfo(const ::std::string& value) {
  set_has__brandinfo();
  _brandinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CustomizedInfo._BrandInfo)
}
#if LANG_CXX11
void CustomizedInfo::set__brandinfo(::std::string&& value) {
  set_has__brandinfo();
  _brandinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CustomizedInfo._BrandInfo)
}
#endif
void CustomizedInfo::set__brandinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__brandinfo();
  _brandinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CustomizedInfo._BrandInfo)
}
void CustomizedInfo::set__brandinfo(const char* value, size_t size) {
  set_has__brandinfo();
  _brandinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CustomizedInfo._BrandInfo)
}
::std::string* CustomizedInfo::mutable__brandinfo() {
  set_has__brandinfo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CustomizedInfo._BrandInfo)
  return _brandinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomizedInfo::release__brandinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CustomizedInfo._BrandInfo)
  clear_has__brandinfo();
  return _brandinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomizedInfo::set_allocated__brandinfo(::std::string* _brandinfo) {
  if (_brandinfo != NULL) {
    set_has__brandinfo();
  } else {
    clear_has__brandinfo();
  }
  _brandinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _brandinfo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CustomizedInfo._BrandInfo)
}

// optional string _BrandIconURL = 4;
bool CustomizedInfo::has__brandiconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CustomizedInfo::set_has__brandiconurl() {
  _has_bits_[0] |= 0x00000004u;
}
void CustomizedInfo::clear_has__brandiconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void CustomizedInfo::clear__brandiconurl() {
  _brandiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__brandiconurl();
}
const ::std::string& CustomizedInfo::_brandiconurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CustomizedInfo._BrandIconURL)
  return _brandiconurl_.GetNoArena();
}
void CustomizedInfo::set__brandiconurl(const ::std::string& value) {
  set_has__brandiconurl();
  _brandiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CustomizedInfo._BrandIconURL)
}
#if LANG_CXX11
void CustomizedInfo::set__brandiconurl(::std::string&& value) {
  set_has__brandiconurl();
  _brandiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CustomizedInfo._BrandIconURL)
}
#endif
void CustomizedInfo::set__brandiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__brandiconurl();
  _brandiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CustomizedInfo._BrandIconURL)
}
void CustomizedInfo::set__brandiconurl(const char* value, size_t size) {
  set_has__brandiconurl();
  _brandiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CustomizedInfo._BrandIconURL)
}
::std::string* CustomizedInfo::mutable__brandiconurl() {
  set_has__brandiconurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CustomizedInfo._BrandIconURL)
  return _brandiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomizedInfo::release__brandiconurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CustomizedInfo._BrandIconURL)
  clear_has__brandiconurl();
  return _brandiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomizedInfo::set_allocated__brandiconurl(::std::string* _brandiconurl) {
  if (_brandiconurl != NULL) {
    set_has__brandiconurl();
  } else {
    clear_has__brandiconurl();
  }
  _brandiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _brandiconurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CustomizedInfo._BrandIconURL)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
