// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AddMsg.proto

#ifndef PROTOBUF_AddMsg_2eproto__INCLUDED
#define PROTOBUF_AddMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "SKBuiltinString_t.pb.h"
#include "SKBuiltinBuffer_t.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class AddMsg;
class AddMsgDefaultTypeInternal;
extern AddMsgDefaultTypeInternal _AddMsg_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_AddMsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_AddMsg_2eproto

// ===================================================================

class AddMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.AddMsg) */ {
 public:
  AddMsg();
  virtual ~AddMsg();

  AddMsg(const AddMsg& from);

  inline AddMsg& operator=(const AddMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMsg& default_instance();

  static inline const AddMsg* internal_default_instance() {
    return reinterpret_cast<const AddMsg*>(
               &_AddMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AddMsg* other);

  // implements Message ----------------------------------------------

  inline AddMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMsg& from);
  void MergeFrom(const AddMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _MsgSource = 10;
  bool has__msgsource() const;
  void clear__msgsource();
  static const int kMsgSourceFieldNumber = 10;
  const ::std::string& _msgsource() const;
  void set__msgsource(const ::std::string& value);
  #if LANG_CXX11
  void set__msgsource(::std::string&& value);
  #endif
  void set__msgsource(const char* value);
  void set__msgsource(const char* value, size_t size);
  ::std::string* mutable__msgsource();
  ::std::string* release__msgsource();
  void set_allocated__msgsource(::std::string* _msgsource);

  // optional string _PushContent = 11;
  bool has__pushcontent() const;
  void clear__pushcontent();
  static const int kPushContentFieldNumber = 11;
  const ::std::string& _pushcontent() const;
  void set__pushcontent(const ::std::string& value);
  #if LANG_CXX11
  void set__pushcontent(::std::string&& value);
  #endif
  void set__pushcontent(const char* value);
  void set__pushcontent(const char* value, size_t size);
  ::std::string* mutable__pushcontent();
  ::std::string* release__pushcontent();
  void set_allocated__pushcontent(::std::string* _pushcontent);

  // required .MMPro.micromsg.SKBuiltinString_t _FromUserName = 2;
  bool has__fromusername() const;
  void clear__fromusername();
  static const int kFromUserNameFieldNumber = 2;
  const ::MMPro::micromsg::SKBuiltinString_t& _fromusername() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__fromusername();
  ::MMPro::micromsg::SKBuiltinString_t* release__fromusername();
  void set_allocated__fromusername(::MMPro::micromsg::SKBuiltinString_t* _fromusername);

  // required .MMPro.micromsg.SKBuiltinString_t _ToUserName = 3;
  bool has__tousername() const;
  void clear__tousername();
  static const int kToUserNameFieldNumber = 3;
  const ::MMPro::micromsg::SKBuiltinString_t& _tousername() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__tousername();
  ::MMPro::micromsg::SKBuiltinString_t* release__tousername();
  void set_allocated__tousername(::MMPro::micromsg::SKBuiltinString_t* _tousername);

  // required .MMPro.micromsg.SKBuiltinString_t _Content = 5;
  bool has__content() const;
  void clear__content();
  static const int kContentFieldNumber = 5;
  const ::MMPro::micromsg::SKBuiltinString_t& _content() const;
  ::MMPro::micromsg::SKBuiltinString_t* mutable__content();
  ::MMPro::micromsg::SKBuiltinString_t* release__content();
  void set_allocated__content(::MMPro::micromsg::SKBuiltinString_t* _content);

  // required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
  bool has__imgbuf() const;
  void clear__imgbuf();
  static const int kImgBufFieldNumber = 8;
  const ::MMPro::micromsg::SKBuiltinBuffer_t& _imgbuf() const;
  ::MMPro::micromsg::SKBuiltinBuffer_t* mutable__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* release__imgbuf();
  void set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf);

  // required int32 _MsgId = 1;
  bool has__msgid() const;
  void clear__msgid();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 _msgid() const;
  void set__msgid(::google::protobuf::int32 value);

  // required int32 _MsgType = 4;
  bool has__msgtype() const;
  void clear__msgtype();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 _msgtype() const;
  void set__msgtype(::google::protobuf::int32 value);

  // required uint32 _Status = 6;
  bool has__status() const;
  void clear__status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::uint32 _status() const;
  void set__status(::google::protobuf::uint32 value);

  // required uint32 _ImgStatus = 7;
  bool has__imgstatus() const;
  void clear__imgstatus();
  static const int kImgStatusFieldNumber = 7;
  ::google::protobuf::uint32 _imgstatus() const;
  void set__imgstatus(::google::protobuf::uint32 value);

  // optional int64 _NewMsgId = 12;
  bool has__newmsgid() const;
  void clear__newmsgid();
  static const int kNewMsgIdFieldNumber = 12;
  ::google::protobuf::int64 _newmsgid() const;
  void set__newmsgid(::google::protobuf::int64 value);

  // required uint32 _CreateTime = 9;
  bool has__createtime() const;
  void clear__createtime();
  static const int kCreateTimeFieldNumber = 9;
  ::google::protobuf::uint32 _createtime() const;
  void set__createtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.AddMsg)
 private:
  void set_has__msgid();
  void clear_has__msgid();
  void set_has__fromusername();
  void clear_has__fromusername();
  void set_has__tousername();
  void clear_has__tousername();
  void set_has__msgtype();
  void clear_has__msgtype();
  void set_has__content();
  void clear_has__content();
  void set_has__status();
  void clear_has__status();
  void set_has__imgstatus();
  void clear_has__imgstatus();
  void set_has__imgbuf();
  void clear_has__imgbuf();
  void set_has__createtime();
  void clear_has__createtime();
  void set_has__msgsource();
  void clear_has__msgsource();
  void set_has__pushcontent();
  void clear_has__pushcontent();
  void set_has__newmsgid();
  void clear_has__newmsgid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _msgsource_;
  ::google::protobuf::internal::ArenaStringPtr _pushcontent_;
  ::MMPro::micromsg::SKBuiltinString_t* _fromusername_;
  ::MMPro::micromsg::SKBuiltinString_t* _tousername_;
  ::MMPro::micromsg::SKBuiltinString_t* _content_;
  ::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf_;
  ::google::protobuf::int32 _msgid_;
  ::google::protobuf::int32 _msgtype_;
  ::google::protobuf::uint32 _status_;
  ::google::protobuf::uint32 _imgstatus_;
  ::google::protobuf::int64 _newmsgid_;
  ::google::protobuf::uint32 _createtime_;
  friend struct protobuf_AddMsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AddMsg

// required int32 _MsgId = 1;
inline bool AddMsg::has__msgid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddMsg::set_has__msgid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddMsg::clear_has__msgid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddMsg::clear__msgid() {
  _msgid_ = 0;
  clear_has__msgid();
}
inline ::google::protobuf::int32 AddMsg::_msgid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._MsgId)
  return _msgid_;
}
inline void AddMsg::set__msgid(::google::protobuf::int32 value) {
  set_has__msgid();
  _msgid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._MsgId)
}

// required .MMPro.micromsg.SKBuiltinString_t _FromUserName = 2;
inline bool AddMsg::has__fromusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddMsg::set_has__fromusername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddMsg::clear_has__fromusername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddMsg::clear__fromusername() {
  if (_fromusername_ != NULL) _fromusername_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__fromusername();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& AddMsg::_fromusername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._FromUserName)
  return _fromusername_ != NULL ? *_fromusername_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* AddMsg::mutable__fromusername() {
  set_has__fromusername();
  if (_fromusername_ == NULL) {
    _fromusername_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AddMsg._FromUserName)
  return _fromusername_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* AddMsg::release__fromusername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AddMsg._FromUserName)
  clear_has__fromusername();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _fromusername_;
  _fromusername_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated__fromusername(::MMPro::micromsg::SKBuiltinString_t* _fromusername) {
  delete _fromusername_;
  _fromusername_ = _fromusername;
  if (_fromusername) {
    set_has__fromusername();
  } else {
    clear_has__fromusername();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AddMsg._FromUserName)
}

// required .MMPro.micromsg.SKBuiltinString_t _ToUserName = 3;
inline bool AddMsg::has__tousername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddMsg::set_has__tousername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddMsg::clear_has__tousername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddMsg::clear__tousername() {
  if (_tousername_ != NULL) _tousername_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__tousername();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& AddMsg::_tousername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._ToUserName)
  return _tousername_ != NULL ? *_tousername_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* AddMsg::mutable__tousername() {
  set_has__tousername();
  if (_tousername_ == NULL) {
    _tousername_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AddMsg._ToUserName)
  return _tousername_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* AddMsg::release__tousername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AddMsg._ToUserName)
  clear_has__tousername();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _tousername_;
  _tousername_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated__tousername(::MMPro::micromsg::SKBuiltinString_t* _tousername) {
  delete _tousername_;
  _tousername_ = _tousername;
  if (_tousername) {
    set_has__tousername();
  } else {
    clear_has__tousername();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AddMsg._ToUserName)
}

// required int32 _MsgType = 4;
inline bool AddMsg::has__msgtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AddMsg::set_has__msgtype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AddMsg::clear_has__msgtype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AddMsg::clear__msgtype() {
  _msgtype_ = 0;
  clear_has__msgtype();
}
inline ::google::protobuf::int32 AddMsg::_msgtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._MsgType)
  return _msgtype_;
}
inline void AddMsg::set__msgtype(::google::protobuf::int32 value) {
  set_has__msgtype();
  _msgtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._MsgType)
}

// required .MMPro.micromsg.SKBuiltinString_t _Content = 5;
inline bool AddMsg::has__content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddMsg::set_has__content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddMsg::clear_has__content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddMsg::clear__content() {
  if (_content_ != NULL) _content_->::MMPro::micromsg::SKBuiltinString_t::Clear();
  clear_has__content();
}
inline const ::MMPro::micromsg::SKBuiltinString_t& AddMsg::_content() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._Content)
  return _content_ != NULL ? *_content_
                         : *::MMPro::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinString_t* AddMsg::mutable__content() {
  set_has__content();
  if (_content_ == NULL) {
    _content_ = new ::MMPro::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AddMsg._Content)
  return _content_;
}
inline ::MMPro::micromsg::SKBuiltinString_t* AddMsg::release__content() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AddMsg._Content)
  clear_has__content();
  ::MMPro::micromsg::SKBuiltinString_t* temp = _content_;
  _content_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated__content(::MMPro::micromsg::SKBuiltinString_t* _content) {
  delete _content_;
  _content_ = _content;
  if (_content) {
    set_has__content();
  } else {
    clear_has__content();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AddMsg._Content)
}

// required uint32 _Status = 6;
inline bool AddMsg::has__status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AddMsg::set_has__status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AddMsg::clear_has__status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AddMsg::clear__status() {
  _status_ = 0u;
  clear_has__status();
}
inline ::google::protobuf::uint32 AddMsg::_status() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._Status)
  return _status_;
}
inline void AddMsg::set__status(::google::protobuf::uint32 value) {
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._Status)
}

// required uint32 _ImgStatus = 7;
inline bool AddMsg::has__imgstatus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AddMsg::set_has__imgstatus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AddMsg::clear_has__imgstatus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AddMsg::clear__imgstatus() {
  _imgstatus_ = 0u;
  clear_has__imgstatus();
}
inline ::google::protobuf::uint32 AddMsg::_imgstatus() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._ImgStatus)
  return _imgstatus_;
}
inline void AddMsg::set__imgstatus(::google::protobuf::uint32 value) {
  set_has__imgstatus();
  _imgstatus_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._ImgStatus)
}

// required .MMPro.micromsg.SKBuiltinBuffer_t _ImgBuf = 8;
inline bool AddMsg::has__imgbuf() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddMsg::set_has__imgbuf() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddMsg::clear_has__imgbuf() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddMsg::clear__imgbuf() {
  if (_imgbuf_ != NULL) _imgbuf_->::MMPro::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has__imgbuf();
}
inline const ::MMPro::micromsg::SKBuiltinBuffer_t& AddMsg::_imgbuf() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._ImgBuf)
  return _imgbuf_ != NULL ? *_imgbuf_
                         : *::MMPro::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* AddMsg::mutable__imgbuf() {
  set_has__imgbuf();
  if (_imgbuf_ == NULL) {
    _imgbuf_ = new ::MMPro::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AddMsg._ImgBuf)
  return _imgbuf_;
}
inline ::MMPro::micromsg::SKBuiltinBuffer_t* AddMsg::release__imgbuf() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AddMsg._ImgBuf)
  clear_has__imgbuf();
  ::MMPro::micromsg::SKBuiltinBuffer_t* temp = _imgbuf_;
  _imgbuf_ = NULL;
  return temp;
}
inline void AddMsg::set_allocated__imgbuf(::MMPro::micromsg::SKBuiltinBuffer_t* _imgbuf) {
  delete _imgbuf_;
  _imgbuf_ = _imgbuf;
  if (_imgbuf) {
    set_has__imgbuf();
  } else {
    clear_has__imgbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AddMsg._ImgBuf)
}

// required uint32 _CreateTime = 9;
inline bool AddMsg::has__createtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AddMsg::set_has__createtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AddMsg::clear_has__createtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AddMsg::clear__createtime() {
  _createtime_ = 0u;
  clear_has__createtime();
}
inline ::google::protobuf::uint32 AddMsg::_createtime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._CreateTime)
  return _createtime_;
}
inline void AddMsg::set__createtime(::google::protobuf::uint32 value) {
  set_has__createtime();
  _createtime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._CreateTime)
}

// optional string _MsgSource = 10;
inline bool AddMsg::has__msgsource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddMsg::set_has__msgsource() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddMsg::clear_has__msgsource() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddMsg::clear__msgsource() {
  _msgsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__msgsource();
}
inline const ::std::string& AddMsg::_msgsource() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._MsgSource)
  return _msgsource_.GetNoArena();
}
inline void AddMsg::set__msgsource(const ::std::string& value) {
  set_has__msgsource();
  _msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._MsgSource)
}
#if LANG_CXX11
inline void AddMsg::set__msgsource(::std::string&& value) {
  set_has__msgsource();
  _msgsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.AddMsg._MsgSource)
}
#endif
inline void AddMsg::set__msgsource(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__msgsource();
  _msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.AddMsg._MsgSource)
}
inline void AddMsg::set__msgsource(const char* value, size_t size) {
  set_has__msgsource();
  _msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.AddMsg._MsgSource)
}
inline ::std::string* AddMsg::mutable__msgsource() {
  set_has__msgsource();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AddMsg._MsgSource)
  return _msgsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMsg::release__msgsource() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AddMsg._MsgSource)
  clear_has__msgsource();
  return _msgsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMsg::set_allocated__msgsource(::std::string* _msgsource) {
  if (_msgsource != NULL) {
    set_has__msgsource();
  } else {
    clear_has__msgsource();
  }
  _msgsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _msgsource);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AddMsg._MsgSource)
}

// optional string _PushContent = 11;
inline bool AddMsg::has__pushcontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddMsg::set_has__pushcontent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddMsg::clear_has__pushcontent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddMsg::clear__pushcontent() {
  _pushcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__pushcontent();
}
inline const ::std::string& AddMsg::_pushcontent() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._PushContent)
  return _pushcontent_.GetNoArena();
}
inline void AddMsg::set__pushcontent(const ::std::string& value) {
  set_has__pushcontent();
  _pushcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._PushContent)
}
#if LANG_CXX11
inline void AddMsg::set__pushcontent(::std::string&& value) {
  set_has__pushcontent();
  _pushcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.AddMsg._PushContent)
}
#endif
inline void AddMsg::set__pushcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__pushcontent();
  _pushcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.AddMsg._PushContent)
}
inline void AddMsg::set__pushcontent(const char* value, size_t size) {
  set_has__pushcontent();
  _pushcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.AddMsg._PushContent)
}
inline ::std::string* AddMsg::mutable__pushcontent() {
  set_has__pushcontent();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.AddMsg._PushContent)
  return _pushcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddMsg::release__pushcontent() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.AddMsg._PushContent)
  clear_has__pushcontent();
  return _pushcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddMsg::set_allocated__pushcontent(::std::string* _pushcontent) {
  if (_pushcontent != NULL) {
    set_has__pushcontent();
  } else {
    clear_has__pushcontent();
  }
  _pushcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _pushcontent);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.AddMsg._PushContent)
}

// optional int64 _NewMsgId = 12;
inline bool AddMsg::has__newmsgid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AddMsg::set_has__newmsgid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AddMsg::clear_has__newmsgid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AddMsg::clear__newmsgid() {
  _newmsgid_ = GOOGLE_LONGLONG(0);
  clear_has__newmsgid();
}
inline ::google::protobuf::int64 AddMsg::_newmsgid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.AddMsg._NewMsgId)
  return _newmsgid_;
}
inline void AddMsg::set__newmsgid(::google::protobuf::int64 value) {
  set_has__newmsgid();
  _newmsgid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.AddMsg._NewMsgId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AddMsg_2eproto__INCLUDED
